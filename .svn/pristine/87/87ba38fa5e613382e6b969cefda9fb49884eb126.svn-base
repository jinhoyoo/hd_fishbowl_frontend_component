{"version":3,"file":"static/js/6607.8f74a8ee.chunk.js","mappings":"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","sources":["pages/forms/Advanced.tsx","pages/forms/hooks/useFormValidation.ts","pages/forms/hooks/useTypeahead.ts"],"sourcesContent":["import { Row, Col, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Select from 'react-select';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport MaskedInput from 'react-text-mask';\nimport { HyperDatepicker, PageTitle } from 'components';\nimport { useDatePicker } from 'hooks';\nimport { useTypeahead } from './hooks';\n\nconst ReactSelect = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">\n                    <a rel=\"noreferrer\" href=\"https://github.com/JedWatson/react-select\" target=\"_blank\">\n                        React select\n                    </a>\n                </h4>\n                <p className=\"mb-1 mt-2 fw-bold text-muted\">Single Selection</p>\n                <p className=\"text-muted font-14\">React-Select based Select element</p>\n                <Select\n                    className=\"react-select\"\n                    classNamePrefix=\"react-select\"\n                    options={[\n                        { value: 'chocolate', label: 'Chocolate' },\n                        { value: 'strawberry', label: 'Strawberry' },\n                        { value: 'vanilla', label: 'Vanilla' },\n                    ]}\n                ></Select>\n\n                <p className=\"mb-1 mt-3 fw-bold text-muted\">Multiple Selection</p>\n                <p className=\"text-muted font-14\">React-Select based Select (Multiple) element</p>\n                <Select\n                    isMulti={true}\n                    options={[\n                        { value: 'chocolate', label: 'Chocolate' },\n                        { value: 'strawberry', label: 'Strawberry' },\n                        { value: 'vanilla', label: 'Vanilla' },\n                    ]}\n                    className=\"react-select\"\n                    classNamePrefix=\"react-select\"\n                ></Select>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Typeaheads = () => {\n    const { options, singleSelections, multiSelections, onChangeSingleSelection, onChangeMultipleSelection } =\n        useTypeahead();\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">\n                    <a rel=\"noreferrer\" href=\"http://ericgio.github.io/react-bootstrap-typeahead/\" target=\"_blank\">\n                        Typeahead\n                    </a>\n                </h4>\n                <p className=\"mb-1 mt-2 fw-bold text-muted\">Single Selection</p>\n                <p className=\"text-muted font-14\">Typeahead based Select element</p>\n                <Typeahead\n                    id=\"select2\"\n                    labelKey={'label'}\n                    multiple={false}\n                    onChange={onChangeSingleSelection}\n                    options={options}\n                    placeholder=\"Choose a state...\"\n                    selected={singleSelections}\n                />\n\n                <p className=\"mb-1 mt-3 fw-bold text-muted\">Multiple Selection</p>\n                <p className=\"text-muted font-14\">Typeahead based Select (Multiple) element</p>\n                <Typeahead\n                    id=\"select3\"\n                    labelKey=\"label\"\n                    multiple\n                    onChange={onChangeMultipleSelection}\n                    options={options}\n                    placeholder=\"Choose a state...\"\n                    selected={multiSelections}\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst DatePickers = () => {\n    const { selectedDate, onDateChange } = useDatePicker();\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Date &amp; Time Picker</h4>\n                <p className=\"text-muted font-14\">\n                    A simple date picker using{' '}\n                    <a rel=\"noreferrer\" href=\"https://reactdatepicker.com/\" target=\"_blank\">\n                        ReactJS Datepicker\n                    </a>\n                </p>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label>Single Date</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label>Single Date with multiple months</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                monthsShown={2}\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group mb-3\">\n                            <label className=\"form-label\">Custom date format</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                dateFormat=\"yyyy-MM-dd\"\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label>Specific date range</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                minDate={new Date()}\n                                maxDate={new Date(new Date().setDate(new Date().getDate() + 7))}\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label>Select Time</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                showTimeSelect\n                                timeFormat=\"HH:mm\"\n                                tI={60}\n                                dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                timeCaption=\"time\"\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label>Time only</label> <br />\n                            <HyperDatepicker\n                                hideAddon={true}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                tI={60}\n                                dateFormat=\"h:mm aa\"\n                                timeCaption=\"Time\"\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst InputMasks = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Input Masks</h4>\n                <p className=\"text-muted font-14\">\n                    Input masks by{' '}\n                    <Link\n                        rel=\"noreferrer\"\n                        to={{ pathname: 'https://github.com/text-mask/text-mask/tree/master/react#readme' }}\n                        target=\"_blank\"\n                    >\n                        react-text-mask\n                    </Link>\n                </p>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Phone Number with Area Code</label> <br />\n                            <MaskedInput\n                                mask={[\n                                    '(',\n                                    /[1-9]/,\n                                    /\\d/,\n                                    ')',\n                                    ' ',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    '-',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                ]}\n                                placeholder=\"(__) ____-____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>US Phone Number</label> <br />\n                            <MaskedInput\n                                mask={[\n                                    '(',\n                                    /[1-9]/,\n                                    /\\d/,\n                                    /\\d/,\n                                    ')',\n                                    ' ',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    '-',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                ]}\n                                placeholder=\"(___) ___-____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Date</label> <br />\n                            <MaskedInput\n                                mask={[/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]}\n                                placeholder=\"__/__/____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"form-group\">\n                            <label>Time</label> <br />\n                            <MaskedInput\n                                mask={[/\\d/, /\\d/, ':', /\\d/, /\\d/, ':', /\\d/, /\\d/]}\n                                placeholder=\"__:__:__\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst FormAdvanced = () => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Forms', path: '/forms/advanced' },\n                    { label: 'Form Advanced', path: '/forms/advanced', active: true },\n                ]}\n                title={'Form Advanced'}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <ReactSelect />\n                </Col>\n                <Col lg={6}>\n                    <Typeaheads />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <DatePickers />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <InputMasks />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default FormAdvanced;\n","import { useToggle } from 'hooks';\n\nexport default function useFormValidation() {\n    const [isValidated, , setValidated] = useToggle();\n\n    /*\n     * handle form submission\n     */\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        setValidated();\n    };\n\n    return {\n        isValidated,\n        handleSubmit,\n    };\n}\n","import { useState } from 'react';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\n\ntype TypeaheadOption = string | Record<string, Object>;\n\nexport default function useTypeahead() {\n    const [singleSelections, setSingleSelections] = useState<TypeaheadOption[]>([]);\n    const [multiSelections, setMultiSelections] = useState<TypeaheadOption[]>([]);\n\n    const options: Array<TypeaheadOption> = [\n        { id: 1, value: 'chocolate', label: 'Chocolate' },\n        { id: 2, value: 'strawberry', label: 'Strawberry' },\n        { id: 3, value: 'vanilla', label: 'Vanilla' },\n    ];\n\n    const onChangeSingleSelection = (selected: TypeaheadOption[]) => {\n        setSingleSelections(selected);\n    };\n\n    const onChangeMultipleSelection = (selected: TypeaheadOption[]) => {\n        setMultiSelections(selected);\n    };\n\n    return {\n        options,\n        singleSelections,\n        multiSelections,\n        onChangeSingleSelection,\n        onChangeMultipleSelection,\n    };\n}\n"],"names":["ReactSelect","className","rel","href","target","classNamePrefix","options","value","label","isMulti","Typeaheads","useTypeahead","singleSelections","multiSelections","onChangeSingleSelection","onChangeMultipleSelection","id","labelKey","multiple","onChange","placeholder","selected","DatePickers","useDatePicker","selectedDate","onDateChange","lg","hideAddon","date","monthsShown","dateFormat","minDate","Date","maxDate","setDate","getDate","showTimeSelect","timeFormat","tI","timeCaption","showTimeSelectOnly","InputMasks","to","pathname","mask","breadCrumbItems","path","active","title","useFormValidation","useToggle","isValidated","setValidated","handleSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","useState","setSingleSelections","setMultiSelections"],"sourceRoot":""}