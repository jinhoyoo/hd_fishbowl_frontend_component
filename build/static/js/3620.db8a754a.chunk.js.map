{"version":3,"file":"static/js/3620.db8a754a.chunk.js","mappings":"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","sources":["pages/apps/CRM/Management/RevenueStatistics.tsx","pages/apps/CRM/Management/Projects/ProjectOverview.tsx","pages/apps/CRM/Management/Projects/useProjectOverview.ts","pages/apps/CRM/Management/Projects/Projects.tsx","pages/apps/CRM/Management/data.ts","pages/apps/CRM/Management/ClientWidget.tsx","pages/apps/CRM/Management/MonthlyProgress.tsx","pages/apps/CRM/Management/TaskStatus.tsx","pages/apps/CRM/Management/Calendar.tsx","pages/apps/CRM/Management/CRMManagement.tsx"],"sourcesContent":["import { Card } from 'react-bootstrap';\nimport Chart from 'react-apexcharts';\nimport { ApexOptions } from 'apexcharts';\nimport { CardTitle } from 'components';\n\nconst RevenueStatistics = () => {\n    const apexLineChartWithLables: ApexOptions = {\n        chart: {\n            height: 364,\n            type: 'line',\n            dropShadow: {\n                enabled: true,\n                opacity: 0.1,\n                blur: 7,\n                left: -7,\n                top: 7,\n            },\n            parentHeightOffset: 0,\n        },\n        grid: {\n            padding: {\n                left: 20,\n                right: 0,\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 4,\n        },\n        legend: {\n            show: false,\n        },\n        colors: ['#727cf5', '#0acf97'],\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            tooltip: {\n                enabled: false,\n            },\n            axisBorder: {\n                show: false,\n            },\n        },\n        yaxis: {\n            labels: {\n                formatter: function (val) {\n                    return val + 'k';\n                },\n            },\n        },\n    };\n\n    const apexLineChartWithLablesData = [\n        {\n            name: 'Budget',\n            data: [10, 20, 15, 28, 22, 34],\n        },\n        {\n            name: 'Revenue',\n            data: [2, 26, 10, 38, 30, 48],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <CardTitle\n                    containerClass=\"d-flex align-items-center justify-content-between mb-1\"\n                    title=\"Revenue Statistics\"\n                    menuItems={[\n                        { label: 'Today' },\n                        { label: 'Yesterday' },\n                        { label: 'Last Week' },\n                        { label: 'Last Month' },\n                    ]}\n                />\n                <Chart\n                    options={apexLineChartWithLables}\n                    series={apexLineChartWithLablesData}\n                    type=\"line\"\n                    className=\"apex-charts mt-2\"\n                    height={361}\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RevenueStatistics;\n","import { Link } from 'react-router-dom';\nimport { Badge, Card, Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { CardTitle } from 'components';\nimport { Project } from '../types';\nimport useProjectOverview from './useProjectOverview';\n\nconst ProjectOverview = ({ project }: { project: Project }) => {\n    const displayCount = 2;\n    const { modifiedTeamMembers } = useProjectOverview(project, displayCount);\n\n    return (\n        <Card>\n            <Card.Body>\n                <CardTitle\n                    containerClass=\"d-flex justify-content-between mb-3\"\n                    title={\n                        <>\n                            <div className=\"flex-shrink-0\">\n                                <div className=\"avatar-sm\">\n                                    <span\n                                        className={classNames(\n                                            'avatar-title',\n                                            'bg-' + project.variant + '-lighten',\n                                            'text-' + project.variant,\n                                            'rounded'\n                                        )}\n                                    >\n                                        <i className={classNames(project.icon, 'font-24')} />\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"flex-grow-1 ms-3\">\n                                <Link to=\"#\" className=\"font-16 fw-bold text-secondary\">\n                                    {project.title}{' '}\n                                    <i className=\"mdi mdi-checkbox-marked-circle-outline text-success\"></i>\n                                </Link>\n                                <p className=\"text-muted mb-0\">{project.subTitle}</p>\n                            </div>\n                        </>\n                    }\n                    menuItems={[\n                        { label: 'Edit', icon: 'uil uil-pen' },\n                        { label: 'Remove', icon: 'uil uil-trash', variant: 'text-danger' },\n                    ]}\n                />\n                <Badge bg=\"light\" pill className=\"badge-lg text-secondary me-1\">\n                    Work in Progress\n                </Badge>\n                <span className=\"font-12 fw-semibold text-muted\">\n                    <i className=\"mdi mdi-clock-time-four me-1\"></i>\n                    {project.hours} Hours\n                </span>\n\n                <Row className=\"mt-2\">\n                    <Col xs={6}>\n                        <p className=\"text-muted fw-semibold mb-1\">Tasks</p>\n                        <h3 className=\"my-0 text-muted fw-normal\">{project.task}</h3>\n                    </Col>\n                    <Col xs={6} className=\"text-end\">\n                        <p className=\"text-muted fw-semibold mb-1\">Assign to</p>\n                        <div className=\"multi-user\">\n                            {(modifiedTeamMembers || []).map((assign, index) => {\n                                return (\n                                    <Link to=\"#\" className=\"d-inline-block\" key={index.toString()}>\n                                        <img src={assign.avatar} alt=\"\" className=\"rounded-circle avatar-xs\" />\n                                    </Link>\n                                );\n                            })}\n                            {project.assignTo.length > modifiedTeamMembers.length && (\n                                <Link to=\"#\" className=\"d-inline-block ms-n2\">\n                                    <div className=\"avatar-xs\">\n                                        <span className=\"avatar-title bg-primary rounded-circle\">\n                                            {project.assignTo.length - displayCount}+\n                                        </span>\n                                    </div>\n                                </Link>\n                            )}\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ProjectOverview;\n","import { Project } from '../types';\n\nexport default function useProjectOverview(project: Project, displayCount: number) {\n    let modifiedTeamMembers;\n\n    if (project.assignTo.length <= displayCount || project.assignTo.length - displayCount === 1) {\n        modifiedTeamMembers = project.assignTo;\n    } else {\n        modifiedTeamMembers = project.assignTo.filter((m, index) => index < displayCount);\n    }\n\n    return { modifiedTeamMembers };\n}\n","import { Col, Row } from 'react-bootstrap';\nimport { Project } from '../types';\nimport ProjectOverview from './ProjectOverview';\n\ntype ProjectsProps = {\n    projectsData: Array<Project>;\n};\n\nconst Projects = ({ projectsData }: ProjectsProps) => {\n    return (\n        <Row>\n            {(projectsData || []).map((project, index) => {\n                return (\n                    <Col md={6} key={index.toString()}>\n                        <ProjectOverview project={project} />\n                    </Col>\n                );\n            })}\n        </Row>\n    );\n};\n\nexport { Projects };\n","import { Message } from 'components';\nimport { Client, MonthlyProgressItem, Project, Task } from './types';\nimport avatar1 from 'assets/images/users/avatar-1.jpg';\nimport avatar2 from 'assets/images/users/avatar-2.jpg';\nimport avatar3 from 'assets/images/users/avatar-3.jpg';\nimport avatar4 from 'assets/images/users/avatar-4.jpg';\nimport avatar5 from 'assets/images/users/avatar-5.jpg';\nimport avatar6 from 'assets/images/users/avatar-6.jpg';\n\nconst projectsData: Project[] = [\n    {\n        icon: 'mdi mdi-shopping-outline',\n        variant: 'primary',\n        title: 'Ecommerce App Design',\n        subTitle: 'Dashboard, Pages & Auth Pages',\n        hours: 145,\n        task: 16,\n        assignTo: [\n            {\n                avatar: avatar1,\n            },\n            {\n                avatar: avatar2,\n            },\n            {\n                avatar: avatar3,\n            },\n        ],\n    },\n    {\n        icon: 'mdi mdi-account-network',\n        variant: 'success',\n        title: 'Client Power System',\n        subTitle: 'Dashboard, Power System Pages',\n        hours: 260,\n        task: 24,\n        assignTo: [\n            {\n                avatar: avatar4,\n            },\n            {\n                avatar: avatar3,\n            },\n        ],\n    },\n    {\n        icon: 'mdi mdi-page-layout-header',\n        variant: 'info',\n        title: 'Landing Pages Design',\n        subTitle: 'Business Landing with Auth Pages',\n        hours: 48,\n        task: 5,\n        assignTo: [\n            {\n                avatar: avatar5,\n            },\n            {\n                avatar: avatar6,\n            },\n        ],\n    },\n    {\n        icon: 'mdi mdi-monitor-dashboard',\n        variant: 'danger',\n        title: 'Business Dashboard Design',\n        subTitle: 'Dashboard, Components Pages',\n        hours: 24,\n        task: 8,\n        assignTo: [\n            {\n                avatar: avatar5,\n            },\n            {\n                avatar: avatar6,\n            },\n            {\n                avatar: avatar1,\n            },\n            {\n                avatar: avatar2,\n            },\n        ],\n    },\n];\n\nconst clients: Client[] = [\n    {\n        avatar: avatar1,\n        name: 'Kevin Snowden',\n        companyName: 'Simple Solutions LLC',\n        date: 'Jan 05 2022',\n    },\n    {\n        avatar: avatar2,\n        name: 'Steven Embry',\n        companyName: 'Flipside Records LLC',\n        date: 'Jan 10 2022',\n    },\n    {\n        avatar: avatar3,\n        name: 'James McDonald',\n        companyName: 'Vision Clinics LLC',\n        date: 'Jan 12 2022',\n    },\n    {\n        avatar: avatar4,\n        name: 'Ralph Wolford',\n        companyName: 'Merry-Go-Round LLC',\n        date: 'Jan 18 2022',\n    },\n    {\n        avatar: avatar5,\n        name: 'Tomas Cooper',\n        companyName: 'Museum LLC',\n        date: 'Feb 02 2022',\n    },\n];\n\nconst progressDetails: MonthlyProgressItem[] = [\n    {\n        avatar: avatar1,\n        name: 'Adam Baldwin',\n        emailId: 'AdamNBaldwin@dayrep.com',\n        projectName: 'Admin Dashboard',\n        status: 'In Progress',\n    },\n    {\n        avatar: avatar2,\n        name: 'Peter Wallace',\n        emailId: 'PeterGWallace@dayrep.com',\n        projectName: 'Landing Page',\n        status: 'Completed',\n    },\n    {\n        avatar: avatar3,\n        name: 'Jacob Dunn',\n        emailId: 'JacobEDunn@dayrep.com',\n        projectName: 'Logo Design',\n        status: 'Pending',\n    },\n    {\n        avatar: avatar4,\n        name: 'Terry Adams',\n        emailId: 'TerryCAdams@dayrep.com',\n        projectName: 'Client Project',\n        status: 'In Progress',\n    },\n    {\n        avatar: avatar5,\n        name: 'Jason Stovall',\n        emailId: 'JasonJStovall@armyspy.com',\n        projectName: 'Figma Work',\n        status: 'Pending',\n    },\n];\n\nconst tasks: Task[] = [\n    {\n        icon: 'mdi mdi-file-edit',\n        variant: 'primary',\n        title: 'Running Project',\n        totalTask: 160,\n        completedTask: 145,\n        progressValue: 91,\n    },\n    {\n        icon: 'mdi mdi-account-multiple',\n        variant: 'success',\n        title: 'Active Clients',\n        totalTask: 85,\n        completedTask: 40,\n        progressValue: 47,\n    },\n    {\n        icon: 'mdi mdi-account-multiple-plus',\n        variant: 'danger',\n        title: 'New Request',\n        progressValue: 68,\n    },\n    {\n        icon: 'mdi mdi-emoticon-happy',\n        variant: 'info',\n        title: 'Happy Clients',\n        totalTask: 50,\n        completedTask: 48,\n        progressValue: 90,\n    },\n];\n\nconst chatMessages: Message[] = [\n    {\n        id: 1,\n        userPic: avatar1,\n        userName: 'Geneva',\n        text: 'Hello!',\n        postedOn: '10:00',\n    },\n    {\n        id: 2,\n        userPic: avatar5,\n        userName: 'Dominic',\n        text: 'Hi, How are you? What about our next meeting?',\n        postedOn: '10:01',\n    },\n    {\n        id: 3,\n        userPic: avatar1,\n        userName: 'Geneva',\n        text: 'Yeah everything is fine',\n        postedOn: '10:02',\n    },\n    {\n        id: 4,\n        userPic: avatar5,\n        userName: 'Dominic',\n        text: \"Wow that's great!\",\n        postedOn: '10:03',\n    },\n    {\n        id: 5,\n        userPic: avatar1,\n        userName: 'Dominic',\n        text: 'Cool!',\n        postedOn: '10:03',\n    },\n];\nexport { projectsData, clients, progressDetails, tasks, chatMessages };\n","import { Card, Col, Modal, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { CardTitle, ChatList } from 'components';\nimport { useToggle } from 'hooks';\nimport { Client } from './types';\nimport { chatMessages } from './data';\nimport clientImg from 'assets/images/users/avatar-4.jpg';\n\ntype ClientWidgetProps = {\n    clients: Array<Client>;\n};\n\nconst ClientWidget = ({ clients }: ClientWidgetProps) => {\n    const [isOpen, toggleModal] = useToggle();\n\n    return (\n        <>\n            {(clients || []).map((client, index) => {\n                return (\n                    <Col key={index.toString()}>\n                        <Card>\n                            <Card.Body>\n                                <CardTitle\n                                    containerClass=\"d-flex\"\n                                    title={\n                                        <>\n                                            <div className=\"flex-shrink-0\">\n                                                <img src={client.avatar} alt=\"\" className=\"rounded-circle avatar-sm\" />\n                                            </div>\n                                            <div className=\"flex-grow-1 ms-2\">\n                                                <Link to=\"#\" className=\"text-secondary\">\n                                                    <h5 className=\"my-1\">{client.name}</h5>\n                                                </Link>\n                                                <p className=\"text-muted mb-0\">{client.companyName}</p>\n                                            </div>\n                                        </>\n                                    }\n                                    icon=\"mdi mdi-dots-horizontal\"\n                                    menuItems={[\n                                        { label: 'Visite Profile', icon: 'mdi mdi-account' },\n                                        { label: 'Block', icon: 'mdi mdi-block-helper' },\n                                        {\n                                            label: 'Remove',\n                                            icon: 'mdi mdi-trash-can-outline',\n                                            variant: 'text-danger',\n                                            hasDivider: true,\n                                        },\n                                    ]}\n                                />\n                            </Card.Body>\n                            <div className=\"d-flex justify-content-between align-items-center card-body py-2 border-top border-light\">\n                                <h5 className=\"my-0 font-13 fw-semibold text-muted\">\n                                    <i className=\"mdi mdi-calendar me-1\"></i>\n                                    Jan 05 2022\n                                </h5>\n                                <Link to=\"#\" className=\"text-muted\" onClick={toggleModal}>\n                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Chat</Tooltip>}>\n                                        <i className=\"uil uil-comment-alt-lines font-18\"></i>\n                                    </OverlayTrigger>\n                                </Link>\n                            </div>\n                        </Card>\n                    </Col>\n                );\n            })}\n\n            <Modal show={isOpen} onHide={toggleModal}>\n                <Modal.Header onHide={toggleModal} closeButton>\n                    <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                        <div className=\"d-flex align-items-center\">\n                            <div className=\"flex-shrink-0\">\n                                <img className=\"rounded-circle\" src={clientImg} height=\"40\" alt=\"AvtarImage\" />\n                            </div>\n                            <div className=\"flex-grow-1 ms-2\">\n                                <Link to=\"#\" className=\"text-secondary\">\n                                    Kevin Snowden\n                                </Link>\n                                <p className=\"text-muted fw-normal font-14 mb-0\">\n                                    <i className=\"mdi mdi-circle text-success font-12 me-1\"></i>\n                                    Online\n                                </p>\n                            </div>\n                        </div>\n                    </h5>\n                </Modal.Header>\n                <Modal.Body className=\"p-0\">\n                    <ChatList chatMessages={chatMessages}></ChatList>\n                </Modal.Body>\n            </Modal>\n        </>\n    );\n};\n\nexport default ClientWidget;\n","import { Badge, Card, Table, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { CardTitle } from 'components';\nimport { MonthlyProgressItem } from './types';\n\ntype MonthlyProgressProps = {\n    progressDetails: Array<MonthlyProgressItem>;\n};\n\nconst MonthlyProgress = ({ progressDetails }: MonthlyProgressProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <CardTitle\n                    containerClass=\"d-flex align-items-center justify-content-between\"\n                    title=\"Monthly Progress\"\n                    menuItems={[\n                        { label: 'Today' },\n                        { label: 'Yesterday' },\n                        { label: 'Last Week' },\n                        { label: 'Last Month' },\n                    ]}\n                />\n                <Table responsive className=\"table-centered table-nowrap mb-0\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Employee Name</th>\n                            <th scope=\"col\">Email Address</th>\n                            <th scope=\"col\">Project Name</th>\n                            <th scope=\"col\">Status</th>\n                            <th scope=\"col\">Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {(progressDetails || []).map((progress, index) => {\n                            return (\n                                <tr key={index.toString()}>\n                                    <td>\n                                        <div className=\"d-flex align-items-center\">\n                                            <div className=\"flex-shrink-0\">\n                                                <img\n                                                    src={progress.avatar}\n                                                    alt=\"\"\n                                                    className=\"rounded-circle\"\n                                                    width=\"31\"\n                                                />\n                                            </div>\n                                            <div className=\"flex-grow-1 ms-2\">{progress.name}</div>\n                                        </div>\n                                    </td>\n                                    <td>{progress.emailId}</td>\n                                    <td>{progress.projectName}</td>\n                                    <td>\n                                        <Badge\n                                            className={classNames({\n                                                'bg-primary-lighten text-primary': progress.status === 'In Progress',\n                                                'bg-success-lighten text-success': progress.status === 'Completed',\n                                                'bg-warning-lighten text-warning': progress.status === 'Pending',\n                                            })}\n                                        >\n                                            {progress.status}\n                                        </Badge>\n                                    </td>\n                                    <td>\n                                        <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit</Tooltip>}>\n                                            <Link to=\"#\" className=\"font-18 text-info me-2\">\n                                                <i className=\"uil uil-pen\"></i>\n                                            </Link>\n                                        </OverlayTrigger>\n                                        <OverlayTrigger placement=\"top\" overlay={<Tooltip>Delete</Tooltip>}>\n                                            <Link to=\"#\" className=\"font-18 text-danger\">\n                                                <i className=\"uil uil-trash\"></i>\n                                            </Link>\n                                        </OverlayTrigger>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default MonthlyProgress;\n","import { Card, ProgressBar } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { CardTitle } from 'components';\nimport { Task } from './types';\n\ntype TaskStatusProps = {\n    tasks: Array<Task>;\n};\n\nconst TaskStatus = ({ tasks }: TaskStatusProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <CardTitle\n                    containerClass=\"d-flex align-items-center justify-content-between mb-3\"\n                    title=\"Task Status\"\n                    menuItems={[\n                        { label: 'Today' },\n                        { label: 'Yesterday' },\n                        { label: 'Last Week' },\n                        { label: 'Last Month' },\n                    ]}\n                />\n                {(tasks || []).map((task, index) => {\n                    return (\n                        <div className={classNames({ 'mb-4': index < tasks.length - 1 })} key={index.toString()}>\n                            <div className=\"d-flex align-items-center mb-2\">\n                                <div className=\"flex-shrink-0\">\n                                    <i\n                                        className={classNames(\n                                            task.icon,\n                                            'widget-icon',\n                                            'bg-' + task.variant + '-lighten',\n                                            'text-' + task.variant\n                                        )}\n                                    />\n                                </div>\n                                <div className=\"flex-grow-1 ms-2\">\n                                    <h5 className=\"my-0 fw-semibold\">{task.title}</h5>\n                                </div>\n                                {task.completedTask ? (\n                                    <h5 className=\"my-0\">\n                                        {task.completedTask}/{task.totalTask}\n                                    </h5>\n                                ) : (\n                                    <h5 className=\"my-0\">{task.progressValue}%</h5>\n                                )}\n                            </div>\n                            <ProgressBar variant={task.variant} now={task.progressValue} style={{ height: 6 }} />\n                        </div>\n                    );\n                })}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default TaskStatus;\n","import { useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport { CardTitle, HyperDatepicker } from 'components';\n\nconst Calendar = () => {\n    const [date, setDate] = useState<Date>(new Date());\n\n    return (\n        <Card>\n            <Card.Body className=\"pb-1\">\n                <CardTitle\n                    containerClass=\"d-flex align-items-center justify-content-between\"\n                    title=\"Calendar\"\n                    menuItems={[\n                        { label: 'Today' },\n                        { label: 'Yesterday' },\n                        { label: 'Last Week' },\n                        { label: 'Last Month' },\n                    ]}\n                />\n            </Card.Body>\n            <Card.Body className=\"calendar-widget px-2 pb-2 pt-0\">\n                <HyperDatepicker value={date} onChange={(date) => setDate(date)} inline />\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Calendar;\n","import { Col, Row } from 'react-bootstrap';\nimport { PageTitle } from 'components';\nimport RevenueStatistics from './RevenueStatistics';\nimport Projects from './Projects';\nimport ClientWidget from './ClientWidget';\nimport MonthlyProgress from './MonthlyProgress';\nimport TaskStatus from './TaskStatus';\nimport Calendar from './Calendar';\nimport { clients, progressDetails, projectsData, tasks } from './data';\n\nconst CRMManagement = () => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'CRM', path: '/apps/crm/management' },\n                    { label: 'Management', path: '/apps/crm/management', active: true },\n                ]}\n                title={'Management'}\n            />\n\n            <Row>\n                <Col xxl={6}>\n                    <RevenueStatistics />\n                </Col>\n                <Col xxl={6}>\n                    <Projects projectsData={projectsData} />\n                </Col>\n            </Row>\n\n            <h4 className=\"page-title mb-3\">Recently Updated Clients</h4>\n\n            <Row className=\"row-cols-1 row-cols-sm-2 row-cols-lg-3 row-cols-xxl-5\">\n                <ClientWidget clients={clients} />\n            </Row>\n\n            <Row>\n                <Col xxl={6}>\n                    <MonthlyProgress progressDetails={progressDetails} />\n                </Col>\n                <Col xxl={3} md={6}>\n                    <TaskStatus tasks={tasks} />\n                </Col>\n                <Col xxl={3} md={6}>\n                    <Calendar />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport { CRMManagement };\n"],"names":["Card","containerClass","title","menuItems","label","options","chart","height","type","dropShadow","enabled","opacity","blur","left","top","parentHeightOffset","grid","padding","right","dataLabels","stroke","curve","width","legend","show","colors","xaxis","categories","tooltip","axisBorder","yaxis","labels","formatter","val","series","name","data","className","project","displayCount","modifiedTeamMembers","assignTo","length","filter","m","index","useProjectOverview","classNames","variant","icon","to","subTitle","Badge","bg","pill","hours","Row","Col","xs","task","map","assign","src","avatar","alt","toString","Projects","projectsData","md","avatar1","avatar2","avatar3","avatar4","avatar5","avatar6","clients","companyName","date","progressDetails","emailId","projectName","status","tasks","totalTask","completedTask","progressValue","chatMessages","id","userPic","userName","text","postedOn","useToggle","isOpen","toggleModal","client","hasDivider","onClick","OverlayTrigger","placement","overlay","Tooltip","Modal","onHide","closeButton","clientImg","Table","responsive","scope","progress","ProgressBar","now","style","useState","Date","setDate","value","onChange","inline","CRMManagement","breadCrumbItems","path","active","xxl"],"sourceRoot":""}