{"version":3,"file":"static/js/1308.c4c2da5f.chunk.js","mappings":"2OAsDMA,EAAiC,CACnC,CACIC,OAAQ,WACRC,SAAU,OACVC,gBAAgB,EAChBC,KAlDW,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IAClB,OACI,iBAAKC,UAAU,aAAf,WACI,gBAAKC,IAAKF,EAAIG,SAASC,OAAQC,IAAI,GAAGJ,UAAU,yBAChD,SAAC,KAAD,CAAMK,GAAG,IAAIL,UAAU,wBAAvB,SACKD,EAAIG,SAASI,YA+C1B,CACIX,OAAQ,QACRC,SAAU,QACVC,gBAAgB,GAEpB,CACIF,OAAQ,QACRC,SAAU,QACVC,gBAAgB,GAEpB,CACIF,OAAQ,WACRC,SAAU,WACVC,gBAAgB,GAEpB,CACIF,OAAQ,aACRC,SAAU,aACVC,gBAAgB,GAEpB,CACIF,OAAQ,SACRC,SAAU,SACVC,gBAAgB,EAChBC,KAhEa,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IACpB,OACI,iBACIC,UAAWO,GAAAA,CAAW,QAAS,CAC3B,wBAAiD,WAAxBR,EAAIG,SAASM,OACtC,uBAAgD,YAAxBT,EAAIG,SAASM,SAH7C,SAMKT,EAAIG,SAASM,WA0DtB,CACIb,OAAQ,SACRC,SAAU,SACVC,gBAAgB,EAChBC,KAxDa,SAAC,GAAqC,EAAnCC,IACpB,OACI,iCACI,UAAC,KAAD,CAAMM,GAAG,IAAIL,UAAU,cAAvB,UACK,KACD,cAAGA,UAAU,oBAEjB,UAAC,KAAD,CAAMK,GAAG,IAAIL,UAAU,cAAvB,UACK,KACD,cAAGA,UAAU,oCAEjB,UAAC,KAAD,CAAMK,GAAG,IAAIL,UAAU,cAAvB,UACK,KACD,cAAGA,UAAU,4BA+CvBS,EAA8B,CAChC,CACIC,KAAM,KACNC,MAAO,IAEX,CACID,KAAM,KACNC,MAAO,IAEX,CACID,KAAM,KACNC,MAAO,KA+Df,UA3DkB,WACd,OACI,iCACI,SAAC,KAAD,CACIC,gBAAiB,CACb,CAAEC,MAAO,YAAaC,KAAM,6BAC5B,CACID,MAAO,YACPC,KAAM,4BACNC,QAAQ,IAGhBC,MAAO,eAGX,SAAC,IAAD,WACI,SAAC,IAAD,CAAKC,GAAI,GAAT,UACI,SAAC,IAAD,WACI,UAAC,SAAD,YACI,UAAC,IAAD,YACI,SAAC,IAAD,CAAKC,GAAI,EAAT,UACI,UAAC,IAAD,CAAQlB,UAAU,sBAAlB,WACI,cAAGA,UAAU,6BADjB,uBAKJ,SAAC,IAAD,CAAKkB,GAAI,EAAT,UACI,iBAAKlB,UAAU,cAAf,WACI,SAAC,IAAD,CAAQA,UAAU,4BAAlB,UACI,cAAGA,UAAU,mBAGjB,SAAC,IAAD,CAAQA,UAAU,0BAAlB,qBAEA,SAAC,IAAD,CAAQA,UAAU,qBAAlB,6BAKZ,SAAC,KAAD,CACIN,QAASA,EACTyB,KAAMC,EAAAA,GACNC,SAAU,GACVZ,gBAAiBA,EACjBa,YAAY,EACZC,YAAY,EACZC,cAAc,EACdC,cAAc,EACdC,WAAW,gBACXC,eAAe","sources":["pages/apps/Ecommerce/Customers.tsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { Column } from 'react-table';\nimport { Table, PageTitle, CellFormatter, PageSize } from 'components';\nimport { Customer } from './types';\nimport { customers } from './data';\n\n/* name column render */\nconst NameColumn = ({ row }: CellFormatter<Customer>) => {\n    return (\n        <div className=\"table-user\">\n            <img src={row.original.avatar} alt=\"\" className=\"me-2 rounded-circle\" />\n            <Link to=\"#\" className=\"text-body fw-semibold\">\n                {row.original.name}\n            </Link>\n        </div>\n    );\n};\n\n/* status column render */\nconst StatusColumn = ({ row }: CellFormatter<Customer>) => {\n    return (\n        <span\n            className={classNames('badge', {\n                'badge-success-lighten': row.original.status === 'Active',\n                'badge-danger-lighten': row.original.status === 'Blocked',\n            })}\n        >\n            {row.original.status}\n        </span>\n    );\n};\n\n/* action column render */\nconst ActionColumn = ({ row }: CellFormatter<Customer>) => {\n    return (\n        <>\n            <Link to=\"#\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-eye\"></i>\n            </Link>\n            <Link to=\"#\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-square-edit-outline\"></i>\n            </Link>\n            <Link to=\"#\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-delete\"></i>\n            </Link>\n        </>\n    );\n};\n\nconst columns: ReadonlyArray<Column> = [\n    {\n        Header: 'Customer',\n        accessor: 'name',\n        defaultCanSort: true,\n        Cell: NameColumn,\n    },\n    {\n        Header: 'Phone',\n        accessor: 'phone',\n        defaultCanSort: true,\n    },\n    {\n        Header: 'Email',\n        accessor: 'email',\n        defaultCanSort: true,\n    },\n    {\n        Header: 'Location',\n        accessor: 'location',\n        defaultCanSort: true,\n    },\n    {\n        Header: 'Created On',\n        accessor: 'created_on',\n        defaultCanSort: true,\n    },\n    {\n        Header: 'Status',\n        accessor: 'status',\n        defaultCanSort: true,\n        Cell: StatusColumn,\n    },\n    {\n        Header: 'Action',\n        accessor: 'action',\n        defaultCanSort: false,\n        Cell: ActionColumn,\n    },\n];\n\nconst sizePerPageList: PageSize[] = [\n    {\n        text: '10',\n        value: 10,\n    },\n    {\n        text: '25',\n        value: 25,\n    },\n    {\n        text: '50',\n        value: 50,\n    },\n];\n\nconst Customers = () => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'eCommerce', path: '/apps/ecommerce/customers' },\n                    {\n                        label: 'Customers',\n                        path: '/apps/ecommerce/customers',\n                        active: true,\n                    },\n                ]}\n                title={'Customers'}\n            />\n\n            <Row>\n                <Col xs={12}>\n                    <Card>\n                        <Card.Body>\n                            <Row>\n                                <Col sm={5}>\n                                    <Button className=\"btn btn-danger mb-2\">\n                                        <i className=\"mdi mdi-plus-circle me-2\"></i> Add Customers\n                                    </Button>\n                                </Col>\n\n                                <Col sm={7}>\n                                    <div className=\"text-sm-end\">\n                                        <Button className=\"btn btn-success mb-2 me-1\">\n                                            <i className=\"mdi mdi-cog\"></i>\n                                        </Button>\n\n                                        <Button className=\"btn btn-light mb-2 me-1\">Import</Button>\n\n                                        <Button className=\"btn btn-light mb-2\">Export</Button>\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Table<Customer>\n                                columns={columns}\n                                data={customers}\n                                pageSize={10}\n                                sizePerPageList={sizePerPageList}\n                                isSortable={true}\n                                pagination={true}\n                                isSelectable={true}\n                                isSearchable={true}\n                                tableClass=\"table-striped\"\n                                searchBoxClass=\"mt-2 mb-3\"\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Customers;\n"],"names":["columns","Header","accessor","defaultCanSort","Cell","row","className","src","original","avatar","alt","to","name","classNames","status","sizePerPageList","text","value","breadCrumbItems","label","path","active","title","xs","sm","data","customers","pageSize","isSortable","pagination","isSelectable","isSearchable","tableClass","searchBoxClass"],"sourceRoot":""}