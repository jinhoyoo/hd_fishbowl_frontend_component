{"version":3,"file":"static/js/896.e4acefee.chunk.js","mappings":"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","sources":["pages/charts/ChartJs/LineChart.tsx","pages/charts/ChartJs/BarChart.tsx","pages/charts/ChartJs/DonutChart.tsx","pages/charts/ChartJs/RadarChart.tsx","pages/charts/ChartJs/PolarChart.tsx","pages/charts/ChartJs/BubbleChart.tsx","pages/charts/ChartJs/ChartJs.tsx"],"sourcesContent":["import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    ChartData,\n    ChartOptions,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst LineChart = () => {\n    // chart data\n    const lineChartData: ChartData<'line'> = {\n        labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        datasets: [\n            {\n                label: 'Current Week',\n                backgroundColor: 'rgba(114, 124, 245, 0.3)',\n                borderColor: '#727cf5',\n                data: [32, 42, 42, 62, 52, 75, 62],\n                tension: 0.4,\n                fill: {\n                    target: 'origin',\n                    above: 'rgba(114, 124, 245,0.3)',\n                },\n                capBezierPoints: true,\n            },\n            {\n                label: 'Previous Week',\n                fill: true,\n                backgroundColor: 'transparent',\n                borderColor: '#0acf97',\n                borderDash: [5, 5],\n                data: [42, 58, 66, 93, 82, 105, 92],\n                tension: 0.4,\n                capBezierPoints: true,\n            },\n        ],\n    };\n\n    // default options\n    const lineChartOpts: ChartOptions<'line'> = {\n        maintainAspectRatio: false,\n        plugins: {\n            filler: {\n                propagate: false,\n            },\n            tooltip: {\n                intersect: false,\n            },\n            legend: {\n                display: false,\n            },\n        },\n        hover: {\n            intersect: true,\n        },\n        scales: {\n            x: {\n                grid: {\n                    color: 'rgba(0,0,0,0.05)',\n                },\n            },\n            y: {\n                ticks: {\n                    stepSize: 20,\n                },\n                display: true,\n                grid: {\n                    color: 'rgba(0,0,0,0)',\n                },\n            },\n        },\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Line Chart</h4>\n                <div style={{ height: '320px' }} className=\"mt-3 chartjs-chart\">\n                    <Line data={lineChartData} options={lineChartOpts} />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default LineChart;\n","import React, { useRef, useEffect, useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n    ChartArea,\n    ChartData,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst BarChart = () => {\n    const chartRef = useRef<any>(null);\n    const [chartData, setChartData] = useState<ChartData<'bar'>>({ datasets: [] });\n\n    const createGradient = (ctx: CanvasRenderingContext2D, area: ChartArea) => {\n        const gradientStroke = ctx.createLinearGradient(0, 500, 0, 150);\n        gradientStroke.addColorStop(0, '#fa5c7c');\n        gradientStroke.addColorStop(1, '#727cf5');\n        return gradientStroke;\n    };\n\n    useEffect(() => {\n        const chart = chartRef.current;\n\n        if (!chart) {\n            return;\n        }\n\n        const chartData: ChartData<'bar'> = {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            datasets: [\n                {\n                    label: 'Orders',\n                    backgroundColor: createGradient(chart.ctx, chart.chartArea),\n                    borderColor: createGradient(chart.ctx, chart.chartArea),\n                    hoverBackgroundColor: createGradient(chart.ctx, chart.chartArea),\n                    hoverBorderColor: createGradient(chart.ctx, chart.chartArea),\n                    categoryPercentage: 0.5,\n                    barPercentage: 0.7,\n                    data: [65, 59, 80, 81, 56, 89, 40, 32, 65, 59, 80, 81],\n                },\n                {\n                    label: 'Revenue',\n                    backgroundColor: '#e3eaef',\n                    borderColor: '#e3eaef',\n                    hoverBackgroundColor: '#e3eaef',\n                    hoverBorderColor: '#e3eaef',\n                    categoryPercentage: 0.5,\n                    barPercentage: 0.7,\n                    data: [89, 40, 32, 65, 59, 80, 81, 56, 89, 40, 65, 59],\n                },\n            ],\n        };\n\n        setChartData(chartData);\n    }, []);\n\n    // options\n    const barChartOpts = {\n        maintainAspectRatio: false,\n        plugins: {\n            legend: {\n                display: false,\n            },\n            tooltips: {\n                backgroundColor: '#727cf5',\n                titleFontColor: '#fff',\n                bodyFontColor: '#fff',\n                bodyFontSize: 14,\n                displayColors: false,\n            },\n        },\n        scales: {\n            y: {\n                grid: {\n                    display: false,\n                    color: 'rgba(0,0,0,0.05)',\n                },\n                stacked: false,\n                ticks: {\n                    stepSize: 20,\n                },\n            },\n            x: {\n                stacked: false,\n                grid: {\n                    color: 'rgba(0,0,0,0.05)',\n                },\n            },\n        },\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Bar Chart</h4>\n\n                <div style={{ height: '320px' }} className=\"chartjs-chart\">\n                    <Bar ref={chartRef} data={chartData} options={barChartOpts} />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BarChart;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, ChartData, ChartOptions } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst DonutChart = () => {\n    // chart data\n    const donutChartData: ChartData<'doughnut'> = {\n        labels: ['Direct', 'Affilliate', 'Sponsored', 'E-mail'],\n        datasets: [\n            {\n                data: [300, 135, 48, 154],\n                backgroundColor: ['#727cf5', '#fa5c7c', '#0acf97', '#ebeff2'],\n                borderColor: 'transparent',\n                borderWidth: [3],\n            },\n        ],\n    };\n\n    // default options\n    const donutChartOpts: ChartOptions<'doughnut'> = {\n        maintainAspectRatio: false,\n        cutout: '60%',\n        plugins: {\n            legend: {\n                display: false,\n            },\n        },\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Donut Chart</h4>\n\n                <div className=\"mb-5 mt-4 chartjs-chart\" style={{ height: '320px', maxWidth: '320px' }}>\n                    <Doughnut data={donutChartData} options={donutChartOpts} />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default DonutChart;\n","import { Card } from 'react-bootstrap';\nimport {\n    Chart as ChartJS,\n    RadialLinearScale,\n    PointElement,\n    LineElement,\n    Filler,\n    Tooltip,\n    Legend,\n    ChartData,\n    ChartOptions,\n} from 'chart.js';\nimport { Radar } from 'react-chartjs-2';\n\nChartJS.register(RadialLinearScale, PointElement, LineElement, Filler, Tooltip, Legend);\n\nconst RadarChart = () => {\n    // chart data\n    const radarChartData: ChartData<'radar'> = {\n        labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\n        datasets: [\n            {\n                label: 'Desktops',\n                backgroundColor: 'rgba(57,175,209,0.2)',\n                borderColor: '#39afd1',\n                pointBackgroundColor: '#39afd1',\n                pointBorderColor: '#fff',\n                pointHoverBackgroundColor: '#fff',\n                pointHoverBorderColor: '#39afd1',\n                data: [65, 59, 90, 81, 56, 55, 40],\n            },\n            {\n                label: 'Tablets',\n                backgroundColor: 'rgba(161, 127, 224,0.2)',\n                borderColor: '#a17fe0',\n                pointBackgroundColor: '#a17fe0',\n                pointBorderColor: '#fff',\n                pointHoverBackgroundColor: '#fff',\n                pointHoverBorderColor: '#a17fe0',\n                data: [28, 48, 40, 19, 96, 27, 100],\n            },\n        ],\n    };\n\n    // default options\n    const radarChartOpts: ChartOptions<'radar'> = {\n        maintainAspectRatio: false,\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Radar Chart</h4>\n\n                <div className=\"mb-5 mt-4 chartjs-chart\" style={{ height: '320px', maxWidth: '320px' }}>\n                    <Radar data={radarChartData} options={radarChartOpts} />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RadarChart;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Chart as ChartJS, RadialLinearScale, ArcElement, Tooltip, Legend, ChartData, ChartOptions } from 'chart.js';\nimport { PolarArea } from 'react-chartjs-2';\n\nChartJS.register(RadialLinearScale, ArcElement, Tooltip, Legend);\n\nconst PolarChart = () => {\n    // chart data\n    const polarChartData: ChartData<'polarArea'> = {\n        datasets: [\n            {\n                data: [11, 16, 7, 3, 14],\n                backgroundColor: ['#727cf5', '#fa5c7c', '#0acf97', '#ebeff2', '#39afd1'],\n                hoverBackgroundColor: ['#727cf5', '#fa5c7c', '#0acf97', '#ebeff2', '#39afd1'],\n                label: 'My dataset', // for legend\n            },\n        ],\n        labels: ['Purple', 'Red', 'Green', 'Grey', 'Cyan'],\n    };\n\n    // default options\n    const polarChartOpts: ChartOptions<'polarArea'> = {\n        maintainAspectRatio: false,\n        plugins: {\n            legend: {\n                display: true,\n            },\n        },\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Polar Chart</h4>\n\n                <div className=\"mb-5 mt-4 chartjs-chart\" style={{ height: '320px', maxWidth: '100%' }}>\n                    <PolarArea data={polarChartData} options={polarChartOpts} />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PolarChart;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Chart as ChartJS, LinearScale, PointElement, Tooltip, Legend, ChartData, ChartOptions } from 'chart.js';\nimport { Bubble } from 'react-chartjs-2';\n\nChartJS.register(LinearScale, PointElement, Tooltip, Legend);\n\nconst BubbleChart = () => {\n    // chart data\n    const bubbleData: ChartData<'bubble'> = {\n        labels: ['January'],\n        datasets: [\n            {\n                label: 'My First dataset',\n                backgroundColor: 'rgba(114, 124, 245, 0.4)',\n                borderColor: 'rgba(114, 124, 245, 1)',\n                data: [\n                    { x: -43.219521604938265, y: 68.05984224965707, r: 5 },\n                    { x: -85.34593621399178, y: 0.27756344307269387, r: 26 },\n                    { x: 52.50450102880657, y: -102.80564128943759, r: 30 },\n                    { x: -25.501543209876544, y: -137.02310528120714, r: 21 },\n                    { x: 34.80259773662553, y: 1.7918381344307193, r: 20 },\n                    { x: 87.58359053497944, y: -82.19414437585733, r: 16 },\n                    { x: -12.991898148148152, y: -34.81438614540467, r: 3 },\n                    { x: 87.24279835390945, y: -1.9022205075445697, r: 11 },\n                    { x: -7.545653292181072, y: -129.29098079561044, r: 5 },\n                    { x: 56.80941358024691, y: -62.81400034293553, r: 18 },\n                    { x: -115.52533436213992, y: 51.69538751714677, r: 30 },\n                    { x: -120.52533536213992, y: 80.69538751724677, r: 10 },\n                    { x: 79.6167695473251, y: 68.40384945130313, r: 19 },\n                    { x: -3.597608024691368, y: 91.47805212620028, r: 16 },\n                    { x: -11.001800411522623, y: -24.91533779149519, r: 11 },\n                    { x: -88.42914094650206, y: 73.39034636488338, r: 11 },\n                    { x: -131.71296296296296, y: -9.438228737997235, r: 22 },\n                ],\n            },\n        ],\n    };\n\n    // options\n    const bubbleChartOpts: ChartOptions<'bubble'> = {\n        maintainAspectRatio: false,\n        aspectRatio: 1,\n        plugins: {\n            tooltip: {\n                enabled: false,\n            },\n        },\n        elements: {\n            point: {\n                borderWidth: (context: any) => {\n                    return Math.min(Math.max(1, context.datasetIndex + 1), 8);\n                },\n                radius: function (context: any) {\n                    var value = context.dataset.data[context.dataIndex];\n                    var size = context.chart.width;\n                    var base = Math.abs(value.v) / 1000;\n                    return (size / 24) * base;\n                },\n            },\n        },\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Bubble Chart</h4>\n\n                <div className=\"mb-5 mt-4 chartjs-chart\" style={{ height: '320px', maxWidth: '100%' }}>\n                    <Bubble data={bubbleData} options={bubbleChartOpts} />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BubbleChart;\n","import { Row, Col } from 'react-bootstrap';\nimport { PageTitle } from 'components';\nimport LineChart from './LineChart';\nimport BarChart from './BarChart';\nimport DonutChart from './DonutChart';\nimport RadarChart from './RadarChart';\nimport PolarChart from './PolarChart';\nimport BubbleChart from './BubbleChart';\n\nconst ChartJs = () => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Charts', path: '/features/charts/chartjs' },\n                    { label: 'Chartjs', path: '/features/charts/chartjs', active: true },\n                ]}\n                title={'Chartjs Charts'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <LineChart />\n                </Col>\n\n                <Col xl={6}>\n                    <BarChart />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <DonutChart />\n                </Col>\n\n                <Col xl={6}>\n                    <RadarChart />\n                </Col>\n            </Row>\n            <Row>\n                <Col xl={6}>\n                    <PolarChart />\n                </Col>\n                <Col xl={6}>\n                    <BubbleChart />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport { ChartJs };\n"],"names":["ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Card","className","style","height","data","labels","datasets","label","backgroundColor","borderColor","tension","fill","target","above","capBezierPoints","borderDash","options","maintainAspectRatio","plugins","filler","propagate","tooltip","intersect","legend","display","hover","scales","x","grid","color","y","ticks","stepSize","BarElement","chartRef","useRef","useState","chartData","setChartData","createGradient","ctx","area","gradientStroke","createLinearGradient","addColorStop","useEffect","chart","current","chartArea","hoverBackgroundColor","hoverBorderColor","categoryPercentage","barPercentage","ref","tooltips","titleFontColor","bodyFontColor","bodyFontSize","displayColors","stacked","ArcElement","maxWidth","borderWidth","cutout","RadialLinearScale","Filler","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","bubbleChartOpts","aspectRatio","enabled","elements","point","context","Math","min","max","datasetIndex","radius","value","dataset","dataIndex","width","abs","v","r","ChartJs","breadCrumbItems","path","active","title","Row","Col","xl"],"sourceRoot":""}