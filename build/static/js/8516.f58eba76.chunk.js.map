{"version":3,"file":"static/js/8516.f58eba76.chunk.js","mappings":"sPASMA,EAAW,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,OAChB,OACI,SAACC,EAAA,EAAD,WACI,UAACA,EAAA,OAAD,YACI,eAAIC,UAAU,oBAAd,+BAEA,gBAAKA,UAAU,QAAQC,MAAO,CAAEC,SAAU,WAAYC,SAAU,UAAhE,UACI,SAAC,EAAAC,IAAD,CACIN,OAAQA,EACRO,KAAM,GACNC,cAAe,CAAEC,IAAK,UAAWC,IAAK,YACtCP,MAAO,CAAEQ,MAAO,OAAQC,OAAQ,OAAQR,SAAU,YAClDS,mBAAoB,CAChBT,SAAUJ,EAAOc,KAAKC,gBAAgBC,oBAS5DC,EAAgB,SAAC,GAAmC,IAAjCjB,EAAgC,EAAhCA,OACrB,OACI,SAACC,EAAA,EAAD,WACI,UAACA,EAAA,OAAD,YACI,eAAIC,UAAU,oBAAd,qCACA,gBAAKA,UAAU,QAAQC,MAAO,CAAEC,SAAU,WAAYC,SAAU,UAAhE,UACI,SAAC,EAAAC,IAAD,CACIN,OAAQA,EACRO,KAAM,GACNC,cAAe,CAAEC,IAAK,UAAWC,IAAK,YACtCP,MAAO,CAAEQ,MAAO,OAAQC,OAAQ,OAAQR,SAAU,YAClDS,mBAAoB,CAChBT,SAAUJ,EAAOc,KAAKC,gBAAgBC,UAN9C,UASI,SAAC,EAAAE,OAAD,CACIC,MAAO,sBACPC,KAAM,mBACNhB,SAAU,CAAEK,IAAK,UAAWC,IAAK,wBASvDW,EAAgB,SAAC,GAAmC,IAAjCrB,EAAgC,EAAhCA,OACrB,ECzDW,WACX,IAAIsB,GAAcC,EAAAA,EAAAA,UAqBlB,MAAO,CACHC,UAjBc,SAACC,GACfH,EAASG,GAiBTC,mBAXuB,SAACtB,GACxB,GAAIkB,EAAQ,CACR,IAAMK,EAASL,EAAOG,IAAIG,gBAC1BD,EAAOE,OAAO,CAAEC,QAAS,GAAIC,MAAO,KACpCJ,EAAOK,YAAY5B,GACnBuB,EAAOM,YAAW,MDuCgBC,GAAlCV,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,mBAEnB,OACI,SAACzB,EAAA,EAAD,WACI,UAACA,EAAA,OAAD,YACI,eAAIC,UAAU,oBAAd,+CAEA,gBAAKiC,GAAG,WAAWjC,UAAU,QAAQC,MAAO,CAAEC,SAAU,WAAYC,SAAU,UAA9E,UACI,SAAC,EAAAC,IAAD,CACIN,OAAQA,EACRoC,IAAK,SAACX,GAAD,OAAcD,EAAUC,IAC7BlB,KAAM,GACNC,cAAe,CAAEC,IAAK,WAAYC,KAAM,YACxCP,MAAO,CAAEQ,MAAO,OAAQC,OAAQ,OAAQR,SAAU,YAClDiC,QAAS,WACLX,EAAmB,CAAEjB,IAAK,WAAYC,KAAM,wBASlE4B,EAAiB,SAAC,GAAmC,IAAjCtC,EAAgC,EAAhCA,OAoEtB,OACI,SAACC,EAAA,EAAD,WACI,UAACA,EAAA,OAAD,YACI,eAAIC,UAAU,oBAAd,sCAEA,gBAAKA,UAAU,QAAQC,MAAO,CAAEC,SAAU,WAAYC,SAAU,UAAhE,UACI,SAAC,EAAAC,IAAD,CACIN,OAAQA,EACRO,KAAM,GACNC,cAAe,CAAEC,IAAK,WAAYC,KAAM,YACxCP,MAAO,CAAEQ,MAAO,OAAQC,OAAQ,OAAQR,SAAU,YAClDmC,OA9EF,CACd,CACIC,YAAa,QACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,YACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,eACbC,YAAa,gBACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,eACbC,YAAa,kBACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,IAAM,CAAEC,OAAQ,MAEjE,CACIL,YAAa,gBACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,aACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,MACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,WACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIH,YAAa,qBACbC,QAAS,CAAC,CAAEI,WAAY,MAAQ,CAAEH,MAAO,WAAa,CAAEC,UAAW,MAEvE,CACIH,YAAa,mBACbC,QAAS,CAAC,CAAEK,WAAY,IAAM,CAAEJ,MAAO,WAAa,CAAEC,UAAW,MAErE,CAAEH,YAAa,cAAeC,QAAS,CAAC,CAAEI,WAAY,SACtD,CACIN,YAAa,UACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,iBACbC,YAAa,gBACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,iBACbC,YAAa,kBACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,IAAM,CAAEC,OAAQ,QAgBjDhC,mBAAoB,CAChBT,SAAUJ,EAAOc,KAAKC,gBAAgBC,oBAS5DgC,EAAgB,SAAC,GAAmC,IAAjChD,EAAgC,EAAhCA,OA4HrB,OACI,SAACC,EAAA,EAAD,WACI,UAACA,EAAA,OAAD,YACI,eAAIC,UAAU,oBAAd,mBAEA,gBAAKA,UAAU,QAAQC,MAAO,CAAEC,SAAU,WAAYC,SAAU,UAAhE,UACI,SAAC,EAAAC,IAAD,CACIN,OAAQA,EACRO,KAAM,GACNC,cAAe,CAAEC,IAAK,WAAYC,KAAM,YACxCP,MAAO,CAAEQ,MAAO,OAAQC,OAAQ,OAAQR,SAAU,YAClDmC,OAtIF,CACd,CACIC,YAAa,MACbC,YAAa,SACbC,QAAS,CAAC,CAAEI,WAAY,QAE5B,CACIN,YAAa,MACbC,YAAa,mBACbC,QAAS,CAAC,CAAEK,WAAY,IAAM,CAAEJ,MAAO,WAAa,CAAEC,UAAW,MAErE,CACIJ,YAAa,MACbC,YAAa,qBACbC,QAAS,CAAC,CAAEI,WAAY,MAAQ,CAAEH,MAAO,WAAa,CAAEC,UAAW,MAEvE,CACIJ,YAAa,MACbC,YAAa,cACbC,QAAS,CAAC,CAAEI,WAAY,SAE5B,CACIN,YAAa,iBACbC,YAAa,gBACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,iBACbC,YAAa,kBACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,IAAM,CAAEC,OAAQ,OAEjE,CACIL,YAAa,yBACbC,YAAa,mBACbC,QAAS,CAAC,CAAEC,MAAO,aAEvB,CACIH,YAAa,0BACbC,YAAa,mBACbC,QAAS,CAAC,CAAEC,MAAO,aAEvB,CACIH,YAAa,8BACbC,YAAa,mBACbC,QAAS,CAAC,CAAEC,MAAO,aAEvB,CACIH,YAAa,YACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,MACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,IAAM,CAAEE,WAAY,QAErE,CACIN,YAAa,eACbC,YAAa,WACbC,QAAS,CAAC,CAAEI,WAAY,QAE5B,CACIN,YAAa,eACbC,YAAa,gBACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,OAEjD,CACIJ,YAAa,eACbC,YAAa,kBACbC,QAAS,CAAC,CAAEI,WAAY,SAE5B,CACIN,YAAa,eACbC,YAAa,mBACbC,QAAS,CAAC,CAAEC,MAAO,aAEvB,CACIH,YAAa,eACbC,YAAa,qBACbC,QAAS,CAAC,CAAEC,MAAO,aAEvB,CACIH,YAAa,gBACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,gBACbC,YAAa,gBACbC,QAAS,CAAC,CAAEC,MAAO,aAEvB,CACIH,YAAa,gBACbC,YAAa,mBACbC,QAAS,CAAC,CAAEC,MAAO,aAEvB,CACIH,YAAa,gBACbC,YAAa,qBACbC,QAAS,CAAC,CAAEC,MAAO,aAEvB,CACIH,YAAa,aACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,aACbC,YAAa,mBACbC,QAAS,CAAC,CAAEC,MAAO,aAEvB,CACIH,YAAa,UACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,MAEjD,CACIJ,YAAa,QACbC,YAAa,WACbC,QAAS,CAAC,CAAEC,MAAO,WAAa,CAAEC,UAAW,OAgBjC/B,mBAAoB,CAChBT,SAAUJ,EAAOc,KAAKC,gBAAgBC,oBAkDlE,GAAeiC,EAAAA,EAAAA,kBAAiB,CAC5BC,OAAQ,2CADZ,EAzCmB,SAAC,GAAmC,IAAjClD,EAAgC,EAAhCA,OAClB,OACI,iCACI,SAAC,KAAD,CACImD,gBAAiB,CACb,CAAEC,MAAO,OAAQC,KAAM,kBACvB,CAAED,MAAO,cAAeC,KAAM,iBAAkBC,QAAQ,IAE5DnC,MAAO,iBAEX,iCACI,UAACoC,EAAA,EAAD,YACI,SAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,SAAC1D,EAAD,CAAUC,OAAQA,OAGtB,SAACwD,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,SAACxC,EAAD,CAAejB,OAAQA,UAI/B,UAACuD,EAAA,EAAD,YACI,SAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,SAACpC,EAAD,CAAerB,OAAQA,OAG3B,SAACwD,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,SAACnB,EAAD,CAAgBtC,OAAQA,UAIhC,SAACuD,EAAA,EAAD,WACI,SAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,SAACT,EAAD,CAAehD,OAAQA","sources":["pages/maps/GoogleMaps.tsx","pages/maps/useStreetViewMap.ts"],"sourcesContent":["import { PageTitle } from 'components';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport useStreetViewMap from './useStreetViewMap';\n\ntype MapContainerProps = {\n    google: any;\n};\n\nconst BasicMap = ({ google }: MapContainerProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Basic Google Map</h4>\n\n                <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={google}\n                        zoom={14}\n                        initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        zoomControlOptions={{\n                            position: google.maps.ControlPosition.LEFT_TOP,\n                        }}\n                    ></Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst MapWithMarker = ({ google }: MapContainerProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Google Map with Marker</h4>\n                <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={google}\n                        zoom={18}\n                        initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        zoomControlOptions={{\n                            position: google.maps.ControlPosition.LEFT_TOP,\n                        }}\n                    >\n                        <Marker\n                            title={'This is sweet home.'}\n                            name={'Home sweet home!'}\n                            position={{ lat: 21.569874, lng: 71.5893798 }}\n                        ></Marker>\n                    </Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst StreetViewMap = ({ google }: MapContainerProps) => {\n    const { setMapRef, activateStreetView } = useStreetViewMap();\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Street View Panoramas Google Map</h4>\n\n                <div id=\"panorama\" className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={google}\n                        ref={(map: any) => setMapRef(map)}\n                        zoom={14}\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        onReady={() => {\n                            activateStreetView({ lat: 40.7295174, lng: -73.9986496 });\n                        }}\n                    ></Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst LightStyledMap = ({ google }: MapContainerProps) => {\n    const mapStyles = [\n        {\n            featureType: 'water',\n            elementType: 'geometry',\n            stylers: [{ color: '#e9e9e9' }, { lightness: 17 }],\n        },\n        {\n            featureType: 'landscape',\n            elementType: 'geometry',\n            stylers: [{ color: '#f5f5f5' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#ffffff' }, { lightness: 17 }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#ffffff' }, { lightness: 29 }, { weight: 0.2 }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'geometry',\n            stylers: [{ color: '#ffffff' }, { lightness: 18 }],\n        },\n        {\n            featureType: 'road.local',\n            elementType: 'geometry',\n            stylers: [{ color: '#ffffff' }, { lightness: 16 }],\n        },\n        {\n            featureType: 'poi',\n            elementType: 'geometry',\n            stylers: [{ color: '#f5f5f5' }, { lightness: 21 }],\n        },\n        {\n            featureType: 'poi.park',\n            elementType: 'geometry',\n            stylers: [{ color: '#dedede' }, { lightness: 21 }],\n        },\n        {\n            elementType: 'labels.text.stroke',\n            stylers: [{ visibility: 'on' }, { color: '#ffffff' }, { lightness: 16 }],\n        },\n        {\n            elementType: 'labels.text.fill',\n            stylers: [{ saturation: 36 }, { color: '#333333' }, { lightness: 40 }],\n        },\n        { elementType: 'labels.icon', stylers: [{ visibility: 'off' }] },\n        {\n            featureType: 'transit',\n            elementType: 'geometry',\n            stylers: [{ color: '#f2f2f2' }, { lightness: 19 }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#fefefe' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#fefefe' }, { lightness: 17 }, { weight: 1.2 }],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Ultra Light with Labels</h4>\n\n                <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={google}\n                        zoom={14}\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        styles={mapStyles}\n                        zoomControlOptions={{\n                            position: google.maps.ControlPosition.LEFT_TOP,\n                        }}\n                    ></Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst DarkStyledMap = ({ google }: MapContainerProps) => {\n    const mapStyles = [\n        {\n            featureType: 'all',\n            elementType: 'labels',\n            stylers: [{ visibility: 'on' }],\n        },\n        {\n            featureType: 'all',\n            elementType: 'labels.text.fill',\n            stylers: [{ saturation: 36 }, { color: '#000000' }, { lightness: 40 }],\n        },\n        {\n            featureType: 'all',\n            elementType: 'labels.text.stroke',\n            stylers: [{ visibility: 'on' }, { color: '#000000' }, { lightness: 16 }],\n        },\n        {\n            featureType: 'all',\n            elementType: 'labels.icon',\n            stylers: [{ visibility: 'off' }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#000000' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#000000' }, { lightness: 17 }, { weight: 1.2 }],\n        },\n        {\n            featureType: 'administrative.country',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#e5c163' }],\n        },\n        {\n            featureType: 'administrative.locality',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#c4c4c4' }],\n        },\n        {\n            featureType: 'administrative.neighborhood',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#e5c163' }],\n        },\n        {\n            featureType: 'landscape',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'poi',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 21 }, { visibility: 'on' }],\n        },\n        {\n            featureType: 'poi.business',\n            elementType: 'geometry',\n            stylers: [{ visibility: 'on' }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#e5c163' }, { lightness: '0' }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.stroke',\n            stylers: [{ visibility: 'off' }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#ffffff' }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'labels.text.stroke',\n            stylers: [{ color: '#e5c163' }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 18 }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#575757' }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#ffffff' }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'labels.text.stroke',\n            stylers: [{ color: '#2c2c2c' }],\n        },\n        {\n            featureType: 'road.local',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 16 }],\n        },\n        {\n            featureType: 'road.local',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#999999' }],\n        },\n        {\n            featureType: 'transit',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 19 }],\n        },\n        {\n            featureType: 'water',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 17 }],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Dark</h4>\n\n                <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={google}\n                        zoom={14}\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        styles={mapStyles}\n                        zoomControlOptions={{\n                            position: google.maps.ControlPosition.LEFT_TOP,\n                        }}\n                    ></Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst GoogleMaps = ({ google }: MapContainerProps) => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Maps', path: '/ui/googlemaps' },\n                    { label: 'Google Maps', path: '/ui/googlemaps', active: true },\n                ]}\n                title={'Google Maps'}\n            />\n            <>\n                <Row>\n                    <Col xl={6}>\n                        <BasicMap google={google} />\n                    </Col>\n\n                    <Col xl={6}>\n                        <MapWithMarker google={google} />\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xl={6}>\n                        <StreetViewMap google={google} />\n                    </Col>\n\n                    <Col xl={6}>\n                        <LightStyledMap google={google} />\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col xl={6}>\n                        <DarkStyledMap google={google} />\n                    </Col>\n                </Row>\n            </>\n        </>\n    );\n};\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyDsucrEdmswqYrw0f6ej3bf4M4suDeRgNA',\n})(GoogleMaps);\n","import { useRef } from 'react';\n\nexport default function useStreetViewMap() {\n    let mapRef: any = useRef();\n\n    /**\n     * Assign reference of map\n     */\n    const setMapRef = (map: any) => {\n        mapRef = map;\n    };\n\n    /**\n     * Activate the street view\n     */\n    const activateStreetView = (position: { lat: number; lng: number }) => {\n        if (mapRef) {\n            const mapObj = mapRef.map.getStreetView();\n            mapObj.setPov({ heading: 34, pitch: 10 });\n            mapObj.setPosition(position);\n            mapObj.setVisible(true);\n        }\n    };\n\n    return {\n        setMapRef,\n        activateStreetView,\n    };\n}\n"],"names":["BasicMap","google","Card","className","style","position","overflow","Map","zoom","initialCenter","lat","lng","width","height","zoomControlOptions","maps","ControlPosition","LEFT_TOP","MapWithMarker","Marker","title","name","StreetViewMap","mapRef","useRef","setMapRef","map","activateStreetView","mapObj","getStreetView","setPov","heading","pitch","setPosition","setVisible","useStreetViewMap","id","ref","onReady","LightStyledMap","styles","featureType","elementType","stylers","color","lightness","weight","visibility","saturation","DarkStyledMap","GoogleApiWrapper","apiKey","breadCrumbItems","label","path","active","Row","Col","xl"],"sourceRoot":""}