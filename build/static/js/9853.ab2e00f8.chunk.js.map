{"version":3,"file":"static/js/9853.ab2e00f8.chunk.js","mappings":"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","sources":["pages/apps/Ecommerce/Products.tsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { Column } from 'react-table';\nimport { PageTitle, Table, CellFormatter, PageSize } from 'components';\nimport { Product } from './types';\nimport { products } from './data';\n\n/* product column render */\nconst ProductColumn = ({ row }: CellFormatter<Product>) => {\n    const rating = row.original.rating;\n    const emptyStars = rating < 5 ? 5 - rating : 0;\n    return (\n        <>\n            <img\n                src={row.original.image}\n                alt={row.original.name}\n                title={row.original.name}\n                className=\"rounded me-3\"\n                height=\"48\"\n            />\n            <p className=\"m-0 d-inline-block align-middle font-16\">\n                <Link to=\"/apps/ecommerce/details\" className=\"text-body\">\n                    {row.original.name}\n                </Link>\n                <br />\n                {[...Array(rating)].map((x, index) => (\n                    <span key={index.toString()} className=\"text-warning mdi mdi-star\"></span>\n                ))}\n                {[...Array(emptyStars)].map((x, index) => (\n                    <span key={index.toString()} className=\"text-warning mdi mdi-star-outline\"></span>\n                ))}\n            </p>\n        </>\n    );\n};\n\n/* status column render */\nconst StatusColumn = ({ row }: CellFormatter<Product>) => {\n    return (\n        <span\n            className={classNames('badge', {\n                'bg-success': row.original.status,\n                'bg-danger': !row.original.status,\n            })}\n        >\n            {row.original.status ? 'Active' : 'Deactivated'}\n        </span>\n    );\n};\n\n/* action column render */\nconst ActionColumn = ({ row }: CellFormatter<Product>) => {\n    return (\n        <>\n            <Link to=\"#\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-eye\"></i>\n            </Link>\n            <Link to=\"#\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-square-edit-outline\"></i>\n            </Link>\n            <Link to=\"#\" className=\"action-icon\">\n                {' '}\n                <i className=\"mdi mdi-delete\"></i>\n            </Link>\n        </>\n    );\n};\n\n// get all columns\nconst columns: ReadonlyArray<Column> = [\n    {\n        Header: 'Product',\n        accessor: 'name',\n        defaultCanSort: true,\n        Cell: ProductColumn,\n    },\n    {\n        Header: 'Category',\n        accessor: 'category',\n        defaultCanSort: true,\n    },\n    {\n        Header: 'Added Date',\n        accessor: 'added_date',\n        defaultCanSort: true,\n    },\n    {\n        Header: 'Price',\n        accessor: 'price',\n        defaultCanSort: true,\n    },\n    {\n        Header: 'Quantity',\n        accessor: 'quantity',\n        defaultCanSort: true,\n    },\n    {\n        Header: 'Status',\n        accessor: 'status',\n        defaultCanSort: true,\n        Cell: StatusColumn,\n    },\n    {\n        Header: 'Action',\n        accessor: 'action',\n        defaultCanSort: false,\n        Cell: ActionColumn,\n    },\n];\n\n// get pagelist to display\nconst sizePerPageList: PageSize[] = [\n    {\n        text: '5',\n        value: 5,\n    },\n    {\n        text: '10',\n        value: 10,\n    },\n    {\n        text: '20',\n        value: 20,\n    },\n    {\n        text: 'All',\n        value: products.length,\n    },\n];\n\nconst Products = () => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'eCommerce', path: '/apps/ecommerce/products' },\n                    { label: 'Products', path: '/apps/ecommerce/products', active: true },\n                ]}\n                title={'Products'}\n            />\n\n            <Row>\n                <Col xs={12}>\n                    <Card>\n                        <Card.Body>\n                            <Row className=\"mb-2\">\n                                <Col sm={5}>\n                                    <Link to=\"#\" className=\"btn btn-danger mb-2\">\n                                        <i className=\"mdi mdi-plus-circle me-2\"></i> Add Products\n                                    </Link>\n                                </Col>\n\n                                <Col sm={7}>\n                                    <div className=\"text-sm-end\">\n                                        <Button variant=\"success\" className=\"mb-2 me-1\">\n                                            <i className=\"mdi mdi-cog-outline\"></i>\n                                        </Button>\n\n                                        <Button variant=\"light\" className=\"mb-2 me-1\">\n                                            Import\n                                        </Button>\n\n                                        <Button variant=\"light\" className=\"mb-2\">\n                                            Export\n                                        </Button>\n                                    </div>\n                                </Col>\n                            </Row>\n\n                            <Table<Product>\n                                columns={columns}\n                                data={products}\n                                pageSize={5}\n                                sizePerPageList={sizePerPageList}\n                                isSortable={true}\n                                pagination={true}\n                                isSelectable={true}\n                                isSearchable={true}\n                                theadClass=\"table-light\"\n                                searchBoxClass=\"mb-2\"\n                            />\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Products;\n"],"names":["columns","Header","accessor","defaultCanSort","Cell","row","rating","original","emptyStars","src","image","alt","name","title","className","height","to","Array","map","x","index","toString","classNames","status","sizePerPageList","text","value","products","breadCrumbItems","label","path","active","xs","sm","variant","data","pageSize","isSortable","pagination","isSelectable","isSearchable","theadClass","searchBoxClass"],"sourceRoot":""}