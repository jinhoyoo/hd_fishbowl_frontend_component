{"version":3,"file":"static/js/9030.8e216566.chunk.js","mappings":"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","sources":["pages/forms/Basic.tsx","../node_modules/react-bootstrap/esm/DropdownButton.js","../node_modules/react-bootstrap/esm/types.js"],"sourcesContent":["import { useForm } from 'react-hook-form';\nimport { Row, Col, Card, Form, FloatingLabel, InputGroup, Button, Dropdown, DropdownButton } from 'react-bootstrap';\nimport { FormInput, PageTitle } from 'components';\n\nconst BasicInputElements = () => {\n    /*\n     * form methods\n     */\n    const methods = useForm({\n        defaultValues: {\n            password: '12345',\n            statictext: 'email@example.com',\n            color: '#727cf5',\n        },\n    });\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n    } = methods;\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Input Types</h4>\n                <p className=\"text-muted\">\n                    Most common form control, text-based input fields. Includes support for all HTML5 types:{' '}\n                    <code>text</code>, <code>password</code>, <code>datetime</code>, <code>datetime-local</code>,{' '}\n                    <code>date</code>, <code>month</code>, <code>time</code>, <code>week</code>, <code>number</code>,{' '}\n                    <code>email</code>, <code>url</code>, <code>search</code>, <code>tel</code>, and <code>color</code>.\n                </p>\n\n                <Row>\n                    <Col lg={6}>\n                        <form onSubmit={handleSubmit(() => {})}>\n                            <FormInput\n                                label=\"Text\"\n                                type=\"text\"\n                                name=\"text\"\n                                containerClass={'mb-3'}\n                                register={register}\n                                key=\"text\"\n                                errors={errors}\n                                control={control}\n                            />\n\n                            <FormInput\n                                label=\"Email\"\n                                type=\"email\"\n                                name=\"email\"\n                                placeholder=\"Email\"\n                                containerClass={'mb-3'}\n                                register={register}\n                                key=\"email\"\n                                errors={errors}\n                                control={control}\n                            />\n\n                            <FormInput\n                                label=\"Show/Hide Password\"\n                                type=\"password\"\n                                name=\"password\"\n                                placeholder=\"password placeholder\"\n                                containerClass={'mb-3'}\n                                register={register}\n                                key=\"password\"\n                                errors={errors}\n                                control={control}\n                            />\n\n                            <FormInput\n                                label=\"Placeholder\"\n                                type=\"text\"\n                                name=\"placeholder\"\n                                placeholder=\"placeholder\"\n                                containerClass={'mb-3'}\n                                register={register}\n                                key=\"placeholder\"\n                                errors={errors}\n                                control={control}\n                            />\n\n                            <FormInput\n                                label=\"Text Area\"\n                                type=\"textarea\"\n                                name=\"textarea\"\n                                rows=\"5\"\n                                containerClass={'mb-3'}\n                                register={register}\n                                key=\"textarea\"\n                                errors={errors}\n                                control={control}\n                            />\n\n                            <FormInput\n                                label=\"Read only\"\n                                type=\"text\"\n                                name=\"text1\"\n                                id=\"text1\"\n                                placeholder=\"Readonly value\"\n                                readOnly\n                                containerClass={'mb-3'}\n                                register={register}\n                                key=\"text1\"\n                                errors={errors}\n                                control={control}\n                            />\n\n                            <FormInput\n                                label=\"Disabled\"\n                                type=\"text\"\n                                name=\"text2\"\n                                id=\"text2\"\n                                placeholder=\"Disabled value\"\n                                disabled\n                                containerClass={'mb-3'}\n                                register={register}\n                                key=\"text2\"\n                                errors={errors}\n                                control={control}\n                            />\n\n                            <div className=\"mb-3\">\n                                <Form.Label>Static control</Form.Label>\n                                <Form.Control plaintext readOnly defaultValue=\"email@example.com\" />\n                            </div>\n\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label htmlFor=\"text3\" className=\"form-label\">\n                                    Helping text\n                                </Form.Label>\n                                <Form.Control type=\"text\" name=\"text\" id=\"text3\" placeholder=\"Helping text\" />\n                                <Form.Text>\n                                    A block of help text that breaks onto a new line and may extend beyond one line.\n                                </Form.Text>\n                            </Form.Group>\n                        </form>\n                    </Col>\n\n                    <Col lg={6}>\n                        <form onSubmit={handleSubmit(() => {})}>\n                            <FormInput\n                                name=\"select\"\n                                label=\"Input Select\"\n                                type=\"select\"\n                                containerClass=\"mb-3\"\n                                className=\"form-select\"\n                                register={register}\n                                key=\"select\"\n                                errors={errors}\n                                control={control}\n                            >\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                            </FormInput>\n\n                            <FormInput\n                                name=\"selectMulti\"\n                                label=\"Multiple Select\"\n                                type=\"select\"\n                                multiple\n                                containerClass=\"mb-3\"\n                                className=\"form-select\"\n                                register={register}\n                                key=\"selectMulti\"\n                                errors={errors}\n                                control={control}\n                            >\n                                <option>1</option>\n                                <option>2</option>\n                                <option>3</option>\n                                <option>4</option>\n                                <option>5</option>\n                            </FormInput>\n\n                            <FormInput\n                                label=\"Default file input\"\n                                type=\"file\"\n                                name=\"file\"\n                                containerClass={'mb-3'}\n                                register={register}\n                                key=\"file\"\n                                errors={errors}\n                                control={control}\n                            />\n\n                            <FormInput\n                                label=\"Date\"\n                                type=\"date\"\n                                name=\"date\"\n                                containerClass={'mb-3'}\n                                register={register}\n                                key=\"date\"\n                                errors={errors}\n                                control={control}\n                            />\n\n                            <FormInput\n                                label=\"Month\"\n                                type=\"month\"\n                                name=\"month\"\n                                containerClass={'mb-3'}\n                                register={register}\n                                key=\"month\"\n                                errors={errors}\n                                control={control}\n                            />\n\n                            <FormInput\n                                label=\"Time\"\n                                type=\"time\"\n                                name=\"time\"\n                                containerClass={'mb-3'}\n                                register={register}\n                                key=\"time\"\n                                errors={errors}\n                                control={control}\n                            />\n\n                            <FormInput\n                                label=\"Week\"\n                                type=\"week\"\n                                name=\"week\"\n                                containerClass={'mb-3'}\n                                register={register}\n                                key=\"week\"\n                                errors={errors}\n                                control={control}\n                            />\n\n                            <FormInput\n                                label=\"Number\"\n                                type=\"number\"\n                                name=\"number\"\n                                placeholder=\"number placeholder\"\n                                containerClass={'mb-3'}\n                                register={register}\n                                key=\"number\"\n                                errors={errors}\n                                control={control}\n                            />\n\n                            <FormInput\n                                label=\"Color\"\n                                type=\"color\"\n                                name=\"color\"\n                                placeholder=\"color placeholder\"\n                                className=\"w-100\"\n                                containerClass={'mb-3'}\n                                register={register}\n                                key=\"color\"\n                                errors={errors}\n                                control={control}\n                            />\n\n                            <Form.Group className=\"mb-0\">\n                                <Form.Label htmlFor=\"exampleRange\" className=\"form-label\">\n                                    Range\n                                </Form.Label>\n                                <Form.Range />\n                            </Form.Group>\n                        </form>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst FloatingLabels = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Floating labels</h4>\n                <p className=\"text-muted\">\n                    Wrap a <code>&lt;Form.Control&gt;</code> element in <code>&lt;FloatingLabel&gt;</code>\n                    to enable floating labels with Bootstrap’s textual form fields. A <code>placeholder</code>\n                    is required on each <code>&lt;Form.Control&gt;</code> as our method of CSS-only floating labels uses\n                    the <code>:placeholder-shown</code> pseudo-element.\n                </p>\n\n                <Row>\n                    <Col lg={6}>\n                        <h5 className=\"mb-3\">Example</h5>\n                        <FloatingLabel controlId=\"floatingInput\" label=\"Email address\" className=\"mb-3\">\n                            <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n                        </FloatingLabel>\n                        <FloatingLabel controlId=\"floatingPassword\" label=\"Password\">\n                            <Form.Control type=\"password\" placeholder=\"Password\" />\n                        </FloatingLabel>\n\n                        <h5 className=\"mb-3 mt-4\">Textareas</h5>\n                        <FloatingLabel controlId=\"floatingTextarea2\" label=\"Comments\">\n                            <Form.Control\n                                as=\"textarea\"\n                                placeholder=\"Leave a comment here\"\n                                style={{ height: '100px' }}\n                            />\n                        </FloatingLabel>\n                    </Col>\n\n                    <Col lg={6}>\n                        <h5 className=\"mb-3\">Selects</h5>\n                        <FloatingLabel controlId=\"floatingSelect\" label=\"Works with selects\">\n                            <Form.Select aria-label=\"Floating label select example\">\n                                <option>Open this select menu</option>\n                                <option value=\"1\">One</option>\n                                <option value=\"2\">Two</option>\n                                <option value=\"3\">Three</option>\n                            </Form.Select>\n                        </FloatingLabel>\n\n                        <h5 className=\"mb-3 mt-4\">Layout</h5>\n                        <Row className=\"g-2\">\n                            <Col md>\n                                <FloatingLabel controlId=\"floatingInputGrid\" label=\"Email address\">\n                                    <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n                                </FloatingLabel>\n                            </Col>\n                            <Col md>\n                                <FloatingLabel controlId=\"floatingSelectGrid\" label=\"Works with selects\">\n                                    <Form.Select aria-label=\"Floating label select example\">\n                                        <option>Open this select menu</option>\n                                        <option value=\"1\">One</option>\n                                        <option value=\"2\">Two</option>\n                                        <option value=\"3\">Three</option>\n                                    </Form.Select>\n                                </FloatingLabel>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst SelectInput = () => {\n    return (\n        <>\n            <h4 className=\"header-title\">Select menu</h4>\n            <p className=\"text-muted\">\n                Custom <code>&lt;select&gt;</code> menus need only a custom class, <code>.custom-select</code> to\n                trigger the custom styles.\n            </p>\n\n            <Form.Group>\n                <Form.Select className=\"custom-select mt-3\" aria-label=\"Default select example\">\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                </Form.Select>\n            </Form.Group>\n        </>\n    );\n};\n\nconst Switches = () => {\n    return (\n        <>\n            <h4 className=\"header-title mt-4\">Switches</h4>\n            <p className=\"text-muted\">\n                A switch has the markup of a custom checkbox but uses the <code>.custom-switch</code> class to render a\n                toggle switch. Switches also support the <code>disabled</code> attribute.\n            </p>\n\n            <Form>\n                <Form.Check type=\"switch\" id=\"custom-switch\" label=\"Toggle this switch element\" />\n                <Form.Check\n                    disabled\n                    type=\"switch\"\n                    label=\"Disabled switch element\"\n                    id=\"disabled-custom-switch\"\n                    className=\"mt-1\"\n                />\n            </Form>\n        </>\n    );\n};\n\nconst CustomCheckboxes = () => {\n    return (\n        <Form.Group>\n            <Form.Label className=\"form-label\" htmlFor=\"exampleCheckbox\">\n                Checkboxes\n            </Form.Label>\n            <div>\n                <Form.Check type=\"checkbox\" id=\"default-checkbox\" label=\"Check this custom checkbox\" />\n                <Form.Check type=\"checkbox\" id=\"default-checkbox\" label=\"But not this disabled one\" disabled />\n            </div>\n        </Form.Group>\n    );\n};\n\nconst InlineCustomCheckboxes = () => {\n    return (\n        <Form.Group className=\"mt-2\">\n            <Form.Label className=\"form-check-label\" htmlFor=\"exampleCheckbox\">\n                Inline\n            </Form.Label>\n            <div>\n                <Form.Check type=\"checkbox\" id=\"inline-checkbox\" label=\"An inline custom input\" />\n                <Form.Check type=\"checkbox\" id=\"inline-checkbox\" label=\"and another one\" />\n            </div>\n        </Form.Group>\n    );\n};\n\nconst CustomRadios = () => {\n    return (\n        <Form.Group className=\"mt-2\">\n            <Form.Label className=\"form-label\" htmlFor=\"exampleCheckbox\">\n                Radios\n            </Form.Label>\n            <div>\n                <Form.Check type=\"radio\" id=\"default-checkbox\" label=\"Check this custom checkbox\" />\n                <Form.Check type=\"radio\" id=\"default-checkbox\" label=\"But not this disabled one\" disabled />\n            </div>\n        </Form.Group>\n    );\n};\n\nconst InputSizes = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Input Sizes</h4>\n                <p className=\"text-muted\">\n                    Use size on <code>&lt;FormControl&gt;</code> and <code>&lt;FormLabel&gt;</code> to change the size\n                    of inputs and labels respectively.\n                </p>\n\n                <Form>\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label htmlFor=\"small\">Small</Form.Label>\n                        <Form.Control type=\"text\" name=\"small\" id=\"small\" placeholder=\"Small\" size=\"sm\" />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label htmlFor=\"Normal\">Normal</Form.Label>\n                        <Form.Control type=\"text\" name=\"Normal\" id=\"Normal\" placeholder=\"Normal\" />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label htmlFor=\"Large\">Large</Form.Label>\n                        <Form.Control type=\"text\" name=\"Large\" id=\"Large\" placeholder=\"Large\" size=\"lg\" />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-0\">\n                        <Form.Label htmlFor=\"grid\">Grid Sizes</Form.Label>\n                        <Row>\n                            <Col sm={4}>\n                                <Form.Control type=\"text\" name=\"grid\" id=\"grid\" placeholder=\".col-sm-4\" />\n                            </Col>\n                        </Row>\n                    </Form.Group>\n                </Form>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst InputGroups = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Input Group</h4>\n                <p className=\"text-muted\">\n                    Easily extend form conrols by adding text, buttons, or button groups on either side of textual\n                    inputs, custom selects, and custom file inputs\n                </p>\n\n                <Form>\n                    <Form.Group>\n                        <Form.Label htmlFor=\"Static\">Static</Form.Label>\n                        <InputGroup className=\"mb-3\">\n                            <InputGroup.Text id=\"basic-addon1\">@</InputGroup.Text>\n                            <Form.Control\n                                placeholder=\"Username\"\n                                aria-label=\"Username\"\n                                aria-describedby=\"basic-addon1\"\n                            />\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label htmlFor=\"Dropdown\">Dropdown</Form.Label>\n                        <InputGroup className=\"mb-3\">\n                            <DropdownButton variant=\"primary\" title=\"Dropdown\" id=\"input-group-dropdown-1\">\n                                <Dropdown.Item href=\"#\">Action</Dropdown.Item>\n                                <Dropdown.Item href=\"#\">Another action</Dropdown.Item>\n                                <Dropdown.Item href=\"#\">Something else here</Dropdown.Item>\n                                <Dropdown.Divider />\n                                <Dropdown.Item href=\"#\">Separated link</Dropdown.Item>\n                            </DropdownButton>\n                            <Form.Control aria-label=\"Text input with dropdown button\" />\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label htmlFor=\"Button\">Button</Form.Label>\n                        <InputGroup className=\"mb-3\">\n                            <Form.Control\n                                placeholder=\"Recipient's username\"\n                                aria-label=\"Recipient's username\"\n                                aria-describedby=\"basic-addon2\"\n                            />\n                            <Button variant=\"dark\" id=\"button-addon2\">\n                                Button\n                            </Button>\n                        </InputGroup>\n                    </Form.Group>\n\n                    <Row className=\"g-2\">\n                        <Col sm={6}>\n                            <Form.Group>\n                                <Form.Label htmlFor=\"file\">File input</Form.Label>\n                                <Form.Control type=\"file\" />\n                            </Form.Group>\n                        </Col>\n                        <Col sm={6}>\n                            <Form.Group>\n                                <Form.Label htmlFor=\"formFileMultiple01\">Multiple input</Form.Label>\n                                <Form.Control type=\"file\" multiple />\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                </Form>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst DefaultForm = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"mb-3 header-title\">Basic Example</h4>\n\n                <Form>\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label htmlFor=\"exampleEmail2\">Email</Form.Label>\n                        <Form.Control type=\"email\" name=\"email\" id=\"exampleEmail2\" placeholder=\"Enter your email\" />\n                        <Form.Text>We'll never share your email with anyone else.</Form.Text>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label htmlFor=\"examplePassword2\">Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"examplePassword2\"\n                            placeholder=\"password placeholder\"\n                            defaultValue=\"12345\"\n                        />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" id=\"formGridCheckbox\">\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst HorizontalForm = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"mb-3 header-title\">Horizontal Form</h4>\n                <Form>\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label htmlFor=\"exampleEmail3\" column sm={3}>\n                            Email\n                        </Form.Label>\n                        <Col sm={9}>\n                            <Form.Control type=\"email\" name=\"email\" id=\"exampleEmail3\" placeholder=\"Enter your email\" />\n                            <Form.Text>We'll never share your email with anyone else.</Form.Text>\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label htmlFor=\"examplePassword3\" column sm={3}>\n                            Password\n                        </Form.Label>\n                        <Col sm={9}>\n                            <Form.Control\n                                type=\"password\"\n                                name=\"password\"\n                                id=\"examplePassword3\"\n                                placeholder=\"password placeholder\"\n                                defaultValue=\"12345\"\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-3\">\n                        <Form.Label htmlFor=\"examplePassword4\" column sm={3}>\n                            Re-Password\n                        </Form.Label>\n                        <Col sm={9}>\n                            <Form.Control\n                                type=\"password\"\n                                name=\"password\"\n                                id=\"examplePassword4\"\n                                placeholder=\"password placeholder\"\n                                defaultValue=\"12345\"\n                            />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalCheck\">\n                        <Col sm={{ span: 9, offset: 3 }}>\n                            <Form.Check label=\"Remember me\" />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} className=\"mb-0\" controlId=\"formHorizontalCheck\">\n                        <Col sm={{ span: 9, offset: 3 }}>\n                            <Button variant=\"primary\" type=\"submit\">\n                                Sign in\n                            </Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst InlineForm = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"mb-3 header-title\">Inline Form Example</h4>\n                <Form className=\"row row-cols-lg-auto g-3 align-items-center\">\n                    <div className=\"col-12\">\n                        <Form.Group className=\"mb-2 me-sm-2 mb-sm-0\">\n                            <Form.Control\n                                readOnly\n                                type=\"email\"\n                                name=\"email\"\n                                id=\"exampleEmail4\"\n                                bsPrefix=\"form-control-plaintext\"\n                                placeholder=\"email@example.com\"\n                            />\n                        </Form.Group>\n                    </div>\n\n                    <div className=\"col-12\">\n                        <Form.Group className=\"mb-2 me-sm-2 mb-sm-0\">\n                            <Form.Control\n                                type=\"password\"\n                                name=\"password\"\n                                id=\"examplePassword5\"\n                                placeholder=\"password placeholder\"\n                                defaultValue=\"12345\"\n                            />\n                        </Form.Group>\n                    </div>\n\n                    <div className=\"col-12\">\n                        <Button color=\"primary\" type=\"submit\">\n                            Confirm identity\n                        </Button>\n                    </div>\n                </Form>\n\n                <h6 className=\"font-13 mt-3\">Auto-sizing</h6>\n\n                <Form>\n                    <Row className=\"align-items-center\">\n                        <Col xs=\"auto\">\n                            <Form.Label htmlFor=\"inlineFormInput\" visuallyHidden>\n                                Name\n                            </Form.Label>\n                            <Form.Control className=\"mb-2\" id=\"inlineFormInput\" placeholder=\"Jane Doe\" />\n                        </Col>\n                        <Col xs=\"auto\">\n                            <Form.Label htmlFor=\"inlineFormInputGroup\" visuallyHidden>\n                                Username\n                            </Form.Label>\n                            <InputGroup className=\"mb-2\">\n                                <InputGroup.Text>@</InputGroup.Text>\n                                <Form.Control id=\"inlineFormInputGroup\" placeholder=\"Username\" />\n                            </InputGroup>\n                        </Col>\n                        <Col xs=\"auto\">\n                            <Form.Check type=\"checkbox\" id=\"autoSizingCheck\" className=\"mb-2\" label=\"Remember me\" />\n                        </Col>\n                        <Col xs=\"auto\">\n                            <Button type=\"submit\" className=\"mb-2\">\n                                Submit\n                            </Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst HorizontalFormLabelSizing = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Horizontal form label sizing</h4>\n                <p className=\"text-muted font-14\">\n                    You can size the <code>&lt;FormLabel&gt;</code> using the column prop as shown.\n                </p>\n\n                <Row>\n                    <Form.Label column=\"lg\" lg={2}>\n                        Large Text\n                    </Form.Label>\n                    <Col>\n                        <Form.Control size=\"lg\" type=\"text\" placeholder=\"Large text\" />\n                    </Col>\n                </Row>\n                <br />\n                <Row>\n                    <Form.Label column lg={2}>\n                        Normal Text\n                    </Form.Label>\n                    <Col>\n                        <Form.Control type=\"text\" placeholder=\"Normal text\" />\n                    </Col>\n                </Row>\n                <br />\n                <Row>\n                    <Form.Label column=\"sm\" lg={2}>\n                        Small Text\n                    </Form.Label>\n                    <Col>\n                        <Form.Control size=\"sm\" type=\"text\" placeholder=\"Small text\" />\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst FormGrid = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Form Grid</h4>\n\n                <Form>\n                    <Row className=\"mb-3\">\n                        <Form.Group as={Col} controlId=\"formGridEmail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Password\" />\n                        </Form.Group>\n                    </Row>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\n                        <Form.Label>Address</Form.Label>\n                        <Form.Control placeholder=\"1234 Main St\" />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formGridAddress2\">\n                        <Form.Label>Address 2</Form.Label>\n                        <Form.Control placeholder=\"Apartment, studio, or floor\" />\n                    </Form.Group>\n\n                    <Row className=\"mb-3\">\n                        <Form.Group as={Col} controlId=\"formGridCity\">\n                            <Form.Label>City</Form.Label>\n                            <Form.Control />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridState\">\n                            <Form.Label>State</Form.Label>\n                            <Form.Select defaultValue=\"Choose...\">\n                                <option>Choose...</option>\n                                <option>...</option>\n                            </Form.Select>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridZip\">\n                            <Form.Label>Zip</Form.Label>\n                            <Form.Control />\n                        </Form.Group>\n                    </Row>\n\n                    <Form.Group className=\"mb-3\" id=\"formGridCheckbox\">\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst BasicForms = () => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Forms', path: '/forms/basic' },\n                    { label: 'Form Elements', path: '/forms/basic', active: true },\n                ]}\n                title={'Form Elements'}\n            />\n\n            <Row>\n                <Col>\n                    <BasicInputElements />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <FloatingLabels />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            <Row>\n                                <Col lg={6}>\n                                    <SelectInput />\n                                    <Switches />\n                                </Col>\n\n                                <Col lg={6}>\n                                    <h4 className=\"header-title mt-5 mt-sm-0\">Checkboxes and radios</h4>\n                                    <div className=\"mt-3\">\n                                        <CustomCheckboxes />\n                                        <CustomRadios />\n                                        <InlineCustomCheckboxes />\n                                    </div>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <InputSizes />\n                </Col>\n\n                <Col lg={6}>\n                    <InputGroups />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <DefaultForm />\n                </Col>\n\n                <Col lg={6}>\n                    <HorizontalForm />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <InlineForm />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <HorizontalFormLabelSizing />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <FormGrid />\n                </Col>\n            </Row>\n        </>\n    );\n};\nexport default BasicForms;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n}), PropTypes.object]);"],"names":["BasicInputElements","methods","useForm","defaultValues","password","statictext","color","handleSubmit","register","control","errors","formState","className","lg","onSubmit","label","type","name","containerClass","placeholder","rows","id","readOnly","disabled","plaintext","defaultValue","htmlFor","multiple","FloatingLabels","controlId","as","style","height","value","md","SelectInput","Switches","CustomCheckboxes","InlineCustomCheckboxes","CustomRadios","InputSizes","size","sm","InputGroups","variant","title","href","DefaultForm","HorizontalForm","Row","column","span","offset","InlineForm","bsPrefix","xs","visuallyHidden","HorizontalFormLabelSizing","FormGrid","Col","breadCrumbItems","path","active","propTypes","PropTypes","onClick","align","alignPropType","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","DropdownButton","React","ref","children","props","_jsxs","Dropdown","_jsx","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","displayName","alignDirection","xl","xxl"],"sourceRoot":""}