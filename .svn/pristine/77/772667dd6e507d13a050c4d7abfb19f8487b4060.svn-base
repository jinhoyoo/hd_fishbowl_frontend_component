{"version":3,"file":"static/js/6253.5463b51c.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useUpdateEffect.js","../node_modules/react-bootstrap/esm/CarouselCaption.js","../node_modules/react-bootstrap/esm/CarouselItem.js","../node_modules/react-bootstrap/esm/Carousel.js","pages/uikit/Carousel.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\n/**\n * Runs an effect only when the dependencies have changed, skipping the\n * initial \"on mount\" run. Caution, if the dependency list never changes,\n * the effect is **never run**\n *\n * ```ts\n *  const ref = useRef<HTMLInput>(null);\n *\n *  // focuses an element only if the focus changes, and not on mount\n *  useUpdateEffect(() => {\n *    const element = ref.current?.children[focusedIdx] as HTMLElement\n *\n *    element?.focus()\n *\n *  }, [focusedIndex])\n * ```\n * @param effect An effect to run on mount\n *\n * @category effects\n */\n\nfunction useUpdateEffect(fn, deps) {\n  var isFirst = useRef(true);\n  useEffect(function () {\n    if (isFirst.current) {\n      isFirst.current = false;\n      return;\n    }\n\n    return fn();\n  }, deps);\n}\n\nexport default useUpdateEffect;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('carousel-caption');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CarouselItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  const finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'carousel-item'));\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: finalClassName\n  });\n});\nCarouselItem.displayName = 'CarouselItem';\nexport default CarouselItem;","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useUpdateEffect from '@restart/hooks/useUpdateEffect';\nimport useCommittedRef from '@restart/hooks/useCommittedRef';\nimport useTimeout from '@restart/hooks/useTimeout';\nimport Anchor from '@restart/ui/Anchor';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport CarouselCaption from './CarouselCaption';\nimport CarouselItem from './CarouselItem';\nimport { map, forEach } from './ElementChildren';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst SWIPE_THRESHOLD = 40;\nconst defaultProps = {\n  slide: true,\n  fade: false,\n  controls: true,\n  indicators: true,\n  indicatorLabels: [],\n  defaultActiveIndex: 0,\n  interval: 5000,\n  keyboard: true,\n  pause: 'hover',\n  wrap: true,\n  touch: true,\n  prevIcon: /*#__PURE__*/_jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"carousel-control-prev-icon\"\n  }),\n  prevLabel: 'Previous',\n  nextIcon: /*#__PURE__*/_jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"carousel-control-next-icon\"\n  }),\n  nextLabel: 'Next'\n};\n\nfunction isVisible(element) {\n  if (!element || !element.style || !element.parentNode || !element.parentNode.style) {\n    return false;\n  }\n\n  const elementStyle = getComputedStyle(element);\n  return elementStyle.display !== 'none' && elementStyle.visibility !== 'hidden' && getComputedStyle(element.parentNode).display !== 'none';\n}\n\nconst Carousel = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    bsPrefix,\n    slide,\n    fade,\n    controls,\n    indicators,\n    indicatorLabels,\n    activeIndex,\n    onSelect,\n    onSlide,\n    onSlid,\n    interval,\n    keyboard,\n    onKeyDown,\n    pause,\n    onMouseOver,\n    onMouseOut,\n    wrap,\n    touch,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    prevIcon,\n    prevLabel,\n    nextIcon,\n    nextLabel,\n    variant,\n    className,\n    children,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    activeIndex: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'carousel');\n  const isRTL = useIsRTL();\n  const nextDirectionRef = useRef(null);\n  const [direction, setDirection] = useState('next');\n  const [paused, setPaused] = useState(false);\n  const [isSliding, setIsSliding] = useState(false);\n  const [renderedActiveIndex, setRenderedActiveIndex] = useState(activeIndex || 0);\n\n  if (!isSliding && activeIndex !== renderedActiveIndex) {\n    if (nextDirectionRef.current) {\n      setDirection(nextDirectionRef.current);\n    } else {\n      setDirection((activeIndex || 0) > renderedActiveIndex ? 'next' : 'prev');\n    }\n\n    if (slide) {\n      setIsSliding(true);\n    }\n\n    setRenderedActiveIndex(activeIndex || 0);\n  }\n\n  useEffect(() => {\n    if (nextDirectionRef.current) {\n      nextDirectionRef.current = null;\n    }\n  });\n  let numChildren = 0;\n  let activeChildInterval; // Iterate to grab all of the children's interval values\n  // (and count them, too)\n\n  forEach(children, (child, index) => {\n    ++numChildren;\n\n    if (index === activeIndex) {\n      activeChildInterval = child.props.interval;\n    }\n  });\n  const activeChildIntervalRef = useCommittedRef(activeChildInterval);\n  const prev = useCallback(event => {\n    if (isSliding) {\n      return;\n    }\n\n    let nextActiveIndex = renderedActiveIndex - 1;\n\n    if (nextActiveIndex < 0) {\n      if (!wrap) {\n        return;\n      }\n\n      nextActiveIndex = numChildren - 1;\n    }\n\n    nextDirectionRef.current = 'prev';\n    onSelect == null ? void 0 : onSelect(nextActiveIndex, event);\n  }, [isSliding, renderedActiveIndex, onSelect, wrap, numChildren]); // This is used in the setInterval, so it should not invalidate.\n\n  const next = useEventCallback(event => {\n    if (isSliding) {\n      return;\n    }\n\n    let nextActiveIndex = renderedActiveIndex + 1;\n\n    if (nextActiveIndex >= numChildren) {\n      if (!wrap) {\n        return;\n      }\n\n      nextActiveIndex = 0;\n    }\n\n    nextDirectionRef.current = 'next';\n    onSelect == null ? void 0 : onSelect(nextActiveIndex, event);\n  });\n  const elementRef = useRef();\n  useImperativeHandle(ref, () => ({\n    element: elementRef.current,\n    prev,\n    next\n  })); // This is used in the setInterval, so it should not invalidate.\n\n  const nextWhenVisible = useEventCallback(() => {\n    if (!document.hidden && isVisible(elementRef.current)) {\n      if (isRTL) {\n        prev();\n      } else {\n        next();\n      }\n    }\n  });\n  const slideDirection = direction === 'next' ? 'start' : 'end';\n  useUpdateEffect(() => {\n    if (slide) {\n      // These callbacks will be handled by the <Transition> callbacks.\n      return;\n    }\n\n    onSlide == null ? void 0 : onSlide(renderedActiveIndex, slideDirection);\n    onSlid == null ? void 0 : onSlid(renderedActiveIndex, slideDirection);\n  }, [renderedActiveIndex]);\n  const orderClassName = `${prefix}-item-${direction}`;\n  const directionalClassName = `${prefix}-item-${slideDirection}`;\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    onSlide == null ? void 0 : onSlide(renderedActiveIndex, slideDirection);\n  }, [onSlide, renderedActiveIndex, slideDirection]);\n  const handleEntered = useCallback(() => {\n    setIsSliding(false);\n    onSlid == null ? void 0 : onSlid(renderedActiveIndex, slideDirection);\n  }, [onSlid, renderedActiveIndex, slideDirection]);\n  const handleKeyDown = useCallback(event => {\n    if (keyboard && !/input|textarea/i.test(event.target.tagName)) {\n      switch (event.key) {\n        case 'ArrowLeft':\n          event.preventDefault();\n\n          if (isRTL) {\n            next(event);\n          } else {\n            prev(event);\n          }\n\n          return;\n\n        case 'ArrowRight':\n          event.preventDefault();\n\n          if (isRTL) {\n            prev(event);\n          } else {\n            next(event);\n          }\n\n          return;\n\n        default:\n      }\n    }\n\n    onKeyDown == null ? void 0 : onKeyDown(event);\n  }, [keyboard, onKeyDown, prev, next, isRTL]);\n  const handleMouseOver = useCallback(event => {\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n\n    onMouseOver == null ? void 0 : onMouseOver(event);\n  }, [pause, onMouseOver]);\n  const handleMouseOut = useCallback(event => {\n    setPaused(false);\n    onMouseOut == null ? void 0 : onMouseOut(event);\n  }, [onMouseOut]);\n  const touchStartXRef = useRef(0);\n  const touchDeltaXRef = useRef(0);\n  const touchUnpauseTimeout = useTimeout();\n  const handleTouchStart = useCallback(event => {\n    touchStartXRef.current = event.touches[0].clientX;\n    touchDeltaXRef.current = 0;\n\n    if (pause === 'hover') {\n      setPaused(true);\n    }\n\n    onTouchStart == null ? void 0 : onTouchStart(event);\n  }, [pause, onTouchStart]);\n  const handleTouchMove = useCallback(event => {\n    if (event.touches && event.touches.length > 1) {\n      touchDeltaXRef.current = 0;\n    } else {\n      touchDeltaXRef.current = event.touches[0].clientX - touchStartXRef.current;\n    }\n\n    onTouchMove == null ? void 0 : onTouchMove(event);\n  }, [onTouchMove]);\n  const handleTouchEnd = useCallback(event => {\n    if (touch) {\n      const touchDeltaX = touchDeltaXRef.current;\n\n      if (Math.abs(touchDeltaX) > SWIPE_THRESHOLD) {\n        if (touchDeltaX > 0) {\n          prev(event);\n        } else {\n          next(event);\n        }\n      }\n    }\n\n    if (pause === 'hover') {\n      touchUnpauseTimeout.set(() => {\n        setPaused(false);\n      }, interval || undefined);\n    }\n\n    onTouchEnd == null ? void 0 : onTouchEnd(event);\n  }, [touch, pause, prev, next, touchUnpauseTimeout, interval, onTouchEnd]);\n  const shouldPlay = interval != null && !paused && !isSliding;\n  const intervalHandleRef = useRef();\n  useEffect(() => {\n    var _ref, _activeChildIntervalR;\n\n    if (!shouldPlay) {\n      return undefined;\n    }\n\n    const nextFunc = isRTL ? prev : next;\n    intervalHandleRef.current = window.setInterval(document.visibilityState ? nextWhenVisible : nextFunc, (_ref = (_activeChildIntervalR = activeChildIntervalRef.current) != null ? _activeChildIntervalR : interval) != null ? _ref : undefined);\n    return () => {\n      if (intervalHandleRef.current !== null) {\n        clearInterval(intervalHandleRef.current);\n      }\n    };\n  }, [shouldPlay, prev, next, activeChildIntervalRef, interval, nextWhenVisible, isRTL]);\n  const indicatorOnClicks = useMemo(() => indicators && Array.from({\n    length: numChildren\n  }, (_, index) => event => {\n    onSelect == null ? void 0 : onSelect(index, event);\n  }), [indicators, numChildren, onSelect]);\n  return /*#__PURE__*/_jsxs(Component, {\n    ref: elementRef,\n    ...props,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n    onMouseOut: handleMouseOut,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    className: classNames(className, prefix, slide && 'slide', fade && `${prefix}-fade`, variant && `${prefix}-${variant}`),\n    children: [indicators && /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-indicators`,\n      children: map(children, (_, index) => /*#__PURE__*/_jsx(\"button\", {\n        type: \"button\",\n        \"data-bs-target\": \"\" // Bootstrap requires this in their css.\n        ,\n        \"aria-label\": indicatorLabels != null && indicatorLabels.length ? indicatorLabels[index] : `Slide ${index + 1}`,\n        className: index === renderedActiveIndex ? 'active' : undefined,\n        onClick: indicatorOnClicks ? indicatorOnClicks[index] : undefined,\n        \"aria-current\": index === renderedActiveIndex\n      }, index))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: `${prefix}-inner`,\n      children: map(children, (child, index) => {\n        const isActive = index === renderedActiveIndex;\n        return slide ? /*#__PURE__*/_jsx(TransitionWrapper, {\n          in: isActive,\n          onEnter: isActive ? handleEnter : undefined,\n          onEntered: isActive ? handleEntered : undefined,\n          addEndListener: transitionEndListener,\n          children: (status, innerProps) => /*#__PURE__*/React.cloneElement(child, { ...innerProps,\n            className: classNames(child.props.className, isActive && status !== 'entered' && orderClassName, (status === 'entered' || status === 'exiting') && 'active', (status === 'entering' || status === 'exiting') && directionalClassName)\n          })\n        }) : /*#__PURE__*/React.cloneElement(child, {\n          className: classNames(child.props.className, isActive && 'active')\n        });\n      })\n    }), controls && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [(wrap || activeIndex !== 0) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-prev`,\n        onClick: prev,\n        children: [prevIcon, prevLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: prevLabel\n        })]\n      }), (wrap || activeIndex !== numChildren - 1) && /*#__PURE__*/_jsxs(Anchor, {\n        className: `${prefix}-control-next`,\n        onClick: next,\n        children: [nextIcon, nextLabel && /*#__PURE__*/_jsx(\"span\", {\n          className: \"visually-hidden\",\n          children: nextLabel\n        })]\n      })]\n    })]\n  });\n});\nCarousel.displayName = 'Carousel';\nCarousel.defaultProps = defaultProps;\nexport default Object.assign(Carousel, {\n  Caption: CarouselCaption,\n  Item: CarouselItem\n});","import { useState } from 'react';\nimport { Row, Col, Card, Carousel } from 'react-bootstrap';\nimport { PageTitle } from 'components';\n\nconst DefaultSlides = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Slides only</h4>\n                <p className=\"text-muted font-14\">\n                    Here’s a carousel with slides only. Note the presence of the <code>.d-block</code>\n                    and <code>.img-fluid</code> on carousel images to prevent browser default image alignment.\n                </p>\n\n                <Carousel indicators={false} controls={false}>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?sea\"\n                            alt=\"First slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?nature\"\n                            alt=\"Second slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?island\"\n                            alt=\"Third slide\"\n                        />\n                    </Carousel.Item>\n                </Carousel>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst SlidesWithControls = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">With controls</h4>\n                <p className=\"text-muted font-14\">Adding in the previous and next controls:</p>\n                <Carousel indicators={false}>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?sea\"\n                            alt=\"First slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?nature\"\n                            alt=\"Second slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?island\"\n                            alt=\"Third slide\"\n                        />\n                    </Carousel.Item>\n                </Carousel>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst SlidesWithIndicators = () => {\n    const [index, setIndex] = useState<number>(0);\n\n    const handleSelect = (selectedIndex: number) => {\n        setIndex(selectedIndex);\n    };\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">With indicators</h4>\n                <p className=\"text-muted font-14\">\n                    You can also add the indicators to the carousel, alongside the controls, too.\n                </p>\n                <Carousel activeIndex={index} onSelect={handleSelect}>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?sea\"\n                            alt=\"First slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?nature\"\n                            alt=\"Second slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?island\"\n                            alt=\"Third slide\"\n                        />\n                    </Carousel.Item>\n                </Carousel>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst SlidesWithCaptions = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">With captions</h4>\n                <p className=\"text-muted font-14\">\n                    Add captions to your slides easily with the <code>.carousel-caption</code> element within any{' '}\n                    <code>.carousel-item</code>.\n                </p>\n                <Carousel indicators={false}>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?sea\"\n                            alt=\"First slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3>First slide label</h3>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?nature\"\n                            alt=\"Second slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3>Second slide label</h3>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?island\"\n                            alt=\"Third slide\"\n                        />\n                        <Carousel.Caption>\n                            <h3>Third slide label</h3>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst CrossFade = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Crossfade</h4>\n                <p className=\"text-muted font-14\">\n                    Add <code>.carousel-fade</code> to your carousel to animate slides with a fade transition instead of\n                    a slide.\n                </p>\n                <Carousel fade indicators={false}>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?sea\"\n                            alt=\"First slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?nature\"\n                            alt=\"Second slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?island\"\n                            alt=\"Third slide\"\n                        />\n                    </Carousel.Item>\n                </Carousel>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst IndividualInterval = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Individual interval</h4>\n                <p className=\"text-muted font-14\">\n                    Add <code>data-bs-interval=\"\"</code> to a <code>.carousel-item</code> to change the amount of time\n                    to delay between automatically cycling to the next item.\n                </p>\n                <Carousel fade indicators={false}>\n                    <Carousel.Item interval={1000}>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?sea\"\n                            alt=\"First slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item interval={2000}>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?nature\"\n                            alt=\"Second slide\"\n                        />\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                            className=\"d-block w-100\"\n                            src=\"https://source.unsplash.com/800x400/?island\"\n                            alt=\"Third slide\"\n                        />\n                    </Carousel.Item>\n                </Carousel>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Carousels = () => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/carousel' },\n                    { label: 'Carousel', path: '/ui/carousel', active: true },\n                ]}\n                title={'Carousel'}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <DefaultSlides />\n                </Col>\n\n                <Col lg={6}>\n                    <SlidesWithControls />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <SlidesWithIndicators />\n                </Col>\n                <Col lg={6}>\n                    <SlidesWithCaptions />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <CrossFade />\n                </Col>\n                <Col lg={6}>\n                    <IndividualInterval />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Carousels;\n"],"names":["fn","deps","isFirst","useRef","useEffect","current","createWithBsPrefix","CarouselItem","React","ref","as","Component","bsPrefix","className","props","finalClassName","classNames","useBootstrapPrefix","_jsx","displayName","defaultProps","slide","fade","controls","indicators","indicatorLabels","defaultActiveIndex","interval","keyboard","pause","wrap","touch","prevIcon","prevLabel","nextIcon","nextLabel","Carousel","uncontrolledProps","useUncontrolled","activeIndex","onSelect","onSlide","onSlid","onKeyDown","onMouseOver","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","variant","children","prefix","isRTL","useIsRTL","nextDirectionRef","useState","direction","setDirection","paused","setPaused","isSliding","setIsSliding","renderedActiveIndex","setRenderedActiveIndex","activeChildInterval","numChildren","forEach","child","index","activeChildIntervalRef","useCommittedRef","prev","useCallback","event","nextActiveIndex","next","useEventCallback","elementRef","useImperativeHandle","element","nextWhenVisible","document","hidden","style","parentNode","elementStyle","getComputedStyle","display","visibility","isVisible","slideDirection","useUpdateEffect","orderClassName","directionalClassName","handleEnter","node","triggerBrowserReflow","handleEntered","handleKeyDown","test","target","tagName","key","preventDefault","handleMouseOver","handleMouseOut","touchStartXRef","touchDeltaXRef","touchUnpauseTimeout","useTimeout","handleTouchStart","touches","clientX","handleTouchMove","length","handleTouchEnd","touchDeltaX","Math","abs","set","undefined","shouldPlay","intervalHandleRef","_ref","_activeChildIntervalR","nextFunc","window","setInterval","visibilityState","clearInterval","indicatorOnClicks","useMemo","Array","from","_","_jsxs","map","type","onClick","isActive","TransitionWrapper","in","onEnter","onEntered","addEndListener","transitionEndListener","status","innerProps","_Fragment","Anchor","Object","assign","Caption","CarouselCaption","Item","DefaultSlides","Card","src","alt","SlidesWithControls","SlidesWithIndicators","setIndex","selectedIndex","SlidesWithCaptions","CrossFade","IndividualInterval","breadCrumbItems","label","path","active","title","Row","Col","lg"],"sourceRoot":""}