{"version":3,"file":"static/js/6912.e67635d5.chunk.js","mappings":"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","sources":["pages/apps/Projects/Gantt/data.ts","pages/apps/Projects/Gantt/ProjectGannt.tsx","pages/apps/Projects/hooks/useProjectForm.ts","pages/apps/Projects/hooks/useProjectGannt.ts","../node_modules/react-bootstrap/esm/ButtonGroup.js"],"sourcesContent":["import { Task } from 'frappe-gantt';\nimport { GanttProjectItem } from '../types';\n\nconst tasks: Task[] = [\n    {\n        id: '1',\n        name: 'Draft the new contract document for sales team',\n        start: '2019-07-16',\n        end: '2019-07-20',\n        progress: 55,\n        dependencies: '0',\n    },\n    {\n        id: '2',\n        name: 'Find out the old contract documents',\n        start: '2019-07-19',\n        end: '2019-07-21',\n        progress: 85,\n        dependencies: '1',\n    },\n    {\n        id: '3',\n        name: 'Organize meeting with sales associates to understand need in detail',\n        start: '2019-07-21',\n        end: '2019-07-22',\n        progress: 80,\n        dependencies: '2',\n    },\n    {\n        id: '4',\n        name: 'iOS App home page',\n        start: '2019-07-15',\n        end: '2019-07-17',\n        progress: 80,\n        dependencies: '0',\n    },\n    {\n        id: '5',\n        name: 'Write a release note',\n        start: '2019-07-18',\n        end: '2019-07-22',\n        progress: 65,\n        dependencies: '4',\n    },\n    {\n        id: '6',\n        name: 'Setup new sales project',\n        start: '2019-07-20',\n        end: '2019-07-31',\n        progress: 15,\n        dependencies: '0',\n    },\n    {\n        id: '7',\n        name: 'Invite user to a project',\n        start: '2019-07-25',\n        end: '2019-07-26',\n        progress: 99,\n        dependencies: '6',\n    },\n    {\n        id: '8',\n        name: 'Coordinate with business development',\n        start: '2019-07-28',\n        end: '2019-07-30',\n        progress: 35,\n        dependencies: '7',\n    },\n    {\n        id: '9',\n        name: 'Kanban board design',\n        start: '2019-08-01',\n        end: '2019-08-03',\n        progress: 25,\n        dependencies: '8',\n    },\n    {\n        id: '10',\n        name: 'Enable analytics tracking',\n        start: '2019-08-05',\n        end: '2019-08-07',\n        progress: 60,\n        dependencies: '9',\n    },\n];\n\nconst projects: GanttProjectItem[] = [\n    {\n        id: 'proj101',\n        name: 'Lunar',\n        status: 'On-Track',\n        icon: 'uil uil-moonset',\n    },\n    {\n        id: 'proj102',\n        name: 'Dark Moon',\n        status: 'On-Track',\n        icon: 'uil uil-moon-eclipse',\n    },\n    {\n        id: 'proj103',\n        name: 'Aurora',\n        status: 'Locked',\n        icon: 'uil uil-mountains',\n    },\n    {\n        id: 'proj104',\n        name: 'Blue Moon',\n        status: 'Locked',\n        icon: 'uil uil-moon',\n    },\n    {\n        id: 'proj105',\n        name: 'Casanova',\n        status: 'Delayed',\n        icon: 'uil uil-ship',\n    },\n    {\n        id: 'proj106',\n        name: 'Darwin',\n        status: 'On-Track',\n        icon: 'uil uil-subway-alt',\n    },\n    {\n        id: 'proj107',\n        name: 'Eagle',\n        status: 'Delayed',\n        icon: 'uil uil-gold',\n    },\n];\n\nexport { projects, tasks };\n","import { Link } from 'react-router-dom';\nimport { Row, Col, Card, Button, ButtonGroup } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport SimpleBar from 'simplebar-react';\nimport { PageTitle } from 'components';\nimport { GanttProjectItem } from '../types';\nimport { projects } from './data';\nimport { useProjectGannt } from '../hooks';\n\ntype ProjectProps = {\n    project: GanttProjectItem;\n    onSelectProject: (p: GanttProjectItem) => void;\n    selectedProject: GanttProjectItem;\n};\n\nconst Project = ({ project, onSelectProject, selectedProject }: ProjectProps) => {\n    return (\n        <Link to=\"#\" className=\"text-body\" onClick={(e) => onSelectProject(project)}>\n            <div\n                className={classNames('d-flex', 'p-2', {\n                    'bg-light': selectedProject && selectedProject.id === project.id,\n                })}\n            >\n                <div className=\"avatar-sm\">\n                    {project.status === 'On-Track' && (\n                        <span className=\"avatar-title bg-success-lighten rounded-circle text-success\">\n                            <i className={classNames(project.icon, 'font-24')}></i>\n                        </span>\n                    )}\n\n                    {project.status === 'Locked' && (\n                        <span className=\"avatar-title bg-warning-lighten rounded-circle text-warning\">\n                            <i className={classNames(project.icon, 'font-24')}></i>\n                        </span>\n                    )}\n\n                    {project.status === 'Delayed' && (\n                        <span className=\"avatar-title bg-danger-lighten rounded-circle text-danger\">\n                            <i className={classNames(project.icon, 'font-24')}></i>\n                        </span>\n                    )}\n                </div>\n                <div className=\"ms-2\">\n                    <h5 className=\"mt-0 mb-0\">\n                        {project.name}\n                        <span\n                            className={classNames('badge', 'ms-1', {\n                                'badge-success-lighten': project.status === 'On-Track',\n                                'badge-warning-lighten': project.status === 'Locked',\n                                'badge-danger-lighten': project.status === 'Delayed',\n                            })}\n                        >\n                            {project.status}\n                        </span>\n                    </h5>\n                    <p className=\"mt-1 mb-0 text-muted\">ID: {project.id}</p>\n                </div>\n            </div>\n        </Link>\n    );\n};\n\nconst ProjectGannt = () => {\n    const { selectedProject, mode, modes, onSelectProject, changeMode } = useProjectGannt();\n\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Projects', path: '/apps/projects/gantt' },\n                    { label: 'Gantt', path: '/apps/projects/gantt', active: true },\n                ]}\n                title={'Gantt'}\n            />\n\n            <Card>\n                <Card.Body>\n                    <Row>\n                        <Col xxl={3} lg={4}>\n                            <div className=\"pe-xl-3\">\n                                <h5 className=\"mt-0 mb-3\">Projects</h5>\n                                <div className=\"app-search\">\n                                    <form>\n                                        <div className=\"mb-2 position-relative\">\n                                            <input\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"search by name...\"\n                                            />\n                                            <span className=\"mdi mdi-magnify search-icon\"></span>\n                                        </div>\n                                    </form>\n                                </div>\n\n                                <Row>\n                                    <Col>\n                                        <SimpleBar style={{ maxHeight: '535px', width: '100%' }}>\n                                            {projects.map((project, index) => {\n                                                return (\n                                                    <Project\n                                                        project={project}\n                                                        key={index.toString()}\n                                                        selectedProject={selectedProject}\n                                                        onSelectProject={(p: GanttProjectItem) => onSelectProject(p)}\n                                                    ></Project>\n                                                );\n                                            })}\n                                        </SimpleBar>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Col>\n\n                        <Col xxl={9} lg={8} className=\"mt-4 mt-xl-0\">\n                            <div className=\"ps-xl-3\">\n                                <Row>\n                                    <Col className=\"col-auto\">\n                                        <Link to=\"#\" className=\"btn btn-success btn-sm mb-2\">\n                                            Add New Task\n                                        </Link>\n                                    </Col>\n                                    <Col className=\"text-sm-end\">\n                                        <ButtonGroup>\n                                            {modes.map((m, index) => {\n                                                return (\n                                                    <Button\n                                                        variant=\"primary\"\n                                                        size={'sm'}\n                                                        key={index.toString()}\n                                                        onClick={() => changeMode(m)}\n                                                        active={mode === m}\n                                                    >\n                                                        {m}\n                                                    </Button>\n                                                );\n                                            })}\n                                        </ButtonGroup>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col className=\"mt-3\">\n                                        <svg id=\"tasks-gantt\"></svg>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n        </>\n    );\n};\n\nexport { ProjectGannt };\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport avatar1 from 'assets/images/users/avatar-6.jpg';\nimport avatar2 from 'assets/images/users/avatar-7.jpg';\nimport avatar3 from 'assets/images/users/avatar-8.jpg';\nimport avatar4 from 'assets/images/users/avatar-9.jpg';\nimport avatar5 from 'assets/images/users/avatar-10.jpg';\nimport avatar6 from 'assets/images/users/avatar-4.jpg';\nimport avatar7 from 'assets/images/users/avatar-5.jpg';\nimport avatar8 from 'assets/images/users/avatar-1.jpg';\nimport { TeamMember } from '../types';\n\nexport default function useProjectForm() {\n    const [teamMembers] = useState<TeamMember[]>([\n        { value: 'Shreyu N', name: 'Shreyu N', image: avatar2 },\n        { value: 'Greeva N', name: 'Greeva N', image: avatar5 },\n        { value: 'Dhyanu B', name: 'Dhyanu B', image: avatar4 },\n        { value: 'Mannat B', name: 'Mannat B', image: avatar6 },\n        { value: 'Katu S', name: 'Katu S', image: avatar7 },\n        { value: 'Nik N', name: 'Nik N', image: avatar1 },\n        { value: 'Rik N', name: 'Rik N', image: avatar8 },\n    ]);\n\n    const [selectedTeamMembers, setSelectedTeamMembers] = useState<TeamMember[]>([\n        { value: 'Shreyu N', name: 'Shreyu N', image: avatar1 },\n        { value: 'Greeva N', name: 'Greeva N', image: avatar2 },\n        { value: 'Dhyanu B', name: 'Dhyanu B', image: avatar3 },\n    ]);\n\n    /*\n     *  add selected team members\n     */\n    const selectTeamMembers = (e: any[]) => {\n        if (e.length !== 0) {\n            const isAlreadySelected = selectedTeamMembers.filter((x) => x['name'] && x['name'] === e[0].name);\n            if (isAlreadySelected && isAlreadySelected.length === 0) {\n                setSelectedTeamMembers([...selectedTeamMembers, e[0]]);\n            }\n        }\n    };\n\n    /*\n     * form validation schema\n     */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            name: yup.string().required('Please enter Project Name'),\n        })\n    );\n\n    /*\n     * form methods\n     */\n    const methods = useForm({ resolver: schemaResolver });\n    const {\n        handleSubmit,\n        register,\n        control,\n        formState: { errors },\n    } = methods;\n\n    /**\n     * Handle the form submission\n     */\n    const handleValidSubmit = (value: Record<string, string>) => {\n        console.log({ ...value });\n    };\n\n    return {\n        teamMembers,\n        selectedTeamMembers,\n        handleSubmit,\n        register,\n        control,\n        errors,\n        handleValidSubmit,\n        selectTeamMembers,\n    };\n}\n","import { useState, useEffect } from 'react';\nimport Gantt from 'frappe-gantt';\nimport { GanttProjectItem } from '../types';\nimport { projects, tasks as tasksData } from '../Gantt/data';\n\nexport default function useProjectGannt() {\n    const [selectedProject, setSelectedProject] = useState<GanttProjectItem>(projects[1]);\n    const [mode, setMode] = useState<Gantt.viewMode>('Week');\n    const [gantt, setGantt] = useState<Gantt>();\n\n    const modes: Gantt.viewMode[] = ['Quarter Day', 'Half Day', 'Day', 'Week', 'Month'];\n\n    useEffect(() => {\n        // create gantt\n        const gantt = new Gantt('#tasks-gantt', [...tasksData], {\n            view_modes: ['Quarter Day', 'Half Day', 'Day', 'Week', 'Month'],\n            bar_height: 20,\n            padding: 18,\n            view_mode: 'Week',\n            custom_popup_html(task) {\n                return (\n                    '<div class=\"popover fade show bs-popover-right gantt-task-details\" role=\"tooltip\">' +\n                    '<div class=\"arrow\"></div><div class=\"popover-body\">' +\n                    `<h5>${task.name}</h5><p class=\"mb-2\">Expected to finish by ${task.end}</p>` +\n                    '<div class=\"progress mb-2\" style=\"height: 10px;\">' +\n                    `<div class=\"progress-bar\" role=\"progressbar\" style=\"width: ${task.progress}%;\" aria-valuenow=\"${task.progress}\"` +\n                    ` aria-valuemin=\"0\" aria-valuemax=\"100\">${task.progress}%</div>` +\n                    '</div></div></div>'\n                );\n            },\n        });\n        setGantt(gantt);\n    }, []);\n\n    const onSelectProject = (p: GanttProjectItem) => {\n        setSelectedProject(p);\n    };\n\n    /**\n     * On mode change\n     * @param {*} mode\n     */\n    const changeMode = (mode: Gantt.viewMode) => {\n        setMode(mode);\n        if (gantt) {\n            gantt.change_view_mode(mode);\n        }\n    };\n    return {\n        mode,\n        selectedProject,\n        modes,\n        onSelectProject,\n        changeMode,\n    };\n}\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  vertical: false,\n  role: 'group'\n};\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, { ...rest,\n    ref: ref,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;"],"names":["tasks","id","name","start","end","progress","dependencies","projects","status","icon","Project","project","onSelectProject","selectedProject","to","className","onClick","e","classNames","ProjectGannt","useProjectGannt","mode","modes","changeMode","breadCrumbItems","label","path","active","title","Card","Row","Col","xxl","lg","type","placeholder","style","maxHeight","width","index","p","toString","ButtonGroup","map","m","Button","variant","size","useProjectForm","useState","value","image","avatar2","avatar5","avatar4","avatar6","avatar7","avatar1","avatar8","teamMembers","avatar3","selectedTeamMembers","setSelectedTeamMembers","schemaResolver","yupResolver","yup","shape","required","methods","useForm","resolver","handleSubmit","register","control","errors","formState","handleValidSubmit","console","log","selectTeamMembers","length","isAlreadySelected","filter","x","setSelectedProject","setMode","gantt","setGantt","useEffect","Gantt","tasksData","view_modes","bar_height","padding","view_mode","custom_popup_html","task","change_view_mode","React","ref","bsPrefix","vertical","as","Component","rest","prefix","useBootstrapPrefix","baseClass","_jsx","displayName","defaultProps","role"],"sourceRoot":""}