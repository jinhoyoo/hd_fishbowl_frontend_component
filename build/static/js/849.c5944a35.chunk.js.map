{"version":3,"file":"static/js/849.c5944a35.chunk.js","mappings":"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","sources":["layouts/Horizontal/Menu/MenuItemLink.tsx","layouts/Horizontal/Menu/MenuItemWithChildren.tsx","layouts/Horizontal/Menu/MenuItem.tsx","layouts/Horizontal/Menu/index.tsx","layouts/Horizontal/Navbar.tsx","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/dom-helpers/esm/addEventListener.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/listen.js","../node_modules/dom-helpers/esm/ownerDocument.js","../node_modules/dom-helpers/esm/removeEventListener.js"],"sourcesContent":["import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { MenuItems } from './types';\n\nconst MenuItemLink = ({ item, className }: MenuItems) => {\n    return (\n        <Link\n            to={{ pathname: item.url }}\n            target={item.target}\n            className={classNames(className)}\n            data-menu-key={item.key}\n        >\n            {item.icon && <i className={item.icon}></i>}\n            <span> {item.label} </span>\n        </Link>\n    );\n};\nexport default MenuItemLink;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { MenuItems } from './types';\nimport MenuItemLink from './MenuItemLink';\n\nconst MenuItemWithChildren = ({\n    item,\n    tag,\n    linkClassName,\n    className,\n    subMenuClassNames,\n    activeMenuItems,\n    toggleMenu,\n}: MenuItems) => {\n    const Tag: React.ElementType = tag || 'div';\n\n    const [open, setOpen] = useState<boolean>(activeMenuItems!.includes(item.key));\n\n    const showMenu: boolean = window.screen.width <= 768 && open;\n\n    useEffect(() => {\n        setOpen(activeMenuItems!.includes(item.key));\n    }, [activeMenuItems, item]);\n\n    const toggleMenuItem = (e: React.MouseEvent<HTMLAnchorElement>) => {\n        e.preventDefault();\n        const status = !open;\n        setOpen(status);\n        if (toggleMenu) toggleMenu(item, status);\n        return false;\n    };\n\n    return (\n        <Tag className={classNames('dropdown', className, activeMenuItems!.includes(item.key) ? 'active' : '')}>\n            <Link\n                to=\"/#\"\n                onClick={toggleMenuItem}\n                data-menu-key={item.key}\n                className={classNames('dropdown-toggle', 'arrow-none', linkClassName)}\n                id={item.key}\n                role=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded={open}\n            >\n                {item.icon && <i className={item.icon}></i>}\n                <span> {item.label} </span>\n                <div className=\"arrow-down\"></div>\n            </Link>\n\n            {item.children ? (\n                <div className={classNames(subMenuClassNames, { show: showMenu })} aria-labelledby={item.key}>\n                    {item.children.map((child, index) => {\n                        return (\n                            <React.Fragment key={index.toString()}>\n                                {child.children ? (\n                                    <>\n                                        {/* parent */}\n                                        <MenuItemWithChildren\n                                            item={child}\n                                            tag=\"div\"\n                                            linkClassName={classNames(\n                                                'dropdown-item',\n                                                activeMenuItems!.includes(child.key) ? 'active' : ''\n                                            )}\n                                            activeMenuItems={activeMenuItems}\n                                            className=\"\"\n                                            subMenuClassNames=\"dropdown-menu\"\n                                            toggleMenu={toggleMenu}\n                                        />\n                                    </>\n                                ) : (\n                                    <>\n                                        {/* child */}\n                                        <MenuItemLink\n                                            item={child}\n                                            className={classNames('dropdown-item', {\n                                                active: activeMenuItems!.includes(child.key),\n                                            })}\n                                        />\n                                    </>\n                                )}\n                            </React.Fragment>\n                        );\n                    })}\n                </div>\n            ) : null}\n        </Tag>\n    );\n};\n\nexport default MenuItemWithChildren;\n","import classNames from 'classnames';\nimport { MenuItems } from './types';\nimport MenuItemLink from './MenuItemLink';\n\nconst MenuItem = ({ item, className, linkClassName }: MenuItems) => {\n    return (\n        <li className={classNames('nav-item', className)}>\n            <MenuItemLink item={item} className={linkClassName} />\n        </li>\n    );\n};\n\nexport default MenuItem;\n","import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { findAllParent, findMenuItem } from 'helpers';\nimport { MenuItemType } from 'appConstants';\nimport MenuItemWithChildren from './MenuItemWithChildren';\nimport MenuItem from './MenuItem';\n\n/**\n * Renders the application menu\n */\n\ntype AppMenuProps = {\n    menuItems: Array<MenuItemType>;\n};\n\nconst AppMenu = ({ menuItems }: AppMenuProps) => {\n    let location = useLocation();\n    const menuRef = useRef<HTMLUListElement>(null);\n\n    const [topnavMenuItems, setTopnavMenuItems] = useState<MenuItemType[]>(menuItems);\n    const [activeMenuItems, setActiveMenuItems] = useState<string[]>([]);\n\n    /*\n     * toggle the menus\n     */\n    const toggleMenu = (menuItem: MenuItemType, show: boolean) => {\n        if (show) setActiveMenuItems([menuItem['key'], ...findAllParent(topnavMenuItems, menuItem)]);\n    };\n\n    /**\n     * activate the menuitems\n     */\n    const activeMenu = useCallback(() => {\n        const div = document.getElementById('main-side-menu');\n        let matchingMenuItem = null;\n\n        if (div) {\n            let items: HTMLCollectionOf<HTMLAnchorElement> = div.getElementsByTagName('a');\n            for (let i = 0; i < items.length; ++i) {\n                if (location.pathname === items[i].pathname) {\n                    matchingMenuItem = items[i];\n                    break;\n                }\n            }\n\n            if (matchingMenuItem) {\n                const mid = matchingMenuItem.getAttribute('data-menu-key');\n                const activeMt = findMenuItem(topnavMenuItems, mid!);\n                if (activeMt) {\n                    setActiveMenuItems([activeMt['key'], ...findAllParent(topnavMenuItems, activeMt)]);\n                }\n            }\n        }\n    }, [location.pathname, topnavMenuItems]);\n\n    useEffect(() => {\n        //controlling how many menu items can be displayed in it\n        let modifiedMenuItems = menuItems ? menuItems.filter((item) => (!item.isTitle ? item : null)) : [];\n        const defaultDisplayedItems = window.screen.width > 1366 ? 7 : 5;\n\n        if (modifiedMenuItems.length > defaultDisplayedItems) {\n            const displayedItems = modifiedMenuItems.slice(0, defaultDisplayedItems);\n\n            const moreChildren = modifiedMenuItems\n                .slice(defaultDisplayedItems, menuItems.length)\n                .map((i) => ({ ...i, parentKey: 'more' }));\n\n            const otherItems = {\n                id: modifiedMenuItems.length + 1,\n                path: '/',\n                label: 'More',\n                icon: 'uil-ellipsis-h',\n                key: 'more',\n                children: moreChildren,\n            };\n            modifiedMenuItems = [...displayedItems, otherItems];\n            setTopnavMenuItems(modifiedMenuItems);\n        } else {\n            setTopnavMenuItems(modifiedMenuItems);\n        }\n    }, [menuItems]);\n\n    useEffect(() => {\n        if (topnavMenuItems && topnavMenuItems.length > 0) activeMenu();\n    }, [activeMenu, topnavMenuItems]);\n\n    return (\n        <ul className=\"navbar-nav\" ref={menuRef} id=\"main-side-menu\">\n            {(topnavMenuItems || []).map((item, index) => {\n                return (\n                    <React.Fragment key={index.toString()}>\n                        {item.children ? (\n                            <MenuItemWithChildren\n                                item={item}\n                                tag=\"li\"\n                                className=\"nav-item\"\n                                subMenuClassNames=\"dropdown-menu\"\n                                activeMenuItems={activeMenuItems}\n                                linkClassName=\"nav-link\"\n                                toggleMenu={toggleMenu}\n                            />\n                        ) : (\n                            <MenuItem\n                                item={item}\n                                linkClassName=\"nav-link dropdown-toggle arrow-none\"\n                                className={activeMenuItems.includes(item.key) ? 'active' : ''}\n                            />\n                        )}\n                    </React.Fragment>\n                );\n            })}\n        </ul>\n    );\n};\n\nexport default AppMenu;\n","import AppMenu from './Menu/';\nimport { Collapse } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { getMenuItems } from 'helpers';\n\ntype NavbarProps = {\n    isMenuOpened?: boolean;\n};\n\nconst Navbar = ({ isMenuOpened }: NavbarProps) => {\n    // change the inputTheme value to light for creative theme\n    const inputTheme = 'dark';\n\n    return (\n        <div className=\"topnav shadow-sm\">\n            <div className=\"container-fluid\">\n                <nav className={classNames('navbar', 'navbar-expand-lg', 'topnav-menu', 'navbar-' + inputTheme)}>\n                    <Collapse in={isMenuOpened} className=\"navbar-collapse\">\n                        <div id=\"topnav-menu-content\">\n                            <AppMenu menuItems={getMenuItems()} />\n                        </div>\n                    </Collapse>\n                </nav>\n            </div>\n        </div>\n    );\n};\n\nexport default Navbar;\n","import { useMemo } from 'react';\n\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\nexport function mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n * @category refs\n */\n\nfunction useMergedRefs(refA, refB) {\n  return useMemo(function () {\n    return mergeRefs(refA, refB);\n  }, [refA, refB]);\n}\n\nexport default useMergedRefs;","/* eslint-disable no-return-assign */\nimport canUseDOM from './canUseDOM';\nexport var optionsSupported = false;\nexport var onceSupported = false;\n\ntry {\n  var options = {\n    get passive() {\n      return optionsSupported = true;\n    },\n\n    get once() {\n      // eslint-disable-next-line no-multi-assign\n      return onceSupported = optionsSupported = true;\n    }\n\n  };\n\n  if (canUseDOM) {\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, true);\n  }\n} catch (e) {\n  /* */\n}\n\n/**\n * An `addEventListener` ponyfill, supports the `once` option\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction addEventListener(node, eventName, handler, options) {\n  if (options && typeof options !== 'boolean' && !onceSupported) {\n    var once = options.once,\n        capture = options.capture;\n    var wrappedHandler = handler;\n\n    if (!onceSupported && once) {\n      wrappedHandler = handler.__once || function onceHandler(event) {\n        this.removeEventListener(eventName, onceHandler, capture);\n        handler.call(this, event);\n      };\n\n      handler.__once = wrappedHandler;\n    }\n\n    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);\n  }\n\n  node.addEventListener(eventName, handler, options);\n}\n\nexport default addEventListener;","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import addEventListener from './addEventListener';\nimport removeEventListener from './removeEventListener';\n\nfunction listen(node, eventName, handler, options) {\n  addEventListener(node, eventName, handler, options);\n  return function () {\n    removeEventListener(node, eventName, handler, options);\n  };\n}\n\nexport default listen;","/**\n * Returns the owner document of a given element.\n * \n * @param node the element\n */\nexport default function ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}","/**\n * A `removeEventListener` ponyfill\n * \n * @param node the element\n * @param eventName the event name\n * @param handle the handler\n * @param options event options\n */\nfunction removeEventListener(node, eventName, handler, options) {\n  var capture = options && typeof options !== 'boolean' ? options.capture : options;\n  node.removeEventListener(eventName, handler, capture);\n\n  if (handler.__once) {\n    node.removeEventListener(eventName, handler.__once, capture);\n  }\n}\n\nexport default removeEventListener;"],"names":["item","className","to","pathname","url","target","classNames","key","icon","label","MenuItemWithChildren","tag","linkClassName","subMenuClassNames","activeMenuItems","toggleMenu","Tag","useState","includes","open","setOpen","showMenu","window","screen","width","useEffect","onClick","e","preventDefault","status","id","role","children","show","map","child","index","active","toString","menuItems","location","useLocation","menuRef","useRef","topnavMenuItems","setTopnavMenuItems","setActiveMenuItems","menuItem","findAllParent","activeMenu","useCallback","div","document","getElementById","matchingMenuItem","items","getElementsByTagName","i","length","mid","getAttribute","activeMt","findMenuItem","modifiedMenuItems","filter","isTitle","defaultDisplayedItems","displayedItems","slice","moreChildren","parentKey","otherItems","path","ref","isMenuOpened","Collapse","in","getMenuItems","toFnRef","value","current","refA","refB","useMemo","a","b","mergeRefs","optionsSupported","onceSupported","options","passive","once","canUseDOM","addEventListener","removeEventListener","node","eventName","handler","capture","wrappedHandler","__once","onceHandler","event","this","call","createElement","ownerDocument"],"sourceRoot":""}