{"version":3,"file":"static/js/2323.0408af18.chunk.js","mappings":"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","sources":["pages/apps/CRM/Dashboard/Statistics.tsx","pages/apps/CRM/Dashboard/CampaignsChart.tsx","pages/apps/CRM/Dashboard/RevenueChart.tsx","pages/apps/CRM/Dashboard/Performers.tsx","pages/apps/CRM/Dashboard/Leads.tsx","pages/apps/CRM/Dashboard/CampaignWidget.tsx","pages/apps/CRM/Dashboard/data.ts","pages/apps/CRM/Dashboard/CRMDashboard.tsx","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import { Row, Col } from 'react-bootstrap';\nimport { StatisticsChartWidget } from 'components';\n\nconst Statistics = () => {\n    return (\n        <Row>\n            <Col md={6} xl={3}>\n                <StatisticsChartWidget\n                    description=\"Campaign Sent\"\n                    title=\"Campaign Sent\"\n                    stats=\"9,184\"\n                    trend={{\n                        textClass: 'text-success',\n                        icon: 'mdi mdi-arrow-up-bold',\n                        value: '3.27%',\n                    }}\n                    colors={['#727cf5']}\n                    data={[25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54]}\n                ></StatisticsChartWidget>\n            </Col>\n            <Col md={6} xl={3}>\n                <StatisticsChartWidget\n                    description=\"New Leads\"\n                    title=\"New Leads\"\n                    stats=\"3,254\"\n                    trend={{\n                        textClass: 'text-danger',\n                        icon: 'mdi mdi-arrow-down-bold',\n                        value: '5.38%',\n                    }}\n                    colors={['#0acf97']}\n                    type=\"line\"\n                    data={[25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54]}\n                ></StatisticsChartWidget>\n            </Col>\n            <Col md={6} xl={3}>\n                <StatisticsChartWidget\n                    description=\"Deals\"\n                    title=\"Deals\"\n                    stats=\"861\"\n                    trend={{\n                        textClass: 'text-success',\n                        icon: 'mdi mdi-arrow-up-bold',\n                        value: '4.87%',\n                    }}\n                    colors={['#727cf5']}\n                    data={[12, 14, 2, 47, 42, 15, 47, 75, 65, 19, 14]}\n                ></StatisticsChartWidget>\n            </Col>\n            <Col md={6} xl={3}>\n                <StatisticsChartWidget\n                    description=\"Booked Revenue\"\n                    title=\"Booked Revenue\"\n                    stats=\"$253k\"\n                    trend={{\n                        textClass: 'text-success',\n                        icon: 'mdi mdi-arrow-up-bold',\n                        value: '11.7%',\n                    }}\n                    colors={['#0acf97']}\n                    data={[47, 45, 74, 14, 56, 74, 14, 11, 7, 39, 82]}\n                ></StatisticsChartWidget>\n            </Col>\n        </Row>\n    );\n};\n\nexport default Statistics;\n","import { ApexOptions } from 'apexcharts';\nimport Chart from 'react-apexcharts';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { CardTitle } from 'components';\n\nconst CampaignsChart = () => {\n    const apexBarChartOpts: ApexOptions = {\n        grid: {\n            padding: {\n                left: 0,\n                right: 0,\n            },\n        },\n        chart: {\n            height: 320,\n            type: 'radialBar',\n        },\n        colors: ['#ffbc00', '#727cf5', '#0acf97'],\n        labels: ['Total Sent', 'Reached', 'Opened'],\n        plotOptions: {\n            radialBar: {\n                track: {\n                    margin: 8,\n                },\n            },\n        },\n    };\n\n    const apexBarChartData: number[] = [86, 36, 50];\n\n    return (\n        <Card>\n            <Card.Body>\n                <CardTitle\n                    containerClass=\"d-flex align-items-center justify-content-between mb-1\"\n                    title=\"Campaigns\"\n                    menuItems={[\n                        { label: 'Today' },\n                        { label: 'Yesterday' },\n                        { label: 'Last Week' },\n                        { label: 'Last Month' },\n                    ]}\n                />\n\n                <Chart\n                    options={apexBarChartOpts}\n                    series={apexBarChartData}\n                    type=\"radialBar\"\n                    className=\"apex-charts\"\n                    height={302}\n                />\n\n                <Row className=\"text-center mt-3\">\n                    <Col sm={4}>\n                        <i className=\"mdi mdi-send widget-icon rounded-circle bg-light-lighten text-muted\"></i>\n                        <h3 className=\"fw-normal mt-3\">\n                            <span>6,510</span>\n                        </h3>\n                        <p className=\"text-muted mb-0 mb-2\">\n                            <i className=\"mdi mdi-checkbox-blank-circle text-warning\"></i> Total Sent\n                        </p>\n                    </Col>\n                    <Col sm={4}>\n                        <i className=\"mdi mdi-flag-variant widget-icon rounded-circle bg-light-lighten text-muted\"></i>\n                        <h3 className=\"fw-normal mt-3\">\n                            <span>3,487</span>\n                        </h3>\n                        <p className=\"text-muted mb-0 mb-2\">\n                            <i className=\"mdi mdi-checkbox-blank-circle text-primary\"></i> Reached\n                        </p>\n                    </Col>\n                    <Col sm={4}>\n                        <i className=\"mdi mdi-email-open widget-icon rounded-circle bg-light-lighten text-muted\"></i>\n                        <h3 className=\"fw-normal mt-3\">\n                            <span>1,568</span>\n                        </h3>\n                        <p className=\"text-muted mb-0 mb-2\">\n                            <i className=\"mdi mdi-checkbox-blank-circle text-success\"></i> Opened\n                        </p>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default CampaignsChart;\n","import { ApexOptions } from 'apexcharts';\nimport Chart from 'react-apexcharts';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { CardTitle } from 'components';\n\nconst RevenueChart = () => {\n    const apexLineChartWithLables: ApexOptions = {\n        chart: {\n            height: 336,\n            type: 'line',\n            toolbar: {\n                show: false,\n            },\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 2,\n        },\n        fill: {\n            type: 'solid',\n            opacity: [0.35, 1],\n        },\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        markers: {\n            size: 0,\n        },\n        colors: ['#0acf97', '#fa5c7c'],\n        yaxis: [\n            {\n                title: {\n                    text: 'Revenue (USD)',\n                },\n                min: 0,\n            },\n        ],\n        tooltip: {\n            shared: true,\n            intersect: false,\n            y: {\n                formatter: function (y) {\n                    if (typeof y !== 'undefined') {\n                        return y.toFixed(0) + 'k';\n                    }\n                    return y;\n                },\n            },\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n        legend: {\n            fontSize: '14px',\n            fontFamily: '14px',\n            offsetY: -10,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    yaxis: {\n                        show: false,\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const apexLineChartWithLablesData = [\n        {\n            name: 'Total Revenue',\n            type: 'area',\n            data: [44, 55, 31, 47, 31, 43, 26, 41, 31, 47, 33, 43],\n        },\n        {\n            name: 'Total Pipeline',\n            type: 'line',\n            data: [55, 69, 45, 61, 43, 54, 37, 52, 44, 61, 43, 56],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <CardTitle\n                    containerClass=\"d-flex align-items-center justify-content-between mb-3\"\n                    title=\"Revenue\"\n                    menuItems={[\n                        { label: 'Today' },\n                        { label: 'Yesterday' },\n                        { label: 'Last Week' },\n                        { label: 'Last Month' },\n                    ]}\n                />\n\n                <div className=\"chart-content-bg\">\n                    <Row className=\"text-center\">\n                        <Col sm={6}>\n                            <p className=\"text-muted mb-0 mt-3\">Current Month</p>\n                            <h2 className=\"fw-normal mb-3\">\n                                <span>$42,025</span>\n                            </h2>\n                        </Col>\n                        <Col sm={6}>\n                            <p className=\"text-muted mb-0 mt-3\">Previous Month</p>\n                            <h2 className=\"fw-normal mb-3\">\n                                <span>$74,651</span>\n                            </h2>\n                        </Col>\n                    </Row>\n                </div>\n\n                <div dir=\"ltr\">\n                    <Chart\n                        options={apexLineChartWithLables}\n                        series={apexLineChartWithLablesData}\n                        type=\"line\"\n                        className=\"apex-charts\"\n                        height={321}\n                    />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RevenueChart;\n","import { Card, Table } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { CardTitle } from 'components';\nimport { TopPerformer } from './types';\n\ntype PerformersProps = {\n    topPerformanceData: TopPerformer[];\n};\n\nconst Performers = ({ topPerformanceData }: PerformersProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <CardTitle\n                    containerClass=\"d-flex align-items-center justify-content-between mb-2\"\n                    title=\"Top Performing\"\n                    menuItems={[{ label: 'Settings' }, { label: 'Action' }]}\n                />\n\n                <Table hover responsive striped size=\"sm\" className=\"table-centered mb-0 table-nowrap\">\n                    <thead>\n                        <tr>\n                            <th>User</th>\n                            <th>Leads</th>\n                            <th>Deals</th>\n                            <th>Tasks</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {(topPerformanceData || []).map((item, index) => {\n                            return (\n                                <tr key={index.toString()}>\n                                    <td>\n                                        <h5 className=\"font-15 mb-1 fw-normal\">{item.name}</h5>\n                                        <span className=\"text-muted font-13\">{item.position}</span>\n                                    </td>\n                                    <td>{item.leads}</td>\n                                    <td>{item.deals}</td>\n                                    <td>{item.tasks}</td>\n                                    <td className=\"table-action\">\n                                        <Link to=\"#\" className=\"action-icon\">\n                                            {' '}\n                                            <i className=\"mdi mdi-eye\"></i>\n                                        </Link>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Performers;\n","import { Card } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { CardTitle } from 'components';\nimport { LeadItem } from './types';\n\ntype LeadsProps = {\n    recentLeads: LeadItem[];\n};\n\nconst Leads = ({ recentLeads }: LeadsProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <CardTitle\n                    containerClass=\"d-flex align-items-center justify-content-between mb-3\"\n                    title=\"Recent Leads\"\n                    menuItems={[{ label: 'Settings' }, { label: 'Action' }]}\n                />\n\n                {(recentLeads || []).map((item, index) => {\n                    return (\n                        <div\n                            key={index.toString()}\n                            className={classNames('d-flex', 'align-items-start', {\n                                'mt-3': index !== recentLeads.length,\n                            })}\n                        >\n                            <img\n                                className=\"me-3 rounded-circle\"\n                                src={item.profile}\n                                width=\"40\"\n                                alt=\"Generic placeholder\"\n                            />\n                            <div className=\"w-100 overflow-hidden\">\n                                <span\n                                    className={classNames('badge', 'float-end', {\n                                        'badge-warning-lighten': item.status === 'Cold',\n                                        'badge-danger-lighten': item.status === 'Lost',\n                                        'badge-success-lighten': item.status === 'Won',\n                                    })}\n                                >\n                                    {item.status} lead\n                                </span>\n                                <h5 className=\"mt-0 mb-1\">{item.name}</h5>\n                                <span className=\"font-13\">{item.email}</span>\n                            </div>\n                        </div>\n                    );\n                })}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Leads;\n","import { Card } from 'react-bootstrap';\nimport campaignSvg from 'assets/images/email-campaign.svg';\n\nconst CampaignWidget = () => {\n    return (\n        <Card className=\"cta-box bg-primary text-white\">\n            <Card.Body>\n                <div className=\"d-flex align-items-start align-items-center\">\n                    <div className=\"w-100 overflow-hidden\">\n                        <h2 className=\"mt-0\">\n                            <i className=\"mdi mdi-bullhorn-outline\"></i>\n                        </h2>\n                        <h3 className=\"m-0 fw-normal cta-box-title\">\n                            Enhance your <b>Campaign</b> for better outreach <i className=\"mdi mdi-arrow-right\"></i>\n                        </h3>\n                    </div>\n                    <img className=\"ms-3\" src={campaignSvg} width=\"120\" alt=\"Generic placeholder\" />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default CampaignWidget;\n","import { LeadItem, TopPerformer } from './types';\nimport avatar1 from 'assets/images/users/avatar-1.jpg';\nimport avatar2 from 'assets/images/users/avatar-2.jpg';\nimport avatar3 from 'assets/images/users/avatar-3.jpg';\nimport avatar4 from 'assets/images/users/avatar-4.jpg';\nimport avatar5 from 'assets/images/users/avatar-5.jpg';\nimport avatar6 from 'assets/images/users/avatar-6.jpg';\n\nconst topPerformanceData: TopPerformer[] = [\n    {\n        id: 1,\n        name: 'Jeremy Young',\n        position: 'Senior Sales Executive',\n        leads: 187,\n        deals: 154,\n        tasks: 49,\n    },\n    {\n        id: 2,\n        name: 'Thomas Krueger',\n        position: 'Senior Sales Executive',\n        leads: 235,\n        deals: 127,\n        tasks: 83,\n    },\n    {\n        id: 3,\n        name: 'Pete Burdine',\n        position: 'Senior Sales Executive',\n        leads: 365,\n        deals: 148,\n        tasks: 62,\n    },\n    {\n        id: 4,\n        name: 'Mary Nelson',\n        position: 'Senior Sales Executive',\n        leads: 753,\n        deals: 159,\n        tasks: 258,\n    },\n    {\n        id: 5,\n        name: 'Kevin Grove',\n        position: 'Senior Sales Executive',\n        leads: 458,\n        deals: 126,\n        tasks: 73,\n    },\n];\n\nconst recentLeads: LeadItem[] = [\n    {\n        id: 1,\n        name: 'Risa Pearson',\n        email: 'richard.john@mail.com',\n        profile: avatar2,\n        status: 'Cold',\n    },\n    {\n        id: 2,\n        name: 'Margaret D. Evans',\n        email: 'margaret.evans@rhyta.com',\n        profile: avatar3,\n        status: 'Lost',\n    },\n    {\n        id: 3,\n        name: 'Bryan J. Luellen',\n        email: 'bryuellen@dayrep.com',\n        profile: avatar4,\n        status: 'Won',\n    },\n    {\n        id: 4,\n        name: 'Kathryn S. Collier',\n        email: 'collier@jourrapide.com',\n        profile: avatar5,\n        status: 'Cold',\n    },\n    {\n        id: 5,\n        name: 'Timothy Kauper',\n        email: 'thykauper@rhyta.com',\n        profile: avatar1,\n        status: 'Cold',\n    },\n    {\n        id: 6,\n        name: 'Zara Raws',\n        email: 'austin@dayrep.com',\n        profile: avatar6,\n        status: 'Won',\n    },\n];\n\nexport { topPerformanceData, recentLeads };\n","import { Row, Col } from 'react-bootstrap';\nimport { PageTitle, TodoList } from 'components';\nimport Statistics from './Statistics';\nimport CampaignsChart from './CampaignsChart';\nimport RevenueChart from './RevenueChart';\nimport Performers from './Performers';\nimport Leads from './Leads';\nimport CampaignWidget from './CampaignWidget';\nimport { topPerformanceData, recentLeads } from './data';\n\nconst CRMDashboard = () => {\n    return (\n        <>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'CRM', path: '/apps/crm/dashboard' },\n                    { label: 'CRM Dashboard', path: '/apps/crm/dashboard', active: true },\n                ]}\n                title={'CRM Dashboard'}\n            />\n\n            <Statistics />\n\n            <Row>\n                <Col lg={5}>\n                    <CampaignsChart />\n                </Col>\n                <Col lg={7}>\n                    <RevenueChart />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={4} lg={12}>\n                    <Performers topPerformanceData={topPerformanceData} />\n                </Col>\n                <Col xl={4} lg={6}>\n                    <Leads recentLeads={recentLeads} />\n                </Col>\n                <Col xl={4} lg={6}>\n                    <CampaignWidget />\n                    <TodoList height=\"220px\" />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport { CRMDashboard };\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;"],"names":["Row","Col","md","xl","description","title","stats","trend","textClass","icon","value","colors","data","type","Card","containerClass","menuItems","label","options","grid","padding","left","right","chart","height","labels","plotOptions","radialBar","track","margin","series","className","sm","dir","toolbar","show","stroke","curve","width","fill","opacity","markers","size","yaxis","text","min","tooltip","shared","intersect","y","formatter","toFixed","borderColor","legend","fontSize","fontFamily","offsetY","responsive","breakpoint","name","topPerformanceData","Table","hover","striped","map","item","index","position","leads","deals","tasks","to","toString","recentLeads","classNames","length","src","profile","alt","status","email","campaignSvg","id","avatar2","avatar3","avatar4","avatar5","avatar1","avatar6","CRMDashboard","breadCrumbItems","path","active","lg","React","ref","bsPrefix","bordered","borderless","variant","props","decoratedBsPrefix","useBootstrapPrefix","classes","table","_jsx","responsiveClass","children"],"sourceRoot":""}