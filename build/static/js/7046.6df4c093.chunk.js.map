{"version":3,"file":"static/js/7046.6df4c093.chunk.js","mappings":"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","sources":["../node_modules/frappe-gantt/src/date_utils.js","../node_modules/frappe-gantt/src/svg_utils.js","../node_modules/frappe-gantt/src/bar.js","../node_modules/frappe-gantt/src/arrow.js","../node_modules/frappe-gantt/src/popup.js","../node_modules/frappe-gantt/src/index.js"],"sourcesContent":["const YEAR = 'year';\nconst MONTH = 'month';\nconst DAY = 'day';\nconst HOUR = 'hour';\nconst MINUTE = 'minute';\nconst SECOND = 'second';\nconst MILLISECOND = 'millisecond';\n\nconst month_names = {\n    en: [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    es: [\n        'Enero',\n        'Febrero',\n        'Marzo',\n        'Abril',\n        'Mayo',\n        'Junio',\n        'Julio',\n        'Agosto',\n        'Septiembre',\n        'Octubre',\n        'Noviembre',\n        'Diciembre'\n    ],\n    ru: [\n        'Январь',\n        'Февраль',\n        'Март',\n        'Апрель',\n        'Май',\n        'Июнь',\n        'Июль',\n        'Август',\n        'Сентябрь',\n        'Октябрь',\n        'Ноябрь',\n        'Декабрь'\n    ],\n    ptBr: [\n        'Janeiro',\n        'Fevereiro',\n        'Março',\n        'Abril',\n        'Maio',\n        'Junho',\n        'Julho',\n        'Agosto',\n        'Setembro',\n        'Outubro',\n        'Novembro',\n        'Dezembro'\n    ],\n    fr: [\n        'Janvier',\n        'Février',\n        'Mars',\n        'Avril',\n        'Mai',\n        'Juin',\n        'Juillet',\n        'Août',\n        'Septembre',\n        'Octobre',\n        'Novembre',\n        'Décembre'\n    ],\n    tr: [\n        'Ocak',\n        'Şubat',\n        'Mart',\n        'Nisan',\n        'Mayıs',\n        'Haziran',\n        'Temmuz',\n        'Ağustos',\n        'Eylül',\n        'Ekim',\n        'Kasım',\n        'Aralık'\n    ],\n    zh: [\n        '一月',\n        '二月',\n        '三月',\n        '四月',\n        '五月',\n        '六月',\n        '七月',\n        '八月',\n        '九月',\n        '十月',\n        '十一月',\n        '十二月'\n    ]\n};\n\nexport default {\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\n        if (date instanceof Date) {\n            return date;\n        }\n        if (typeof date === 'string') {\n            let date_parts, time_parts;\n            const parts = date.split(' ');\n\n            date_parts = parts[0]\n                .split(date_separator)\n                .map(val => parseInt(val, 10));\n            time_parts = parts[1] && parts[1].split(time_separator);\n\n            // month is 0 indexed\n            date_parts[1] = date_parts[1] - 1;\n\n            let vals = date_parts;\n\n            if (time_parts && time_parts.length) {\n                if (time_parts.length == 4) {\n                    time_parts[3] = '0.' + time_parts[3];\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\n                }\n                vals = vals.concat(time_parts);\n            }\n\n            return new Date(...vals);\n        }\n    },\n\n    to_string(date, with_time = false) {\n        if (!(date instanceof Date)) {\n            throw new TypeError('Invalid argument type');\n        }\n        const vals = this.get_date_values(date).map((val, i) => {\n            if (i === 1) {\n                // add 1 for month\n                val = val + 1;\n            }\n\n            if (i === 6) {\n                return padStart(val + '', 3, '0');\n            }\n\n            return padStart(val + '', 2, '0');\n        });\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n        return date_string + (with_time ? ' ' + time_string : '');\n    },\n\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\n        const values = this.get_date_values(date).map(d => padStart(d, 2, 0));\n        const format_map = {\n            YYYY: values[0],\n            MM: padStart(+values[1] + 1, 2, 0),\n            DD: values[2],\n            HH: values[3],\n            mm: values[4],\n            ss: values[5],\n            SSS:values[6],\n            D: values[2],\n            MMMM: month_names[lang][+values[1]],\n            MMM: month_names[lang][+values[1]]\n        };\n\n        let str = format_string;\n        const formatted_values = [];\n\n        Object.keys(format_map)\n            .sort((a, b) => b.length - a.length) // big string first\n            .forEach(key => {\n                if (str.includes(key)) {\n                    str = str.replace(key, `$${formatted_values.length}`);\n                    formatted_values.push(format_map[key]);\n                }\n            });\n\n        formatted_values.forEach((value, i) => {\n            str = str.replace(`$${i}`, value);\n        });\n\n        return str;\n    },\n\n    diff(date_a, date_b, scale = DAY) {\n        let milliseconds, seconds, hours, minutes, days, months, years;\n\n        milliseconds = date_a - date_b;\n        seconds = milliseconds / 1000;\n        minutes = seconds / 60;\n        hours = minutes / 60;\n        days = hours / 24;\n        months = days / 30;\n        years = months / 12;\n\n        if (!scale.endsWith('s')) {\n            scale += 's';\n        }\n\n        return Math.floor(\n            {\n                milliseconds,\n                seconds,\n                minutes,\n                hours,\n                days,\n                months,\n                years\n            }[scale]\n        );\n    },\n\n    today() {\n        const vals = this.get_date_values(new Date()).slice(0, 3);\n        return new Date(...vals);\n    },\n\n    now() {\n        return new Date();\n    },\n\n    add(date, qty, scale) {\n        qty = parseInt(qty, 10);\n        const vals = [\n            date.getFullYear() + (scale === YEAR ? qty : 0),\n            date.getMonth() + (scale === MONTH ? qty : 0),\n            date.getDate() + (scale === DAY ? qty : 0),\n            date.getHours() + (scale === HOUR ? qty : 0),\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\n            date.getSeconds() + (scale === SECOND ? qty : 0),\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0)\n        ];\n        return new Date(...vals);\n    },\n\n    start_of(date, scale) {\n        const scores = {\n            [YEAR]: 6,\n            [MONTH]: 5,\n            [DAY]: 4,\n            [HOUR]: 3,\n            [MINUTE]: 2,\n            [SECOND]: 1,\n            [MILLISECOND]: 0\n        };\n\n        function should_reset(_scale) {\n            const max_score = scores[scale];\n            return scores[_scale] <= max_score;\n        }\n\n        const vals = [\n            date.getFullYear(),\n            should_reset(YEAR) ? 0 : date.getMonth(),\n            should_reset(MONTH) ? 1 : date.getDate(),\n            should_reset(DAY) ? 0 : date.getHours(),\n            should_reset(HOUR) ? 0 : date.getMinutes(),\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\n            should_reset(SECOND) ? 0 : date.getMilliseconds()\n        ];\n\n        return new Date(...vals);\n    },\n\n    clone(date) {\n        return new Date(...this.get_date_values(date));\n    },\n\n    get_date_values(date) {\n        return [\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes(),\n            date.getSeconds(),\n            date.getMilliseconds()\n        ];\n    },\n\n    get_days_in_month(date) {\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n        const month = date.getMonth();\n\n        if (month !== 1) {\n            return no_of_days[month];\n        }\n\n        // Feb\n        const year = date.getFullYear();\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\n            return 29;\n        }\n        return 28;\n    }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n    str = str + '';\n    targetLength = targetLength >> 0;\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\n    if (str.length > targetLength) {\n        return String(str);\n    } else {\n        targetLength = targetLength - str.length;\n        if (targetLength > padString.length) {\n            padString += padString.repeat(targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + String(str);\n    }\n}\n","export function $(expr, con) {\n    return typeof expr === 'string'\n        ? (con || document).querySelector(expr)\n        : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\n    for (let attr in attrs) {\n        if (attr === 'append_to') {\n            const parent = attrs.append_to;\n            parent.appendChild(elem);\n        } else if (attr === 'innerHTML') {\n            elem.innerHTML = attrs.innerHTML;\n        } else {\n            elem.setAttribute(attr, attrs[attr]);\n        }\n    }\n    return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n    if (animatedSvgElement === svgElement) {\n        // triggered 2nd time programmatically\n        // trigger artificial click event\n        const event = document.createEvent('HTMLEvents');\n        event.initEvent('click', true, true);\n        event.eventName = 'click';\n        animatedSvgElement.dispatchEvent(event);\n    }\n}\n\nfunction getAnimationElement(\n    svgElement,\n    attr,\n    from,\n    to,\n    dur = '0.4s',\n    begin = '0.1s'\n) {\n    const animEl = svgElement.querySelector('animate');\n    if (animEl) {\n        $.attr(animEl, {\n            attributeName: attr,\n            from,\n            to,\n            dur,\n            begin: 'click + ' + begin // artificial click\n        });\n        return svgElement;\n    }\n\n    const animateElement = createSVG('animate', {\n        attributeName: attr,\n        from,\n        to,\n        dur,\n        begin,\n        calcMode: 'spline',\n        values: from + ';' + to,\n        keyTimes: '0; 1',\n        keySplines: cubic_bezier('ease-out')\n    });\n    svgElement.appendChild(animateElement);\n\n    return svgElement;\n}\n\nfunction cubic_bezier(name) {\n    return {\n        ease: '.25 .1 .25 1',\n        linear: '0 0 1 1',\n        'ease-in': '.42 0 1 1',\n        'ease-out': '0 0 .58 1',\n        'ease-in-out': '.42 0 .58 1'\n    }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n    if (!callback) {\n        callback = selector;\n        $.bind(element, event, callback);\n    } else {\n        $.delegate(element, event, selector, callback);\n    }\n};\n\n$.off = (element, event, handler) => {\n    element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n    event.split(/\\s+/).forEach(function(event) {\n        element.addEventListener(event, callback);\n    });\n};\n\n$.delegate = (element, event, selector, callback) => {\n    element.addEventListener(event, function(e) {\n        const delegatedTarget = e.target.closest(selector);\n        if (delegatedTarget) {\n            e.delegatedTarget = delegatedTarget;\n            callback.call(this, e, delegatedTarget);\n        }\n    });\n};\n\n$.closest = (selector, element) => {\n    if (!element) return null;\n\n    if (element.matches(selector)) {\n        return element;\n    }\n\n    return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n    if (!value && typeof attr === 'string') {\n        return element.getAttribute(attr);\n    }\n\n    if (typeof attr === 'object') {\n        for (let key in attr) {\n            $.attr(element, key, attr[key]);\n        }\n        return;\n    }\n\n    element.setAttribute(attr, value);\n};\n","import date_utils from './date_utils';\nimport { $, createSVG, animateSVG } from './svg_utils';\n\nexport default class Bar {\n    constructor(gantt, task) {\n        this.set_defaults(gantt, task);\n        this.prepare();\n        this.draw();\n        this.bind();\n    }\n\n    set_defaults(gantt, task) {\n        this.action_completed = false;\n        this.gantt = gantt;\n        this.task = task;\n    }\n\n    prepare() {\n        this.prepare_values();\n        this.prepare_helpers();\n    }\n\n    prepare_values() {\n        this.invalid = this.task.invalid;\n        this.height = this.gantt.options.bar_height;\n        this.x = this.compute_x();\n        this.y = this.compute_y();\n        this.corner_radius = this.gantt.options.bar_corner_radius;\n        this.duration =\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\n            this.gantt.options.step;\n        this.width = this.gantt.options.column_width * this.duration;\n        this.progress_width =\n            this.gantt.options.column_width *\n                this.duration *\n                (this.task.progress / 100) || 0;\n        this.group = createSVG('g', {\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\n            'data-id': this.task.id\n        });\n        this.bar_group = createSVG('g', {\n            class: 'bar-group',\n            append_to: this.group\n        });\n        this.handle_group = createSVG('g', {\n            class: 'handle-group',\n            append_to: this.group\n        });\n    }\n\n    prepare_helpers() {\n        SVGElement.prototype.getX = function() {\n            return +this.getAttribute('x');\n        };\n        SVGElement.prototype.getY = function() {\n            return +this.getAttribute('y');\n        };\n        SVGElement.prototype.getWidth = function() {\n            return +this.getAttribute('width');\n        };\n        SVGElement.prototype.getHeight = function() {\n            return +this.getAttribute('height');\n        };\n        SVGElement.prototype.getEndX = function() {\n            return this.getX() + this.getWidth();\n        };\n    }\n\n    draw() {\n        this.draw_bar();\n        this.draw_progress_bar();\n        this.draw_label();\n        this.draw_resize_handles();\n    }\n\n    draw_bar() {\n        this.$bar = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar',\n            append_to: this.bar_group\n        });\n\n        animateSVG(this.$bar, 'width', 0, this.width);\n\n        if (this.invalid) {\n            this.$bar.classList.add('bar-invalid');\n        }\n    }\n\n    draw_progress_bar() {\n        if (this.invalid) return;\n        this.$bar_progress = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.progress_width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar-progress',\n            append_to: this.bar_group\n        });\n\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\n    }\n\n    draw_label() {\n        createSVG('text', {\n            x: this.x + this.width / 2,\n            y: this.y + this.height / 2,\n            innerHTML: this.task.name,\n            class: 'bar-label',\n            append_to: this.bar_group\n        });\n        // labels get BBox in the next tick\n        requestAnimationFrame(() => this.update_label_position());\n    }\n\n    draw_resize_handles() {\n        if (this.invalid) return;\n\n        const bar = this.$bar;\n        const handle_width = 8;\n\n        createSVG('rect', {\n            x: bar.getX() + bar.getWidth() - 9,\n            y: bar.getY() + 1,\n            width: handle_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'handle right',\n            append_to: this.handle_group\n        });\n\n        createSVG('rect', {\n            x: bar.getX() + 1,\n            y: bar.getY() + 1,\n            width: handle_width,\n            height: this.height - 2,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'handle left',\n            append_to: this.handle_group\n        });\n\n        if (this.task.progress && this.task.progress < 100) {\n            this.$handle_progress = createSVG('polygon', {\n                points: this.get_progress_polygon_points().join(','),\n                class: 'handle progress',\n                append_to: this.handle_group\n            });\n        }\n    }\n\n    get_progress_polygon_points() {\n        const bar_progress = this.$bar_progress;\n        return [\n            bar_progress.getEndX() - 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX() + 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX(),\n            bar_progress.getY() + bar_progress.getHeight() - 8.66\n        ];\n    }\n\n    bind() {\n        if (this.invalid) return;\n        this.setup_click_event();\n    }\n\n    setup_click_event() {\n        $.on(this.group, 'focus ' + this.gantt.options.popup_trigger, e => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            this.show_popup();\n            this.gantt.unselect_all();\n            this.group.classList.add('active');\n        });\n\n        $.on(this.group, 'dblclick', e => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            this.gantt.trigger_event('click', [this.task]);\n        });\n    }\n\n    show_popup() {\n        if (this.gantt.bar_being_dragged) return;\n\n        const start_date = date_utils.format(this.task._start, 'MMM D', this.gantt.options.language);\n        const end_date = date_utils.format(\n            date_utils.add(this.task._end, -1, 'second'),\n            'MMM D',\n            this.gantt.options.language\n        );\n        const subtitle = start_date + ' - ' + end_date;\n\n        this.gantt.show_popup({\n            target_element: this.$bar,\n            title: this.task.name,\n            subtitle: subtitle,\n            task: this.task,\n        });\n    }\n\n    update_bar_position({ x = null, width = null }) {\n        const bar = this.$bar;\n        if (x) {\n            // get all x values of parent task\n            const xs = this.task.dependencies.map(dep => {\n                return this.gantt.get_bar(dep).$bar.getX();\n            });\n            // child task must not go before parent\n            const valid_x = xs.reduce((prev, curr) => {\n                return x >= curr;\n            }, x);\n            if (!valid_x) {\n                width = null;\n                return;\n            }\n            this.update_attr(bar, 'x', x);\n        }\n        if (width && width >= this.gantt.options.column_width) {\n            this.update_attr(bar, 'width', width);\n        }\n        this.update_label_position();\n        this.update_handle_position();\n        this.update_progressbar_position();\n        this.update_arrow_position();\n    }\n\n    date_changed() {\n        let changed = false;\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\n\n        if (Number(this.task._start) !== Number(new_start_date)) {\n            changed = true;\n            this.task._start = new_start_date;\n        }\n\n        if (Number(this.task._end) !== Number(new_end_date)) {\n            changed = true;\n            this.task._end = new_end_date;\n        }\n\n        if (!changed) return;\n\n        this.gantt.trigger_event('date_change', [\n            this.task,\n            new_start_date,\n            date_utils.add(new_end_date, -1, 'second')\n        ]);\n    }\n\n    progress_changed() {\n        const new_progress = this.compute_progress();\n        this.task.progress = new_progress;\n        this.gantt.trigger_event('progress_change', [this.task, new_progress]);\n    }\n\n    set_action_completed() {\n        this.action_completed = true;\n        setTimeout(() => (this.action_completed = false), 1000);\n    }\n\n    compute_start_end_date() {\n        const bar = this.$bar;\n        const x_in_units = bar.getX() / this.gantt.options.column_width;\n        const new_start_date = date_utils.add(\n            this.gantt.gantt_start,\n            x_in_units * this.gantt.options.step,\n            'hour'\n        );\n        const width_in_units = bar.getWidth() / this.gantt.options.column_width;\n        const new_end_date = date_utils.add(\n            new_start_date,\n            width_in_units * this.gantt.options.step,\n            'hour'\n        );\n\n        return { new_start_date, new_end_date };\n    }\n\n    compute_progress() {\n        const progress =\n            this.$bar_progress.getWidth() / this.$bar.getWidth() * 100;\n        return parseInt(progress, 10);\n    }\n\n    compute_x() {\n        const { step, column_width } = this.gantt.options;\n        const task_start = this.task._start;\n        const gantt_start = this.gantt.gantt_start;\n\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\n        let x = diff / step * column_width;\n\n        if (this.gantt.view_is('Month')) {\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\n            x = diff * column_width / 30;\n        }\n        return x;\n    }\n\n    compute_y() {\n        return (\n            this.gantt.options.header_height +\n            this.gantt.options.padding +\n            this.task._index * (this.height + this.gantt.options.padding)\n        );\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.gantt.view_is('Week')) {\n            rem = dx % (this.gantt.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 14\n                    ? 0\n                    : this.gantt.options.column_width / 7);\n        } else if (this.gantt.view_is('Month')) {\n            rem = dx % (this.gantt.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 60\n                    ? 0\n                    : this.gantt.options.column_width / 30);\n        } else {\n            rem = dx % this.gantt.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.gantt.options.column_width / 2\n                    ? 0\n                    : this.gantt.options.column_width);\n        }\n        return position;\n    }\n\n    update_attr(element, attr, value) {\n        value = +value;\n        if (!isNaN(value)) {\n            element.setAttribute(attr, value);\n        }\n        return element;\n    }\n\n    update_progressbar_position() {\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\n        this.$bar_progress.setAttribute(\n            'width',\n            this.$bar.getWidth() * (this.task.progress / 100)\n        );\n    }\n\n    update_label_position() {\n        const bar = this.$bar,\n            label = this.group.querySelector('.bar-label');\n\n        if (label.getBBox().width > bar.getWidth()) {\n            label.classList.add('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\n        } else {\n            label.classList.remove('big');\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\n        }\n    }\n\n    update_handle_position() {\n        const bar = this.$bar;\n        this.handle_group\n            .querySelector('.handle.left')\n            .setAttribute('x', bar.getX() + 1);\n        this.handle_group\n            .querySelector('.handle.right')\n            .setAttribute('x', bar.getEndX() - 9);\n        const handle = this.group.querySelector('.handle.progress');\n        handle &&\n            handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n\n    update_arrow_position() {\n        this.arrows = this.arrows || [];\n        for (let arrow of this.arrows) {\n            arrow.update();\n        }\n    }\n}\n\nfunction isFunction(functionToCheck) {\n    var getType = {};\n    return (\n        functionToCheck &&\n        getType.toString.call(functionToCheck) === '[object Function]'\n    );\n}\n","import { createSVG } from './svg_utils';\n\nexport default class Arrow {\n    constructor(gantt, from_task, to_task) {\n        this.gantt = gantt;\n        this.from_task = from_task;\n        this.to_task = to_task;\n\n        this.calculate_path();\n        this.draw();\n    }\n\n    calculate_path() {\n        let start_x =\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\n\n        const condition = () =>\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\n\n        while (condition()) {\n            start_x -= 10;\n        }\n\n        const start_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.from_task.task._index +\n            this.gantt.options.padding;\n\n        const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\n        const end_y =\n            this.gantt.options.header_height +\n            this.gantt.options.bar_height / 2 +\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\n                this.to_task.task._index +\n            this.gantt.options.padding;\n\n        const from_is_below_to =\n            this.from_task.task._index > this.to_task.task._index;\n        const curve = this.gantt.options.arrow_curve;\n        const clockwise = from_is_below_to ? 1 : 0;\n        const curve_y = from_is_below_to ? -curve : curve;\n        const offset = from_is_below_to\n            ? end_y + this.gantt.options.arrow_curve\n            : end_y - this.gantt.options.arrow_curve;\n\n        this.path = `\n            M ${start_x} ${start_y}\n            V ${offset}\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n            L ${end_x} ${end_y}\n            m -5 -5\n            l 5 5\n            l -5 5`;\n\n        if (\n            this.to_task.$bar.getX() <\n            this.from_task.$bar.getX() + this.gantt.options.padding\n        ) {\n            const down_1 = this.gantt.options.padding / 2 - curve;\n            const down_2 =\n                this.to_task.$bar.getY() +\n                this.to_task.$bar.getHeight() / 2 -\n                curve_y;\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\n\n            this.path = `\n                M ${start_x} ${start_y}\n                v ${down_1}\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\n                H ${left}\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\n                V ${down_2}\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n                L ${end_x} ${end_y}\n                m -5 -5\n                l 5 5\n                l -5 5`;\n        }\n    }\n\n    draw() {\n        this.element = createSVG('path', {\n            d: this.path,\n            'data-from': this.from_task.task.id,\n            'data-to': this.to_task.task.id\n        });\n    }\n\n    update() {\n        this.calculate_path();\n        this.element.setAttribute('d', this.path);\n    }\n}\n","export default class Popup {\n    constructor(parent, custom_html) {\n        this.parent = parent;\n        this.custom_html = custom_html;\n        this.make();\n    }\n\n    make() {\n        this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n        this.hide();\n\n        this.title = this.parent.querySelector('.title');\n        this.subtitle = this.parent.querySelector('.subtitle');\n        this.pointer = this.parent.querySelector('.pointer');\n    }\n\n    show(options) {\n        if (!options.target_element) {\n            throw new Error('target_element is required to show popup');\n        }\n        if (!options.position) {\n            options.position = 'left';\n        }\n        const target_element = options.target_element;\n\n        if (this.custom_html) {\n            let html = this.custom_html(options.task);\n            html += '<div class=\"pointer\"></div>';\n            this.parent.innerHTML = html;\n            this.pointer = this.parent.querySelector('.pointer');\n        } else {\n            // set data\n            this.title.innerHTML = options.title;\n            this.subtitle.innerHTML = options.subtitle;\n            this.parent.style.width = this.parent.clientWidth + 'px';\n        }\n\n        // set position\n        let position_meta;\n        if (target_element instanceof HTMLElement) {\n            position_meta = target_element.getBoundingClientRect();\n        } else if (target_element instanceof SVGElement) {\n            position_meta = options.target_element.getBBox();\n        }\n\n        if (options.position === 'left') {\n            this.parent.style.left =\n                position_meta.x + (position_meta.width + 10) + 'px';\n            this.parent.style.top = position_meta.y + 'px';\n\n            this.pointer.style.transform = 'rotateZ(90deg)';\n            this.pointer.style.left = '-7px';\n            this.pointer.style.top = '2px';\n        }\n\n        // show\n        this.parent.style.opacity = 1;\n    }\n\n    hide() {\n        this.parent.style.opacity = 0;\n        this.parent.style.left = 0;\n    }\n}\n","import date_utils from './date_utils';\nimport { $, createSVG } from './svg_utils';\nimport Bar from './bar';\nimport Arrow from './arrow';\nimport Popup from './popup';\n\nimport './gantt.scss';\n\nconst VIEW_MODE = {\n    QUARTER_DAY: 'Quarter Day',\n    HALF_DAY: 'Half Day',\n    DAY: 'Day',\n    WEEK: 'Week',\n    MONTH: 'Month',\n    YEAR: 'Year'\n};\n\nexport default class Gantt {\n    constructor(wrapper, tasks, options) {\n        this.setup_wrapper(wrapper);\n        this.setup_options(options);\n        this.setup_tasks(tasks);\n        // initialize with default view mode\n        this.change_view_mode();\n        this.bind_events();\n    }\n\n    setup_wrapper(element) {\n        let svg_element, wrapper_element;\n\n        // CSS Selector is passed\n        if (typeof element === 'string') {\n            element = document.querySelector(element);\n        }\n\n        // get the SVGElement\n        if (element instanceof HTMLElement) {\n            wrapper_element = element;\n            svg_element = element.querySelector('svg');\n        } else if (element instanceof SVGElement) {\n            svg_element = element;\n        } else {\n            throw new TypeError(\n                'Frappé Gantt only supports usage of a string CSS selector,' +\n                    \" HTML DOM element or SVG DOM element for the 'element' parameter\"\n            );\n        }\n\n        // svg element\n        if (!svg_element) {\n            // create it\n            this.$svg = createSVG('svg', {\n                append_to: wrapper_element,\n                class: 'gantt'\n            });\n        } else {\n            this.$svg = svg_element;\n            this.$svg.classList.add('gantt');\n        }\n\n        // wrapper element\n        this.$container = document.createElement('div');\n        this.$container.classList.add('gantt-container');\n\n        const parent_element = this.$svg.parentElement;\n        parent_element.appendChild(this.$container);\n        this.$container.appendChild(this.$svg);\n\n        // popup wrapper\n        this.popup_wrapper = document.createElement('div');\n        this.popup_wrapper.classList.add('popup-wrapper');\n        this.$container.appendChild(this.popup_wrapper);\n    }\n\n    setup_options(options) {\n        const default_options = {\n            header_height: 50,\n            column_width: 30,\n            step: 24,\n            view_modes: [...Object.values(VIEW_MODE)],\n            bar_height: 20,\n            bar_corner_radius: 3,\n            arrow_curve: 5,\n            padding: 18,\n            view_mode: 'Day',\n            date_format: 'YYYY-MM-DD',\n            popup_trigger: 'click',\n            custom_popup_html: null,\n            language: 'en'\n        };\n        this.options = Object.assign({}, default_options, options);\n    }\n\n    setup_tasks(tasks) {\n        // prepare tasks\n        this.tasks = tasks.map((task, i) => {\n            // convert to Date objects\n            task._start = date_utils.parse(task.start);\n            task._end = date_utils.parse(task.end);\n\n            // make task invalid if duration too large\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\n                task.end = null;\n            }\n\n            // cache index\n            task._index = i;\n\n            // invalid dates\n            if (!task.start && !task.end) {\n                const today = date_utils.today();\n                task._start = today;\n                task._end = date_utils.add(today, 2, 'day');\n            }\n\n            if (!task.start && task.end) {\n                task._start = date_utils.add(task._end, -2, 'day');\n            }\n\n            if (task.start && !task.end) {\n                task._end = date_utils.add(task._start, 2, 'day');\n            }\n\n            // if hours is not set, assume the last day is full day\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n            const task_end_values = date_utils.get_date_values(task._end);\n            if (task_end_values.slice(3).every(d => d === 0)) {\n                task._end = date_utils.add(task._end, 24, 'hour');\n            }\n\n            // invalid flag\n            if (!task.start || !task.end) {\n                task.invalid = true;\n            }\n\n            // dependencies\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\n                let deps = [];\n                if (task.dependencies) {\n                    deps = task.dependencies\n                        .split(',')\n                        .map(d => d.trim())\n                        .filter(d => d);\n                }\n                task.dependencies = deps;\n            }\n\n            // uids\n            if (!task.id) {\n                task.id = generate_id(task);\n            }\n\n            return task;\n        });\n\n        this.setup_dependencies();\n    }\n\n    setup_dependencies() {\n        this.dependency_map = {};\n        for (let t of this.tasks) {\n            for (let d of t.dependencies) {\n                this.dependency_map[d] = this.dependency_map[d] || [];\n                this.dependency_map[d].push(t.id);\n            }\n        }\n    }\n\n    refresh(tasks) {\n        this.setup_tasks(tasks);\n        this.change_view_mode();\n    }\n\n    change_view_mode(mode = this.options.view_mode) {\n        this.update_view_scale(mode);\n        this.setup_dates();\n        this.render();\n        // fire viewmode_change event\n        this.trigger_event('view_change', [mode]);\n    }\n\n    update_view_scale(view_mode) {\n        this.options.view_mode = view_mode;\n\n        if (view_mode === VIEW_MODE.DAY) {\n            this.options.step = 24;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\n            this.options.step = 24 / 2;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n            this.options.step = 24 / 4;\n            this.options.column_width = 38;\n        } else if (view_mode === VIEW_MODE.WEEK) {\n            this.options.step = 24 * 7;\n            this.options.column_width = 140;\n        } else if (view_mode === VIEW_MODE.MONTH) {\n            this.options.step = 24 * 30;\n            this.options.column_width = 120;\n        } else if (view_mode === VIEW_MODE.YEAR) {\n            this.options.step = 24 * 365;\n            this.options.column_width = 120;\n        }\n    }\n\n    setup_dates() {\n        this.setup_gantt_dates();\n        this.setup_date_values();\n    }\n\n    setup_gantt_dates() {\n        this.gantt_start = this.gantt_end = null;\n\n        for (let task of this.tasks) {\n            // set global start and end date\n            if (!this.gantt_start || task._start < this.gantt_start) {\n                this.gantt_start = task._start;\n            }\n            if (!this.gantt_end || task._end > this.gantt_end) {\n                this.gantt_end = task._end;\n            }\n        }\n\n        this.gantt_start = date_utils.start_of(this.gantt_start, 'day');\n        this.gantt_end = date_utils.start_of(this.gantt_end, 'day');\n\n        // add date padding on both sides\n        if (this.view_is([VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\n            this.gantt_start = date_utils.add(this.gantt_start, -7, 'day');\n            this.gantt_end = date_utils.add(this.gantt_end, 7, 'day');\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            this.gantt_start = date_utils.start_of(this.gantt_start, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'year');\n        } else if (this.view_is(VIEW_MODE.YEAR)) {\n            this.gantt_start = date_utils.add(this.gantt_start, -2, 'year');\n            this.gantt_end = date_utils.add(this.gantt_end, 2, 'year');\n        } else {\n            this.gantt_start = date_utils.add(this.gantt_start, -1, 'month');\n            this.gantt_end = date_utils.add(this.gantt_end, 1, 'month');\n        }\n    }\n\n    setup_date_values() {\n        this.dates = [];\n        let cur_date = null;\n\n        while (cur_date === null || cur_date < this.gantt_end) {\n            if (!cur_date) {\n                cur_date = date_utils.clone(this.gantt_start);\n            } else {\n                if (this.view_is(VIEW_MODE.YEAR)) {\n                    cur_date = date_utils.add(cur_date, 1, 'year');\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\n                    cur_date = date_utils.add(cur_date, 1, 'month');\n                } else {\n                    cur_date = date_utils.add(\n                        cur_date,\n                        this.options.step,\n                        'hour'\n                    );\n                }\n            }\n            this.dates.push(cur_date);\n        }\n    }\n\n    bind_events() {\n        this.bind_grid_click();\n        this.bind_bar_events();\n    }\n\n    render() {\n        this.clear();\n        this.setup_layers();\n        this.make_grid();\n        this.make_dates();\n        this.make_bars();\n        this.make_arrows();\n        this.map_arrows_on_bars();\n        this.set_width();\n        this.set_scroll_position();\n    }\n\n    setup_layers() {\n        this.layers = {};\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\n        // make group layers\n        for (let layer of layers) {\n            this.layers[layer] = createSVG('g', {\n                class: layer,\n                append_to: this.$svg\n            });\n        }\n    }\n\n    make_grid() {\n        this.make_grid_background();\n        this.make_grid_rows();\n        this.make_grid_header();\n        this.make_grid_ticks();\n        this.make_grid_highlights();\n    }\n\n    make_grid_background() {\n        const grid_width = this.dates.length * this.options.column_width;\n        const grid_height =\n            this.options.header_height +\n            this.options.padding +\n            (this.options.bar_height + this.options.padding) *\n                this.tasks.length;\n\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: grid_width,\n            height: grid_height,\n            class: 'grid-background',\n            append_to: this.layers.grid\n        });\n\n        $.attr(this.$svg, {\n            height: grid_height + this.options.padding + 100,\n            width: '100%'\n        });\n    }\n\n    make_grid_rows() {\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\n\n        const row_width = this.dates.length * this.options.column_width;\n        const row_height = this.options.bar_height + this.options.padding;\n\n        let row_y = this.options.header_height + this.options.padding / 2;\n\n        for (let task of this.tasks) {\n            createSVG('rect', {\n                x: 0,\n                y: row_y,\n                width: row_width,\n                height: row_height,\n                class: 'grid-row',\n                append_to: rows_layer\n            });\n\n            createSVG('line', {\n                x1: 0,\n                y1: row_y + row_height,\n                x2: row_width,\n                y2: row_y + row_height,\n                class: 'row-line',\n                append_to: lines_layer\n            });\n\n            row_y += this.options.bar_height + this.options.padding;\n        }\n    }\n\n    make_grid_header() {\n        const header_width = this.dates.length * this.options.column_width;\n        const header_height = this.options.header_height + 10;\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: header_width,\n            height: header_height,\n            class: 'grid-header',\n            append_to: this.layers.grid\n        });\n    }\n\n    make_grid_ticks() {\n        let tick_x = 0;\n        let tick_y = this.options.header_height + this.options.padding / 2;\n        let tick_height =\n            (this.options.bar_height + this.options.padding) *\n            this.tasks.length;\n\n        for (let date of this.dates) {\n            let tick_class = 'tick';\n            // thick tick for monday\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n                tick_class += ' thick';\n            }\n            // thick tick for first week\n            if (\n                this.view_is(VIEW_MODE.WEEK) &&\n                date.getDate() >= 1 &&\n                date.getDate() < 8\n            ) {\n                tick_class += ' thick';\n            }\n            // thick ticks for quarters\n            if (this.view_is(VIEW_MODE.MONTH) && (date.getMonth() + 1) % 3 === 0) {\n                tick_class += ' thick';\n            }\n\n            createSVG('path', {\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n                class: tick_class,\n                append_to: this.layers.grid\n            });\n\n            if (this.view_is(VIEW_MODE.MONTH)) {\n                tick_x +=\n                    date_utils.get_days_in_month(date) *\n                    this.options.column_width /\n                    30;\n            } else {\n                tick_x += this.options.column_width;\n            }\n        }\n    }\n\n    make_grid_highlights() {\n        // highlight today's date\n        if (this.view_is(VIEW_MODE.DAY)) {\n            const x =\n                date_utils.diff(date_utils.today(), this.gantt_start, 'hour') /\n                this.options.step *\n                this.options.column_width;\n            const y = 0;\n\n            const width = this.options.column_width;\n            const height =\n                (this.options.bar_height + this.options.padding) *\n                    this.tasks.length +\n                this.options.header_height +\n                this.options.padding / 2;\n\n            createSVG('rect', {\n                x,\n                y,\n                width,\n                height,\n                class: 'today-highlight',\n                append_to: this.layers.grid\n            });\n        }\n    }\n\n    make_dates() {\n        for (let date of this.get_dates_to_draw()) {\n            createSVG('text', {\n                x: date.lower_x,\n                y: date.lower_y,\n                innerHTML: date.lower_text,\n                class: 'lower-text',\n                append_to: this.layers.date\n            });\n\n            if (date.upper_text) {\n                const $upper_text = createSVG('text', {\n                    x: date.upper_x,\n                    y: date.upper_y,\n                    innerHTML: date.upper_text,\n                    class: 'upper-text',\n                    append_to: this.layers.date\n                });\n\n                // remove out-of-bound dates\n                if (\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\n                ) {\n                    $upper_text.remove();\n                }\n            }\n        }\n    }\n\n    get_dates_to_draw() {\n        let last_date = null;\n        const dates = this.dates.map((date, i) => {\n            const d = this.get_date_info(date, last_date, i);\n            last_date = date;\n            return d;\n        });\n        return dates;\n    }\n\n    get_date_info(date, last_date, i) {\n        if (!last_date) {\n            last_date = date_utils.add(date, 1, 'year');\n        }\n        const date_text = {\n            'Quarter Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            'Half Day_lower': date_utils.format(\n                date,\n                'HH',\n                this.options.language\n            ),\n            Day_lower:\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Week_lower:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : date_utils.format(date, 'D', this.options.language),\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\n            'Quarter Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date_utils.format(date, 'D MMM', this.options.language)\n                    : '',\n            'Half Day_upper':\n                date.getDate() !== last_date.getDate()\n                    ? date.getMonth() !== last_date.getMonth()\n                      ? date_utils.format(date, 'D MMM', this.options.language)\n                      : date_utils.format(date, 'D', this.options.language)\n                    : '',\n            Day_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Week_upper:\n                date.getMonth() !== last_date.getMonth()\n                    ? date_utils.format(date, 'MMMM', this.options.language)\n                    : '',\n            Month_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : '',\n            Year_upper:\n                date.getFullYear() !== last_date.getFullYear()\n                    ? date_utils.format(date, 'YYYY', this.options.language)\n                    : ''\n        };\n\n        const base_pos = {\n            x: i * this.options.column_width,\n            lower_y: this.options.header_height,\n            upper_y: this.options.header_height - 25\n        };\n\n        const x_pos = {\n            'Quarter Day_lower': this.options.column_width * 4 / 2,\n            'Quarter Day_upper': 0,\n            'Half Day_lower': this.options.column_width * 2 / 2,\n            'Half Day_upper': 0,\n            Day_lower: this.options.column_width / 2,\n            Day_upper: this.options.column_width * 30 / 2,\n            Week_lower: 0,\n            Week_upper: this.options.column_width * 4 / 2,\n            Month_lower: this.options.column_width / 2,\n            Month_upper: this.options.column_width * 12 / 2,\n            Year_lower: this.options.column_width / 2,\n            Year_upper: this.options.column_width * 30 / 2\n        };\n\n        return {\n            upper_text: date_text[`${this.options.view_mode}_upper`],\n            lower_text: date_text[`${this.options.view_mode}_lower`],\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n            upper_y: base_pos.upper_y,\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n            lower_y: base_pos.lower_y\n        };\n    }\n\n    make_bars() {\n        this.bars = this.tasks.map(task => {\n            const bar = new Bar(this, task);\n            this.layers.bar.appendChild(bar.group);\n            return bar;\n        });\n    }\n\n    make_arrows() {\n        this.arrows = [];\n        for (let task of this.tasks) {\n            let arrows = [];\n            arrows = task.dependencies\n                .map(task_id => {\n                    const dependency = this.get_task(task_id);\n                    if (!dependency) return;\n                    const arrow = new Arrow(\n                        this,\n                        this.bars[dependency._index], // from_task\n                        this.bars[task._index] // to_task\n                    );\n                    this.layers.arrow.appendChild(arrow.element);\n                    return arrow;\n                })\n                .filter(Boolean); // filter falsy values\n            this.arrows = this.arrows.concat(arrows);\n        }\n    }\n\n    map_arrows_on_bars() {\n        for (let bar of this.bars) {\n            bar.arrows = this.arrows.filter(arrow => {\n                return (\n                    arrow.from_task.task.id === bar.task.id ||\n                    arrow.to_task.task.id === bar.task.id\n                );\n            });\n        }\n    }\n\n    set_width() {\n        const cur_width = this.$svg.getBoundingClientRect().width;\n        const actual_width = this.$svg\n            .querySelector('.grid .grid-row')\n            .getAttribute('width');\n        if (cur_width < actual_width) {\n            this.$svg.setAttribute('width', actual_width);\n        }\n    }\n\n    set_scroll_position() {\n        const parent_element = this.$svg.parentElement;\n        if (!parent_element) return;\n\n        const hours_before_first_task = date_utils.diff(\n            this.get_oldest_starting_date(),\n            this.gantt_start,\n            'hour'\n        );\n\n        const scroll_pos =\n            hours_before_first_task /\n                this.options.step *\n                this.options.column_width -\n            this.options.column_width;\n\n        parent_element.scrollLeft = scroll_pos;\n    }\n\n    bind_grid_click() {\n        $.on(\n            this.$svg,\n            this.options.popup_trigger,\n            '.grid-row, .grid-header',\n            () => {\n                this.unselect_all();\n                this.hide_popup();\n            }\n        );\n    }\n\n    bind_bar_events() {\n        let is_dragging = false;\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing_left = false;\n        let is_resizing_right = false;\n        let parent_bar_id = null;\n        let bars = []; // instanceof Bar\n        this.bar_being_dragged = null;\n\n        function action_in_progress() {\n            return is_dragging || is_resizing_left || is_resizing_right;\n        }\n\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\n            const bar_wrapper = $.closest('.bar-wrapper', element);\n\n            if (element.classList.contains('left')) {\n                is_resizing_left = true;\n            } else if (element.classList.contains('right')) {\n                is_resizing_right = true;\n            } else if (element.classList.contains('bar-wrapper')) {\n                is_dragging = true;\n            }\n\n            bar_wrapper.classList.add('active');\n\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\n            const ids = [\n                parent_bar_id,\n                ...this.get_all_dependent_tasks(parent_bar_id)\n            ];\n            bars = ids.map(id => this.get_bar(id));\n\n            this.bar_being_dragged = parent_bar_id;\n\n            bars.forEach(bar => {\n                const $bar = bar.$bar;\n                $bar.ox = $bar.getX();\n                $bar.oy = $bar.getY();\n                $bar.owidth = $bar.getWidth();\n                $bar.finaldx = 0;\n            });\n        });\n\n        $.on(this.$svg, 'mousemove', e => {\n            if (!action_in_progress()) return;\n            const dx = e.offsetX - x_on_start;\n            const dy = e.offsetY - y_on_start;\n\n            bars.forEach(bar => {\n                const $bar = bar.$bar;\n                $bar.finaldx = this.get_snap_position(dx);\n                this.hide_popup();\n                if (is_resizing_left) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx,\n                            width: $bar.owidth - $bar.finaldx\n                        });\n                    } else {\n                        bar.update_bar_position({\n                            x: $bar.ox + $bar.finaldx\n                        });\n                    }\n                } else if (is_resizing_right) {\n                    if (parent_bar_id === bar.task.id) {\n                        bar.update_bar_position({\n                            width: $bar.owidth + $bar.finaldx\n                        });\n                    }\n                } else if (is_dragging) {\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\n                }\n            });\n        });\n\n        document.addEventListener('mouseup', e => {\n            if (is_dragging || is_resizing_left || is_resizing_right) {\n                bars.forEach(bar => bar.group.classList.remove('active'));\n            }\n\n            is_dragging = false;\n            is_resizing_left = false;\n            is_resizing_right = false;\n        });\n\n        $.on(this.$svg, 'mouseup', e => {\n            this.bar_being_dragged = null;\n            bars.forEach(bar => {\n                const $bar = bar.$bar;\n                if (!$bar.finaldx) return;\n                bar.date_changed();\n                bar.set_action_completed();\n            });\n        });\n\n        this.bind_bar_progress();\n    }\n\n    bind_bar_progress() {\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing = null;\n        let bar = null;\n        let $bar_progress = null;\n        let $bar = null;\n\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\n            is_resizing = true;\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\n            const id = $bar_wrapper.getAttribute('data-id');\n            bar = this.get_bar(id);\n\n            $bar_progress = bar.$bar_progress;\n            $bar = bar.$bar;\n\n            $bar_progress.finaldx = 0;\n            $bar_progress.owidth = $bar_progress.getWidth();\n            $bar_progress.min_dx = -$bar_progress.getWidth();\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n        });\n\n        $.on(this.$svg, 'mousemove', e => {\n            if (!is_resizing) return;\n            let dx = e.offsetX - x_on_start;\n            let dy = e.offsetY - y_on_start;\n\n            if (dx > $bar_progress.max_dx) {\n                dx = $bar_progress.max_dx;\n            }\n            if (dx < $bar_progress.min_dx) {\n                dx = $bar_progress.min_dx;\n            }\n\n            const $handle = bar.$handle_progress;\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\n            $bar_progress.finaldx = dx;\n        });\n\n        $.on(this.$svg, 'mouseup', () => {\n            is_resizing = false;\n            if (!($bar_progress && $bar_progress.finaldx)) return;\n            bar.progress_changed();\n            bar.set_action_completed();\n        });\n    }\n\n    get_all_dependent_tasks(task_id) {\n        let out = [];\n        let to_process = [task_id];\n        while (to_process.length) {\n            const deps = to_process.reduce((acc, curr) => {\n                acc = acc.concat(this.dependency_map[curr]);\n                return acc;\n            }, []);\n\n            out = out.concat(deps);\n            to_process = deps.filter(d => !to_process.includes(d));\n        }\n\n        return out.filter(Boolean);\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.view_is(VIEW_MODE.WEEK)) {\n            rem = dx % (this.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 14\n                    ? 0\n                    : this.options.column_width / 7);\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            rem = dx % (this.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 60\n                    ? 0\n                    : this.options.column_width / 30);\n        } else {\n            rem = dx % this.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.options.column_width / 2\n                    ? 0\n                    : this.options.column_width);\n        }\n        return position;\n    }\n\n    unselect_all() {\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach(el => {\n            el.classList.remove('active');\n        });\n    }\n\n    view_is(modes) {\n        if (typeof modes === 'string') {\n            return this.options.view_mode === modes;\n        }\n\n        if (Array.isArray(modes)) {\n            return modes.some(mode => this.options.view_mode === mode);\n        }\n\n        return false;\n    }\n\n    get_task(id) {\n        return this.tasks.find(task => {\n            return task.id === id;\n        });\n    }\n\n    get_bar(id) {\n        return this.bars.find(bar => {\n            return bar.task.id === id;\n        });\n    }\n\n    show_popup(options) {\n        if (!this.popup) {\n            this.popup = new Popup(\n                this.popup_wrapper,\n                this.options.custom_popup_html\n            );\n        }\n        this.popup.show(options);\n    }\n\n    hide_popup() {\n        this.popup && this.popup.hide();\n    }\n\n    trigger_event(event, args) {\n        if (this.options['on_' + event]) {\n            this.options['on_' + event].apply(null, args);\n        }\n    }\n\n    /**\n     * Gets the oldest starting date from the list of tasks\n     *\n     * @returns Date\n     * @memberof Gantt\n     */\n    get_oldest_starting_date() {\n        return this.tasks\n            .map(task => task._start)\n            .reduce(\n                (prev_date, cur_date) =>\n                    cur_date <= prev_date ? cur_date : prev_date\n            );\n    }\n\n    /**\n     * Clear all elements from the parent svg element\n     *\n     * @memberof Gantt\n     */\n    clear() {\n        this.$svg.innerHTML = '';\n    }\n}\n\nGantt.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n    return (\n        task.name +\n        '_' +\n        Math.random()\n            .toString(36)\n            .slice(2, 12)\n    );\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","month_names","en","es","ru","ptBr","fr","tr","zh","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","milliseconds","seconds","hours","minutes","days","months","years","scale","endsWith","Math","floor","today","slice","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","month","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","matches","parentNode","getAttribute","Bar","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","date_utils","_end","_start","step","width","column_width","progress_width","progress","group","class","custom_class","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","draw_bar","draw_progress_bar","draw_label","draw_resize_handles","$bar","rx","ry","classList","$bar_progress","requestAnimationFrame","update_label_position","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","bar_being_dragged","subtitle","language","target_element","title","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","update_progressbar_position","update_arrow_position","changed","compute_start_end_date","new_start_date","new_end_date","Number","new_progress","compute_progress","setTimeout","x_in_units","gantt_start","width_in_units","task_start","view_is","header_height","padding","_index","dx","rem","odx","isNaN","label","getBBox","remove","handle","arrows","update","Arrow","from_task","to_task","calculate_path","start_x","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","Popup","parent","custom_html","make","hide","pointer","Error","position","position_meta","html","style","clientWidth","HTMLElement","getBoundingClientRect","top","transform","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","createElement","parentElement","popup_wrapper","default_options","view_modes","view_mode","date_format","custom_popup_html","assign","start","end","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","grid","rows_layer","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","tick_x","tick_y","tick_height","tick_class","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Day_lower","Week_lower","Month_lower","Year_lower","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","task_id","dependency","get_task","arrow","Boolean","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","is_dragging","x_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","contains","offsetX","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","get_snap_position","update_bar_position","date_changed","set_action_completed","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","progress_changed","out","to_process","acc","querySelectorAll","el","modes","Array","isArray","some","find","popup","show","args","apply","prev_date"],"sourceRoot":""}