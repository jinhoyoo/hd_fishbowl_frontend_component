{"version":3,"file":"static/js/166.b98ef74c.chunk.js","mappings":"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","sources":["../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/ModalContext.js"],"sourcesContent":["import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;"],"names":["activeElement","doc","ownerDocument","active","nodeName","e","body","manager","_excluded","useModalManager","provided","window","useWindow","modalManager","ModalManager","document","getManager","modal","useRef","dialog","backdrop","Object","assign","current","add","remove","isTopModal","setDialogRef","useCallback","ref","setBackdropRef","Modal","forwardRef","_ref","show","role","className","style","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","_jsx","providedManager","containerRef","container","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","useState","exited","setExited","lastFocusRef","useImperativeHandle","canUseDOM","handleShow","useEventCallback","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","useEffect","useWillUnmount","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","undefined","tabIndex","React","appear","unmountOnExit","in","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","OPEN_DATA_ATTRIBUTE","dataAttr","handleContainerOverflow","isRTL","this","modals","defaultView","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","_modal","containerState","overflow","paddingProp","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","removeAttribute","modalIdx","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","AbstractModalHeader","closeLabel","closeVariant","closeButton","context","useContext","ModalContext","handleClick","CloseButton","variant","defaultProps","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","prop","element","adjust","actual","dataset","parseFloat","value","classList","hasClass","baseVal","marginProp","qsa","el","adjustAndStore","restore","getSharedManager","options","propTypes","PropTypes","type","classNames"],"sourceRoot":""}